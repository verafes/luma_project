{"uid":"f48c29148e669f0b","name":"TC 02.01.04 - Check display of Search Terms link on each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_01_04_check_visibility_of_search_terms_link_on_pages","historyId":"04957da51532e075cd19971f325b23dd","time":{"start":1729906661286,"stop":1729906961324,"duration":300038},"description":"Checks if Search Terms link is visible on each page in DATA_1","descriptionHtml":"<p>Checks if Search Terms link is visible on each page in DATA_1</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.767\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55b9212e60aa <unknown>\n#1 0x55b920dfd1a0 <unknown>\n#2 0x55b920de5840 <unknown>\n#3 0x55b920de552d <unknown>\n#4 0x55b920de35bc <unknown>\n#5 0x55b920de3d6f <unknown>\n#6 0x55b920df31d7 <unknown>\n#7 0x55b920e091e4 <unknown>\n#8 0x55b920e0e51b <unknown>\n#9 0x55b920de447e <unknown>\n#10 0x55b920e08fee <unknown>\n#11 0x55b920e8cacb <unknown>\n#12 0x55b920e6db23 <unknown>\n#13 0x55b920e3c990 <unknown>\n#14 0x55b920e3d96e <unknown>\n#15 0x55b9212b216b <unknown>\n#16 0x55b9212b5f68 <unknown>\n#17 0x55b92129f64c <unknown>\n#18 0x55b9212b6ae7 <unknown>\n#19 0x55b9212844af <unknown>\n#20 0x55b9212d44f8 <unknown>\n#21 0x55b9212d46c0 <unknown>\n#22 0x55b9212e4f26 <unknown>\n#23 0x7fc323894ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7fd443b39d10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e5b3e2cb95c6dcaff78cd351f87332b9\")>\nURL = 'https://magento.softwaretestingboard.com/what-is-new.html'\n\n    @allure.title(\"TC 02.01.04 - Check display of Search Terms link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_04_check_visibility_of_search_terms_link_on_pages(self, driver, URL):\n        \"\"\"Checks if Search Terms link is visible on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n>       page.open()\n\ntests/test_footer.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd443977810>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x55b9212d46c0 \\\\u003Cunknown>\\\\n#22 0x55b9212e4f26 \\\\u003Cunknown>\\\\n#23 0x7fc323894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.767\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x55b9212e60aa <unknown>\nE       #1 0x55b920dfd1a0 <unknown>\nE       #2 0x55b920de5840 <unknown>\nE       #3 0x55b920de552d <unknown>\nE       #4 0x55b920de35bc <unknown>\nE       #5 0x55b920de3d6f <unknown>\nE       #6 0x55b920df31d7 <unknown>\nE       #7 0x55b920e091e4 <unknown>\nE       #8 0x55b920e0e51b <unknown>\nE       #9 0x55b920de447e <unknown>\nE       #10 0x55b920e08fee <unknown>\nE       #11 0x55b920e8cacb <unknown>\nE       #12 0x55b920e6db23 <unknown>\nE       #13 0x55b920e3c990 <unknown>\nE       #14 0x55b920e3d96e <unknown>\nE       #15 0x55b9212b216b <unknown>\nE       #16 0x55b9212b5f68 <unknown>\nE       #17 0x55b92129f64c <unknown>\nE       #18 0x55b9212b6ae7 <unknown>\nE       #19 0x55b9212844af <unknown>\nE       #20 0x55b9212d44f8 <unknown>\nE       #21 0x55b9212d46c0 <unknown>\nE       #22 0x55b9212e4f26 <unknown>\nE       #23 0x7fc323894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1729906514286,"stop":1729906514350,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"clear_allure_result_folder","time":{"start":1729906514350,"stop":1729906514351,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"driver","time":{"start":1729906660026,"stop":1729906661286,"duration":1260},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"testStage":{"description":"Checks if Search Terms link is visible on each page in DATA_1","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.767\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55b9212e60aa <unknown>\n#1 0x55b920dfd1a0 <unknown>\n#2 0x55b920de5840 <unknown>\n#3 0x55b920de552d <unknown>\n#4 0x55b920de35bc <unknown>\n#5 0x55b920de3d6f <unknown>\n#6 0x55b920df31d7 <unknown>\n#7 0x55b920e091e4 <unknown>\n#8 0x55b920e0e51b <unknown>\n#9 0x55b920de447e <unknown>\n#10 0x55b920e08fee <unknown>\n#11 0x55b920e8cacb <unknown>\n#12 0x55b920e6db23 <unknown>\n#13 0x55b920e3c990 <unknown>\n#14 0x55b920e3d96e <unknown>\n#15 0x55b9212b216b <unknown>\n#16 0x55b9212b5f68 <unknown>\n#17 0x55b92129f64c <unknown>\n#18 0x55b9212b6ae7 <unknown>\n#19 0x55b9212844af <unknown>\n#20 0x55b9212d44f8 <unknown>\n#21 0x55b9212d46c0 <unknown>\n#22 0x55b9212e4f26 <unknown>\n#23 0x7fc323894ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7fd443b39d10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e5b3e2cb95c6dcaff78cd351f87332b9\")>\nURL = 'https://magento.softwaretestingboard.com/what-is-new.html'\n\n    @allure.title(\"TC 02.01.04 - Check display of Search Terms link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_04_check_visibility_of_search_terms_link_on_pages(self, driver, URL):\n        \"\"\"Checks if Search Terms link is visible on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n>       page.open()\n\ntests/test_footer.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd443977810>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x55b9212d46c0 \\\\u003Cunknown>\\\\n#22 0x55b9212e4f26 \\\\u003Cunknown>\\\\n#23 0x7fc323894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.767\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x55b9212e60aa <unknown>\nE       #1 0x55b920dfd1a0 <unknown>\nE       #2 0x55b920de5840 <unknown>\nE       #3 0x55b920de552d <unknown>\nE       #4 0x55b920de35bc <unknown>\nE       #5 0x55b920de3d6f <unknown>\nE       #6 0x55b920df31d7 <unknown>\nE       #7 0x55b920e091e4 <unknown>\nE       #8 0x55b920e0e51b <unknown>\nE       #9 0x55b920de447e <unknown>\nE       #10 0x55b920e08fee <unknown>\nE       #11 0x55b920e8cacb <unknown>\nE       #12 0x55b920e6db23 <unknown>\nE       #13 0x55b920e3c990 <unknown>\nE       #14 0x55b920e3d96e <unknown>\nE       #15 0x55b9212b216b <unknown>\nE       #16 0x55b9212b5f68 <unknown>\nE       #17 0x55b92129f64c <unknown>\nE       #18 0x55b9212b6ae7 <unknown>\nE       #19 0x55b9212844af <unknown>\nE       #20 0x55b9212d44f8 <unknown>\nE       #21 0x55b9212d46c0 <unknown>\nE       #22 0x55b9212e4f26 <unknown>\nE       #23 0x7fc323894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Open a browser","time":{"start":1729906661286,"stop":1729906961323,"duration":300037},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.767\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55b9212e60aa <unknown>\n#1 0x55b920dfd1a0 <unknown>\n#2 0x55b920de5840 <unknown>\n#3 0x55b920de552d <unknown>\n#4 0x55b920de35bc <unknown>\n#5 0x55b920de3d6f <unknown>\n#6 0x55b920df31d7 <unknown>\n#7 0x55b920e091e4 <unknown>\n#8 0x55b920e0e51b <unknown>\n#9 0x55b920de447e <unknown>\n#10 0x55b920e08fee <unknown>\n#11 0x55b920e8cacb <unknown>\n#12 0x55b920e6db23 <unknown>\n#13 0x55b920e3c990 <unknown>\n#14 0x55b920e3d96e <unknown>\n#15 0x55b9212b216b <unknown>\n#16 0x55b9212b5f68 <unknown>\n#17 0x55b92129f64c <unknown>\n#18 0x55b9212b6ae7 <unknown>\n#19 0x55b9212844af <unknown>\n#20 0x55b9212d44f8 <unknown>\n#21 0x55b9212d46c0 <unknown>\n#22 0x55b9212e4f26 <unknown>\n#23 0x7fc323894ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 19, in open\n    self.driver.get(self.url)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[{"name":"driver::0","time":{"start":1729907261401,"stop":1729907261505,"duration":104},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"clear_allure_result_folder::0","time":{"start":1729909344453,"stop":1729909344453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az773-590"},{"name":"thread","value":"2905-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/what-is-new.html'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"13b087f97142a633","reportUrl":"https://verafes.github.io/luma_project/474//#testresult/13b087f97142a633","status":"passed","time":{"start":1729821022653,"stop":1729821024772,"duration":2119}},{"uid":"bd63bf691fa191eb","reportUrl":"https://verafes.github.io/luma_project/473//#testresult/bd63bf691fa191eb","status":"passed","time":{"start":1729734016718,"stop":1729734018997,"duration":2279}},{"uid":"7d0774d2b1510530","reportUrl":"https://verafes.github.io/luma_project/472//#testresult/7d0774d2b1510530","status":"passed","time":{"start":1729647606438,"stop":1729647609218,"duration":2780}},{"uid":"879ed2f3f037f487","reportUrl":"https://verafes.github.io/luma_project/471//#testresult/879ed2f3f037f487","status":"passed","time":{"start":1729561272060,"stop":1729561274370,"duration":2310}},{"uid":"286b42324b311baa","reportUrl":"https://verafes.github.io/luma_project/470//#testresult/286b42324b311baa","status":"passed","time":{"start":1729474940940,"stop":1729474942604,"duration":1664}},{"uid":"254da1b243682456","reportUrl":"https://verafes.github.io/luma_project/469//#testresult/254da1b243682456","status":"passed","time":{"start":1729388843975,"stop":1729388846100,"duration":2125}}]},"tags":[]},"source":"f48c29148e669f0b.json","parameterValues":["'https://magento.softwaretestingboard.com/what-is-new.html'"]}