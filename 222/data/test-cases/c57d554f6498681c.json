{"uid":"c57d554f6498681c","name":"TC 13.01.43 - Check section 2 in the Promo Block is present in the DOM tree","fullName":"tests.test_main_page.TestPromoBlock#test_tc_13_01_43_check_section2_is_present","historyId":"9904c77bd1cad8af40ab427267be1a3c","time":{"start":1708046448722,"stop":1708046453834,"duration":5112},"description":"This test checks if section 2 in the Promo Block is present in the DOM tree on the main page","descriptionHtml":"<p>This test checks if section 2 in the Promo Block is present in the DOM tree on the main page</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\n  (failed to check if window was closed: disconnected: not connected to DevTools)\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x5581dcb3ed93 <unknown>\n#1 0x5581dc822337 <unknown>\n#2 0x5581dc808846 <unknown>\n#3 0x5581dc8086f3 <unknown>\n#4 0x5581dc824552 <unknown>\n#5 0x5581dc8aeab8 <unknown>\n#6 0x5581dc8901e3 <unknown>\n#7 0x5581dc860135 <unknown>\n#8 0x5581dc86113e <unknown>\n#9 0x5581dcb02e4b <unknown>\n#10 0x5581dcb06dfa <unknown>\n#11 0x5581dcaef6d5 <unknown>\n#12 0x5581dcb07a6f <unknown>\n#13 0x5581dcad369f <unknown>\n#14 0x5581dcb2c098 <unknown>\n#15 0x5581dcb2c262 <unknown>\n#16 0x5581dcb3df34 <unknown>\n#17 0x7f598f694ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestPromoBlock object at 0x7fd6a79b2690>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cb98ddd63e1143905899f4b96bd3070a\")>\n\n    @allure.title(\"TC 13.01.43 - Check section 2 in the Promo Block is present in the DOM tree\")\n    def test_tc_13_01_43_check_section2_is_present(self, driver):\n        \"\"\"This test checks if section 2 in the Promo Block is present in the DOM tree on the main page\"\"\"\n        page = PromoBlock(driver, MAIN_PAGE_URL)\n        page.open()\n>       section2 = page.check_section2_is_present()\n\ntests/test_main_page.py:572: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:201: in check_section2_is_present\n    return self.element_is_present(self.locators.SECTION_2)\npages/base_page.py:50: in element_is_present\n    return wait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:86: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:81: in _predicate\n    return driver.find_element(*locator)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd6a9666690>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"disconnected\",\"message\":\"disconnected: not connected to DevTools\\\\n  (fai...\\\\n#15 0x5581dcb2c262 \\\\u003Cunknown>\\\\n#16 0x5581dcb3df34 \\\\u003Cunknown>\\\\n#17 0x7f598f694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\nE         (failed to check if window was closed: disconnected: not connected to DevTools)\nE         (Session info: chrome=121.0.6167.160)\nE       Stacktrace:\nE       #0 0x5581dcb3ed93 <unknown>\nE       #1 0x5581dc822337 <unknown>\nE       #2 0x5581dc808846 <unknown>\nE       #3 0x5581dc8086f3 <unknown>\nE       #4 0x5581dc824552 <unknown>\nE       #5 0x5581dc8aeab8 <unknown>\nE       #6 0x5581dc8901e3 <unknown>\nE       #7 0x5581dc860135 <unknown>\nE       #8 0x5581dc86113e <unknown>\nE       #9 0x5581dcb02e4b <unknown>\nE       #10 0x5581dcb06dfa <unknown>\nE       #11 0x5581dcaef6d5 <unknown>\nE       #12 0x5581dcb07a6f <unknown>\nE       #13 0x5581dcad369f <unknown>\nE       #14 0x5581dcb2c098 <unknown>\nE       #15 0x5581dcb2c262 <unknown>\nE       #16 0x5581dcb3df34 <unknown>\nE       #17 0x7f598f694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1708045702286,"stop":1708045702351,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1708045702351,"stop":1708045702351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1708046447751,"stop":1708046448721,"duration":970},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"This test checks if section 2 in the Promo Block is present in the DOM tree on the main page","status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\n  (failed to check if window was closed: disconnected: not connected to DevTools)\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x5581dcb3ed93 <unknown>\n#1 0x5581dc822337 <unknown>\n#2 0x5581dc808846 <unknown>\n#3 0x5581dc8086f3 <unknown>\n#4 0x5581dc824552 <unknown>\n#5 0x5581dc8aeab8 <unknown>\n#6 0x5581dc8901e3 <unknown>\n#7 0x5581dc860135 <unknown>\n#8 0x5581dc86113e <unknown>\n#9 0x5581dcb02e4b <unknown>\n#10 0x5581dcb06dfa <unknown>\n#11 0x5581dcaef6d5 <unknown>\n#12 0x5581dcb07a6f <unknown>\n#13 0x5581dcad369f <unknown>\n#14 0x5581dcb2c098 <unknown>\n#15 0x5581dcb2c262 <unknown>\n#16 0x5581dcb3df34 <unknown>\n#17 0x7f598f694ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestPromoBlock object at 0x7fd6a79b2690>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cb98ddd63e1143905899f4b96bd3070a\")>\n\n    @allure.title(\"TC 13.01.43 - Check section 2 in the Promo Block is present in the DOM tree\")\n    def test_tc_13_01_43_check_section2_is_present(self, driver):\n        \"\"\"This test checks if section 2 in the Promo Block is present in the DOM tree on the main page\"\"\"\n        page = PromoBlock(driver, MAIN_PAGE_URL)\n        page.open()\n>       section2 = page.check_section2_is_present()\n\ntests/test_main_page.py:572: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:201: in check_section2_is_present\n    return self.element_is_present(self.locators.SECTION_2)\npages/base_page.py:50: in element_is_present\n    return wait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:86: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:81: in _predicate\n    return driver.find_element(*locator)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd6a9666690>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"disconnected\",\"message\":\"disconnected: not connected to DevTools\\\\n  (fai...\\\\n#15 0x5581dcb2c262 \\\\u003Cunknown>\\\\n#16 0x5581dcb3df34 \\\\u003Cunknown>\\\\n#17 0x7f598f694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\nE         (failed to check if window was closed: disconnected: not connected to DevTools)\nE         (Session info: chrome=121.0.6167.160)\nE       Stacktrace:\nE       #0 0x5581dcb3ed93 <unknown>\nE       #1 0x5581dc822337 <unknown>\nE       #2 0x5581dc808846 <unknown>\nE       #3 0x5581dc8086f3 <unknown>\nE       #4 0x5581dc824552 <unknown>\nE       #5 0x5581dc8aeab8 <unknown>\nE       #6 0x5581dc8901e3 <unknown>\nE       #7 0x5581dc860135 <unknown>\nE       #8 0x5581dc86113e <unknown>\nE       #9 0x5581dcb02e4b <unknown>\nE       #10 0x5581dcb06dfa <unknown>\nE       #11 0x5581dcaef6d5 <unknown>\nE       #12 0x5581dcb07a6f <unknown>\nE       #13 0x5581dcad369f <unknown>\nE       #14 0x5581dcb2c098 <unknown>\nE       #15 0x5581dcb2c262 <unknown>\nE       #16 0x5581dcb3df34 <unknown>\nE       #17 0x7f598f694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","steps":[{"name":"Open a browser","time":{"start":1708046448722,"stop":1708046453817,"duration":5095},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check section 2 in the Promo Block is present in the DOM tree","time":{"start":1708046453817,"stop":1708046453833,"duration":16},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\n  (failed to check if window was closed: disconnected: not connected to DevTools)\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x5581dcb3ed93 <unknown>\n#1 0x5581dc822337 <unknown>\n#2 0x5581dc808846 <unknown>\n#3 0x5581dc8086f3 <unknown>\n#4 0x5581dc824552 <unknown>\n#5 0x5581dc8aeab8 <unknown>\n#6 0x5581dc8901e3 <unknown>\n#7 0x5581dc860135 <unknown>\n#8 0x5581dc86113e <unknown>\n#9 0x5581dcb02e4b <unknown>\n#10 0x5581dcb06dfa <unknown>\n#11 0x5581dcaef6d5 <unknown>\n#12 0x5581dcb07a6f <unknown>\n#13 0x5581dcad369f <unknown>\n#14 0x5581dcb2c098 <unknown>\n#15 0x5581dcb2c262 <unknown>\n#16 0x5581dcb3df34 <unknown>\n#17 0x7f598f694ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/main_page.py\", line 201, in check_section2_is_present\n    return self.element_is_present(self.locators.SECTION_2)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 50, in element_is_present\n    return wait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 86, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 81, in _predicate\n    return driver.find_element(*locator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 738, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a present element","time":{"start":1708046453817,"stop":1708046453833,"duration":16},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\n  (failed to check if window was closed: disconnected: not connected to DevTools)\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x5581dcb3ed93 <unknown>\n#1 0x5581dc822337 <unknown>\n#2 0x5581dc808846 <unknown>\n#3 0x5581dc8086f3 <unknown>\n#4 0x5581dc824552 <unknown>\n#5 0x5581dc8aeab8 <unknown>\n#6 0x5581dc8901e3 <unknown>\n#7 0x5581dc860135 <unknown>\n#8 0x5581dc86113e <unknown>\n#9 0x5581dcb02e4b <unknown>\n#10 0x5581dcb06dfa <unknown>\n#11 0x5581dcaef6d5 <unknown>\n#12 0x5581dcb07a6f <unknown>\n#13 0x5581dcad369f <unknown>\n#14 0x5581dcb2c098 <unknown>\n#15 0x5581dcb2c262 <unknown>\n#16 0x5581dcb3df34 <unknown>\n#17 0x7f598f694ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 50, in element_is_present\n    return wait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 86, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 81, in _predicate\n    return driver.find_element(*locator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 738, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.blocks-promo > div')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1708046453879,"stop":1708046453889,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1708047060900,"stop":1708047060900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Promo Block Testing"},{"name":"epic","value":"Main Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az1493-410"},{"name":"thread","value":"2974-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":5,"unknown":0,"total":6},"items":[{"uid":"aa09d14bedbbdfa3","reportUrl":"https://verafes.github.io/luma_project/221//#testresult/aa09d14bedbbdfa3","status":"passed","time":{"start":1707960027627,"stop":1707960028402,"duration":775}},{"uid":"4152bbdb060ba90a","reportUrl":"https://verafes.github.io/luma_project/220//#testresult/4152bbdb060ba90a","status":"passed","time":{"start":1707873666572,"stop":1707873667362,"duration":790}},{"uid":"3f6316c8d16fea50","reportUrl":"https://verafes.github.io/luma_project/219//#testresult/3f6316c8d16fea50","status":"passed","time":{"start":1707787302763,"stop":1707787303765,"duration":1002}},{"uid":"50d52d39d6642cab","reportUrl":"https://verafes.github.io/luma_project/218//#testresult/50d52d39d6642cab","status":"passed","time":{"start":1707700804291,"stop":1707700805076,"duration":785}},{"uid":"4f9914273c55048b","reportUrl":"https://verafes.github.io/luma_project/217//#testresult/4f9914273c55048b","status":"passed","time":{"start":1707614748943,"stop":1707614749714,"duration":771}}]},"tags":[]},"source":"c57d554f6498681c.json","parameterValues":[]}