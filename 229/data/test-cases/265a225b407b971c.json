{"uid":"265a225b407b971c","name":"TC 02.02.01 - Check Search Terms link in footer leads to the correct page from each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_02_01_check_search_terms_link_functionality","historyId":"6772a7bee679b0c9152ac6f360d80238","time":{"start":1708650702211,"stop":1708650703063,"duration":852},"description":"Check that Search Terms link in footer is correct","descriptionHtml":"<p>Check that Search Terms link in footer is correct</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55925559d303 <unknown>\n#1 0x5592552822b7 <unknown>\n#2 0x5592552cf118 <unknown>\n#3 0x5592552c2617 <unknown>\n#4 0x5592552f0382 <unknown>\n#5 0x5592552c1f88 <unknown>\n#6 0x5592552f054e <unknown>\n#7 0x55925530f07c <unknown>\n#8 0x5592552f0123 <unknown>\n#9 0x5592552c0095 <unknown>\n#10 0x5592552c109e <unknown>\n#11 0x5592555616ab <unknown>\n#12 0x5592555654ba <unknown>\n#13 0x55925554df85 <unknown>\n#14 0x55925556612f <unknown>\n#15 0x559255531e6f <unknown>\n#16 0x55925558a5f8 <unknown>\n#17 0x55925558a7c2 <unknown>\n#18 0x55925559c4a4 <unknown>\n#19 0x7fe13ec94ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7fde3b06df10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7bd42fad11ba763dd514eb9797698247\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.02.01 - Check Search Terms link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_01_check_search_terms_link_functionality(self, driver, URL):\n        \"\"\"Check that Search Terms link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fde3aece690>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x55925558a7c2 \\\\u003Cunknown>\\\\n#18 0x55925559c4a4 \\\\u003Cunknown>\\\\n#19 0x7fe13ec94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.184)\nE       Stacktrace:\nE       #0 0x55925559d303 <unknown>\nE       #1 0x5592552822b7 <unknown>\nE       #2 0x5592552cf118 <unknown>\nE       #3 0x5592552c2617 <unknown>\nE       #4 0x5592552f0382 <unknown>\nE       #5 0x5592552c1f88 <unknown>\nE       #6 0x5592552f054e <unknown>\nE       #7 0x55925530f07c <unknown>\nE       #8 0x5592552f0123 <unknown>\nE       #9 0x5592552c0095 <unknown>\nE       #10 0x5592552c109e <unknown>\nE       #11 0x5592555616ab <unknown>\nE       #12 0x5592555654ba <unknown>\nE       #13 0x55925554df85 <unknown>\nE       #14 0x55925556612f <unknown>\nE       #15 0x559255531e6f <unknown>\nE       #16 0x55925558a5f8 <unknown>\nE       #17 0x55925558a7c2 <unknown>\nE       #18 0x55925559c4a4 <unknown>\nE       #19 0x7fe13ec94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1708650412827,"stop":1708650412890,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1708650412890,"stop":1708650412890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1708650701183,"stop":1708650702211,"duration":1028},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check that Search Terms link in footer is correct","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55925559d303 <unknown>\n#1 0x5592552822b7 <unknown>\n#2 0x5592552cf118 <unknown>\n#3 0x5592552c2617 <unknown>\n#4 0x5592552f0382 <unknown>\n#5 0x5592552c1f88 <unknown>\n#6 0x5592552f054e <unknown>\n#7 0x55925530f07c <unknown>\n#8 0x5592552f0123 <unknown>\n#9 0x5592552c0095 <unknown>\n#10 0x5592552c109e <unknown>\n#11 0x5592555616ab <unknown>\n#12 0x5592555654ba <unknown>\n#13 0x55925554df85 <unknown>\n#14 0x55925556612f <unknown>\n#15 0x559255531e6f <unknown>\n#16 0x55925558a5f8 <unknown>\n#17 0x55925558a7c2 <unknown>\n#18 0x55925559c4a4 <unknown>\n#19 0x7fe13ec94ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7fde3b06df10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7bd42fad11ba763dd514eb9797698247\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.02.01 - Check Search Terms link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_01_check_search_terms_link_functionality(self, driver, URL):\n        \"\"\"Check that Search Terms link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fde3aece690>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x55925558a7c2 \\\\u003Cunknown>\\\\n#18 0x55925559c4a4 \\\\u003Cunknown>\\\\n#19 0x7fe13ec94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.184)\nE       Stacktrace:\nE       #0 0x55925559d303 <unknown>\nE       #1 0x5592552822b7 <unknown>\nE       #2 0x5592552cf118 <unknown>\nE       #3 0x5592552c2617 <unknown>\nE       #4 0x5592552f0382 <unknown>\nE       #5 0x5592552c1f88 <unknown>\nE       #6 0x5592552f054e <unknown>\nE       #7 0x55925530f07c <unknown>\nE       #8 0x5592552f0123 <unknown>\nE       #9 0x5592552c0095 <unknown>\nE       #10 0x5592552c109e <unknown>\nE       #11 0x5592555616ab <unknown>\nE       #12 0x5592555654ba <unknown>\nE       #13 0x55925554df85 <unknown>\nE       #14 0x55925556612f <unknown>\nE       #15 0x559255531e6f <unknown>\nE       #16 0x55925558a5f8 <unknown>\nE       #17 0x55925558a7c2 <unknown>\nE       #18 0x55925559c4a4 <unknown>\nE       #19 0x7fe13ec94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Open a browser","time":{"start":1708650702212,"stop":1708650703008,"duration":796},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check Search Terms link leads to the correct page","time":{"start":1708650703008,"stop":1708650703062,"duration":54},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55925559d303 <unknown>\n#1 0x5592552822b7 <unknown>\n#2 0x5592552cf118 <unknown>\n#3 0x5592552c2617 <unknown>\n#4 0x5592552f0382 <unknown>\n#5 0x5592552c1f88 <unknown>\n#6 0x5592552f054e <unknown>\n#7 0x55925530f07c <unknown>\n#8 0x5592552f0123 <unknown>\n#9 0x5592552c0095 <unknown>\n#10 0x5592552c109e <unknown>\n#11 0x5592555616ab <unknown>\n#12 0x5592555654ba <unknown>\n#13 0x55925554df85 <unknown>\n#14 0x55925556612f <unknown>\n#15 0x559255531e6f <unknown>\n#16 0x55925558a5f8 <unknown>\n#17 0x55925558a7c2 <unknown>\n#18 0x55925559c4a4 <unknown>\n#19 0x7fe13ec94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/footer_page.py\", line 279, in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1708650703008,"stop":1708650703043,"duration":35},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1708650703008,"stop":1708650703018,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1708650703018,"stop":1708650703022,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"7bd42fad11ba763dd514eb9797698247\", element=\"E717C20814CA596AB823637F75EC9C74_element_15\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cb78c2ba59811a89","name":"Screenshot","source":"cb78c2ba59811a89.png","type":"image/png","size":131690},{"uid":"db33bc414e0b7c0e","name":"HTML source","source":"db33bc414e0b7c0e.html","type":"text/html","size":92738}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1708650703310,"stop":1708650703377,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1708651703415,"stop":1708651703415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az569-89"},{"name":"thread","value":"3002-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"73ce4f0e4f772592","reportUrl":"https://verafes.github.io/luma_project/228//#testresult/73ce4f0e4f772592","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55e8a5e69303 <unknown>\n#1 0x55e8a5b4e2b7 <unknown>\n#2 0x55e8a5b9b118 <unknown>\n#3 0x55e8a5b8e617 <unknown>\n#4 0x55e8a5bbc382 <unknown>\n#5 0x55e8a5b8df88 <unknown>\n#6 0x55e8a5bbc54e <unknown>\n#7 0x55e8a5bdb07c <unknown>\n#8 0x55e8a5bbc123 <unknown>\n#9 0x55e8a5b8c095 <unknown>\n#10 0x55e8a5b8d09e <unknown>\n#11 0x55e8a5e2d6ab <unknown>\n#12 0x55e8a5e314ba <unknown>\n#13 0x55e8a5e19f85 <unknown>\n#14 0x55e8a5e3212f <unknown>\n#15 0x55e8a5dfde6f <unknown>\n#16 0x55e8a5e565f8 <unknown>\n#17 0x55e8a5e567c2 <unknown>\n#18 0x55e8a5e684a4 <unknown>\n#19 0x7f0b05094ac3 <unknown>","time":{"start":1708564370696,"stop":1708564371636,"duration":940}},{"uid":"d4cfa80a479c2671","reportUrl":"https://verafes.github.io/luma_project/227//#testresult/d4cfa80a479c2671","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x558b639bfd93 <unknown>\n#1 0x558b636a3337 <unknown>\n#2 0x558b636f01b9 <unknown>\n#3 0x558b636e36b7 <unknown>\n#4 0x558b63711442 <unknown>\n#5 0x558b636e3028 <unknown>\n#6 0x558b6371160e <unknown>\n#7 0x558b6373012d <unknown>\n#8 0x558b637111e3 <unknown>\n#9 0x558b636e1135 <unknown>\n#10 0x558b636e213e <unknown>\n#11 0x558b63983e4b <unknown>\n#12 0x558b63987dfa <unknown>\n#13 0x558b639706d5 <unknown>\n#14 0x558b63988a6f <unknown>\n#15 0x558b6395469f <unknown>\n#16 0x558b639ad098 <unknown>\n#17 0x558b639ad262 <unknown>\n#18 0x558b639bef34 <unknown>\n#19 0x7eff46294ac3 <unknown>","time":{"start":1708478052098,"stop":1708478053547,"duration":1449}},{"uid":"749cde5ca2fcfc05","reportUrl":"https://verafes.github.io/luma_project/226//#testresult/749cde5ca2fcfc05","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x5575f0b93d93 <unknown>\n#1 0x5575f0877337 <unknown>\n#2 0x5575f08c41b9 <unknown>\n#3 0x5575f08b76b7 <unknown>\n#4 0x5575f08e5442 <unknown>\n#5 0x5575f08b7028 <unknown>\n#6 0x5575f08e560e <unknown>\n#7 0x5575f090412d <unknown>\n#8 0x5575f08e51e3 <unknown>\n#9 0x5575f08b5135 <unknown>\n#10 0x5575f08b613e <unknown>\n#11 0x5575f0b57e4b <unknown>\n#12 0x5575f0b5bdfa <unknown>\n#13 0x5575f0b446d5 <unknown>\n#14 0x5575f0b5ca6f <unknown>\n#15 0x5575f0b2869f <unknown>\n#16 0x5575f0b81098 <unknown>\n#17 0x5575f0b81262 <unknown>\n#18 0x5575f0b92f34 <unknown>\n#19 0x7fe6a5e94ac3 <unknown>","time":{"start":1708391510926,"stop":1708391511873,"duration":947}},{"uid":"c076269bbcfa47d2","reportUrl":"https://verafes.github.io/luma_project/225//#testresult/c076269bbcfa47d2","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x564cae76ed93 <unknown>\n#1 0x564cae452337 <unknown>\n#2 0x564cae49f1b9 <unknown>\n#3 0x564cae4926b7 <unknown>\n#4 0x564cae4c0442 <unknown>\n#5 0x564cae492028 <unknown>\n#6 0x564cae4c060e <unknown>\n#7 0x564cae4df12d <unknown>\n#8 0x564cae4c01e3 <unknown>\n#9 0x564cae490135 <unknown>\n#10 0x564cae49113e <unknown>\n#11 0x564cae732e4b <unknown>\n#12 0x564cae736dfa <unknown>\n#13 0x564cae71f6d5 <unknown>\n#14 0x564cae737a6f <unknown>\n#15 0x564cae70369f <unknown>\n#16 0x564cae75c098 <unknown>\n#17 0x564cae75c262 <unknown>\n#18 0x564cae76df34 <unknown>\n#19 0x7f05d3e94ac3 <unknown>","time":{"start":1708305261724,"stop":1708305262766,"duration":1042}},{"uid":"afff0d45af2435d7","reportUrl":"https://verafes.github.io/luma_project/224//#testresult/afff0d45af2435d7","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x563569c94d93 <unknown>\n#1 0x563569978337 <unknown>\n#2 0x5635699c51b9 <unknown>\n#3 0x5635699b86b7 <unknown>\n#4 0x5635699e6442 <unknown>\n#5 0x5635699b8028 <unknown>\n#6 0x5635699e660e <unknown>\n#7 0x563569a0512d <unknown>\n#8 0x5635699e61e3 <unknown>\n#9 0x5635699b6135 <unknown>\n#10 0x5635699b713e <unknown>\n#11 0x563569c58e4b <unknown>\n#12 0x563569c5cdfa <unknown>\n#13 0x563569c456d5 <unknown>\n#14 0x563569c5da6f <unknown>\n#15 0x563569c2969f <unknown>\n#16 0x563569c82098 <unknown>\n#17 0x563569c82262 <unknown>\n#18 0x563569c93f34 <unknown>\n#19 0x7f499d894ac3 <unknown>","time":{"start":1708219028436,"stop":1708219029364,"duration":928}}]},"tags":[]},"source":"265a225b407b971c.json","parameterValues":["'https://magento.softwaretestingboard.com/'"]}