{"uid":"3e3a5dd1a32d9229","name":"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_01_32_check_text_of_write_for_us_link_on_pages","historyId":"27d4644d484c5fead378278f7d4af6ee","time":{"start":1706750127586,"stop":1706750128374,"duration":788},"description":"Checks if text of Write for us link is correct on each page in DATA_1","descriptionHtml":"<p>Checks if text of Write for us link is correct on each page in DATA_1</p>\n","status":"failed","statusMessage":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7f9643e83590>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"19e4c59921b97bfb764aa1b7bba2c686\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1706749949217,"stop":1706749949280,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1706749949280,"stop":1706749949281,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1706750126562,"stop":1706750127585,"duration":1023},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Checks if text of Write for us link is correct on each page in DATA_1","status":"failed","statusMessage":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7f9643e83590>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"19e4c59921b97bfb764aa1b7bba2c686\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","steps":[{"name":"Open a browser","time":{"start":1706750127586,"stop":1706750128319,"duration":733},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check the text of Write for us link","time":{"start":1706750128319,"stop":1706750128373,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"fc79d5e4523bfd4c","name":"Screenshot","source":"fc79d5e4523bfd4c.png","type":"image/png","size":657669},{"uid":"7d8b9d3170d45495","name":"HTML source","source":"7d8b9d3170d45495.html","type":"text/html","size":117867}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1706750128721,"stop":1706750128790,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1706751183080,"stop":1706751183080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az693-28"},{"name":"thread","value":"3055-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"b780fb8ed324dcde","reportUrl":"https://verafes.github.io/luma_project/206//#testresult/b780fb8ed324dcde","status":"failed","statusDetails":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1706663577281,"stop":1706663578339,"duration":1058}},{"uid":"35e8e824b723973a","reportUrl":"https://verafes.github.io/luma_project/205//#testresult/35e8e824b723973a","status":"failed","statusDetails":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1706577100108,"stop":1706577101003,"duration":895}},{"uid":"5c4596137639cec1","reportUrl":"https://verafes.github.io/luma_project/204//#testresult/5c4596137639cec1","status":"failed","statusDetails":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1706490736449,"stop":1706490737410,"duration":961}},{"uid":"5f3a86193dc38260","reportUrl":"https://verafes.github.io/luma_project/203//#testresult/5f3a86193dc38260","status":"failed","statusDetails":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1706404589651,"stop":1706404590422,"duration":771}}]},"tags":[]},"source":"3e3a5dd1a32d9229.json","parameterValues":["'https://magento.softwaretestingboard.com/'"]}