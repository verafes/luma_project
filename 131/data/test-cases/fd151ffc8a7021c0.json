{"uid":"fd151ffc8a7021c0","name":"test_check_card_price","fullName":"tests.test_main_page.TestHotSellerSection#test_check_card_price","historyId":"f4026d9f96acc9996f781ecba7818e56","time":{"start":1700184211189,"stop":1700184212221,"duration":1032},"description":"This test checks that the card has a price and a price in USD","descriptionHtml":"<p>This test checks that the card has a price and a price in USD</p>\n","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55613dd35fb3 <unknown>\n#1 0x55613da094a7 <unknown>\n#2 0x55613da0e509 <unknown>\n#3 0x55613da10120 <unknown>\n#4 0x55613da101dc <unknown>\n#5 0x55613da4b782 <unknown>\n#6 0x55613da72942 <unknown>\n#7 0x55613da46776 <unknown>\n#8 0x55613da72b0e <unknown>\n#9 0x55613da8bc02 <unknown>\n#10 0x55613da72713 <unknown>\n#11 0x55613da4518b <unknown>\n#12 0x55613da45f7e <unknown>\n#13 0x55613dcfb8d8 <unknown>\n#14 0x55613dcff800 <unknown>\n#15 0x55613dd09cfc <unknown>\n#16 0x55613dd00418 <unknown>\n#17 0x55613dccd42f <unknown>\n#18 0x55613dd244e8 <unknown>\n#19 0x55613dd246b4 <unknown>\n#20 0x55613dd35143 <unknown>\n#21 0x7f9d6de94ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7fc595e65ed0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d08ca73ca05d9fc34658047ee43ad21b\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    def test_check_card_price(self, driver):\n        \"\"\"This test checks that the card has a price and a price in USD\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       text = page.check_card_price()\n\ntests/test_main_page.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:49: in check_card_price\n    text = self.get_text(self.locators.CARD_PRICE)\npages/base_page.py:145: in get_text\n    return text.text\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc597be1850>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55613dd246b4 \\\\u003Cunknown>\\\\n#20 0x55613dd35143 \\\\u003Cunknown>\\\\n#21 0x7f9d6de94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55613dd35fb3 <unknown>\nE       #1 0x55613da094a7 <unknown>\nE       #2 0x55613da0e509 <unknown>\nE       #3 0x55613da10120 <unknown>\nE       #4 0x55613da101dc <unknown>\nE       #5 0x55613da4b782 <unknown>\nE       #6 0x55613da72942 <unknown>\nE       #7 0x55613da46776 <unknown>\nE       #8 0x55613da72b0e <unknown>\nE       #9 0x55613da8bc02 <unknown>\nE       #10 0x55613da72713 <unknown>\nE       #11 0x55613da4518b <unknown>\nE       #12 0x55613da45f7e <unknown>\nE       #13 0x55613dcfb8d8 <unknown>\nE       #14 0x55613dcff800 <unknown>\nE       #15 0x55613dd09cfc <unknown>\nE       #16 0x55613dd00418 <unknown>\nE       #17 0x55613dccd42f <unknown>\nE       #18 0x55613dd244e8 <unknown>\nE       #19 0x55613dd246b4 <unknown>\nE       #20 0x55613dd35143 <unknown>\nE       #21 0x7f9d6de94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1700183584670,"stop":1700183584733,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_result_folder","time":{"start":1700183584733,"stop":1700183584734,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1700184210251,"stop":1700184211188,"duration":937},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"This test checks that the card has a price and a price in USD","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55613dd35fb3 <unknown>\n#1 0x55613da094a7 <unknown>\n#2 0x55613da0e509 <unknown>\n#3 0x55613da10120 <unknown>\n#4 0x55613da101dc <unknown>\n#5 0x55613da4b782 <unknown>\n#6 0x55613da72942 <unknown>\n#7 0x55613da46776 <unknown>\n#8 0x55613da72b0e <unknown>\n#9 0x55613da8bc02 <unknown>\n#10 0x55613da72713 <unknown>\n#11 0x55613da4518b <unknown>\n#12 0x55613da45f7e <unknown>\n#13 0x55613dcfb8d8 <unknown>\n#14 0x55613dcff800 <unknown>\n#15 0x55613dd09cfc <unknown>\n#16 0x55613dd00418 <unknown>\n#17 0x55613dccd42f <unknown>\n#18 0x55613dd244e8 <unknown>\n#19 0x55613dd246b4 <unknown>\n#20 0x55613dd35143 <unknown>\n#21 0x7f9d6de94ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7fc595e65ed0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d08ca73ca05d9fc34658047ee43ad21b\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    def test_check_card_price(self, driver):\n        \"\"\"This test checks that the card has a price and a price in USD\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       text = page.check_card_price()\n\ntests/test_main_page.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:49: in check_card_price\n    text = self.get_text(self.locators.CARD_PRICE)\npages/base_page.py:145: in get_text\n    return text.text\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc597be1850>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55613dd246b4 \\\\u003Cunknown>\\\\n#20 0x55613dd35143 \\\\u003Cunknown>\\\\n#21 0x7f9d6de94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55613dd35fb3 <unknown>\nE       #1 0x55613da094a7 <unknown>\nE       #2 0x55613da0e509 <unknown>\nE       #3 0x55613da10120 <unknown>\nE       #4 0x55613da101dc <unknown>\nE       #5 0x55613da4b782 <unknown>\nE       #6 0x55613da72942 <unknown>\nE       #7 0x55613da46776 <unknown>\nE       #8 0x55613da72b0e <unknown>\nE       #9 0x55613da8bc02 <unknown>\nE       #10 0x55613da72713 <unknown>\nE       #11 0x55613da4518b <unknown>\nE       #12 0x55613da45f7e <unknown>\nE       #13 0x55613dcfb8d8 <unknown>\nE       #14 0x55613dcff800 <unknown>\nE       #15 0x55613dd09cfc <unknown>\nE       #16 0x55613dd00418 <unknown>\nE       #17 0x55613dccd42f <unknown>\nE       #18 0x55613dd244e8 <unknown>\nE       #19 0x55613dd246b4 <unknown>\nE       #20 0x55613dd35143 <unknown>\nE       #21 0x7f9d6de94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Open a browser","time":{"start":1700184211189,"stop":1700184212090,"duration":901},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Get element text","time":{"start":1700184212090,"stop":1700184212219,"duration":129},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55613dd35fb3 <unknown>\n#1 0x55613da094a7 <unknown>\n#2 0x55613da0e509 <unknown>\n#3 0x55613da10120 <unknown>\n#4 0x55613da101dc <unknown>\n#5 0x55613da4b782 <unknown>\n#6 0x55613da72942 <unknown>\n#7 0x55613da46776 <unknown>\n#8 0x55613da72b0e <unknown>\n#9 0x55613da8bc02 <unknown>\n#10 0x55613da72713 <unknown>\n#11 0x55613da4518b <unknown>\n#12 0x55613da45f7e <unknown>\n#13 0x55613dcfb8d8 <unknown>\n#14 0x55613dcff800 <unknown>\n#15 0x55613dd09cfc <unknown>\n#16 0x55613dd00418 <unknown>\n#17 0x55613dccd42f <unknown>\n#18 0x55613dd244e8 <unknown>\n#19 0x55613dd246b4 <unknown>\n#20 0x55613dd35143 <unknown>\n#21 0x7f9d6de94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 145, in get_text\n    return text.text\n           ^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 89, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1700184212090,"stop":1700184212154,"duration":64},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1700184212090,"stop":1700184212108,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(3) span[class='price']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Go to specified element","time":{"start":1700184212108,"stop":1700184212113,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"d08ca73ca05d9fc34658047ee43ad21b\", element=\"24D1463EE692F8EE1537E5E86D6BB350_element_7\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(3) span[class='price']\")"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(3) span[class='price']\")"}],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"4fa2699a7d8e24b0","name":"Screenshot","source":"4fa2699a7d8e24b0.png","type":"image/png","size":135319},{"uid":"bd502170b99c38d","name":"HTML source","source":"bd502170b99c38d.html","type":"text/html","size":109614}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1700184212418,"stop":1700184212487,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_result_folder::0","time":{"start":1700184929574,"stop":1700184929574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Testing Hot Seller Section"},{"name":"epic","value":"Main Page"},{"name":"tag","value":"@pytest.mark.xfail(reason='In CI the test failed in PR#203')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az1113-238"},{"name":"thread","value":"3072-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":4,"unknown":0,"total":6},"items":[{"uid":"61fb6fb2db8d94a6","reportUrl":"https://verafes.github.io/luma_project/130//#testresult/61fb6fb2db8d94a6","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1700097802177,"stop":1700097803128,"duration":951}},{"uid":"59b7c4773c096b3c","reportUrl":"https://verafes.github.io/luma_project/129//#testresult/59b7c4773c096b3c","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1700011573795,"stop":1700011575120,"duration":1325}},{"uid":"86bd4e3cb6d61b69","reportUrl":"https://verafes.github.io/luma_project/128//#testresult/86bd4e3cb6d61b69","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1699924945435,"stop":1699924946625,"duration":1190}},{"uid":"6a72fb698255e655","reportUrl":"https://verafes.github.io/luma_project/127//#testresult/6a72fb698255e655","status":"skipped","statusDetails":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x560fd1141fb3 <unknown>\n#1 0x560fd0e154a7 <unknown>\n#2 0x560fd0e1a509 <unknown>\n#3 0x560fd0e1c120 <unknown>\n#4 0x560fd0e1c1dc <unknown>\n#5 0x560fd0e57782 <unknown>\n#6 0x560fd0e7e942 <unknown>\n#7 0x560fd0e52776 <unknown>\n#8 0x560fd0e7eb0e <unknown>\n#9 0x560fd0e97c02 <unknown>\n#10 0x560fd0e7e713 <unknown>\n#11 0x560fd0e5118b <unknown>\n#12 0x560fd0e51f7e <unknown>\n#13 0x560fd11078d8 <unknown>\n#14 0x560fd110b800 <unknown>\n#15 0x560fd1115cfc <unknown>\n#16 0x560fd110c418 <unknown>\n#17 0x560fd10d942f <unknown>\n#18 0x560fd11304e8 <unknown>\n#19 0x560fd11306b4 <unknown>\n#20 0x560fd1141143 <unknown>\n#21 0x7efc01694ac3 <unknown>","time":{"start":1699838670659,"stop":1699838671945,"duration":1286}},{"uid":"2c6741a1f290344a","reportUrl":"https://verafes.github.io/luma_project/126//#testresult/2c6741a1f290344a","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1699752471899,"stop":1699752473100,"duration":1201}}]},"tags":["@pytest.mark.xfail(reason='In CI the test failed in PR#203')"]},"source":"fd151ffc8a7021c0.json","parameterValues":[]}