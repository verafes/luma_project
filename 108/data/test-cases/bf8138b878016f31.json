{"uid":"bf8138b878016f31","name":"test_check_card_price","fullName":"tests.test_main_page.TestHotSellerSection#test_check_card_price","historyId":"f4026d9f96acc9996f781ecba7818e56","time":{"start":1698196874566,"stop":1698196889734,"duration":15168},"description":"This test checks that the card has a price and a price in USD","descriptionHtml":"<p>This test checks that the card has a price and a price in USD</p>\n","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=118.0.5993.70); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x557b55677fb3 <unknown>\n#1 0x557b5534b4a7 <unknown>\n#2 0x557b55350509 <unknown>\n#3 0x557b55352120 <unknown>\n#4 0x557b553521dc <unknown>\n#5 0x557b5538d782 <unknown>\n#6 0x557b553b4942 <unknown>\n#7 0x557b55388776 <unknown>\n#8 0x557b553b4b0e <unknown>\n#9 0x557b553cdc02 <unknown>\n#10 0x557b553b4713 <unknown>\n#11 0x557b5538718b <unknown>\n#12 0x557b55387f7e <unknown>\n#13 0x557b5563d8d8 <unknown>\n#14 0x557b55641800 <unknown>\n#15 0x557b5564bcfc <unknown>\n#16 0x557b55642418 <unknown>\n#17 0x557b5560f42f <unknown>\n#18 0x557b556664e8 <unknown>\n#19 0x557b556666b4 <unknown>\n#20 0x557b55677143 <unknown>\n#21 0x7f0a16c94ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7f9fffc3f010>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"265860af0220b47273c85fe0c548a238\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    def test_check_card_price(self, driver):\n        \"\"\"This test checks that the card has a price and a price in USD\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       text = page.check_card_price()\n\ntests/test_main_page.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:49: in check_card_price\n    text = self.get_text(self.locators.CARD_PRICE)\npages/base_page.py:145: in get_text\n    return text.text\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9fff8ce990>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x557b556666b4 \\\\u003Cunknown>\\\\n#20 0x557b55677143 \\\\u003Cunknown>\\\\n#21 0x7f0a16c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=118.0.5993.70); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x557b55677fb3 <unknown>\nE       #1 0x557b5534b4a7 <unknown>\nE       #2 0x557b55350509 <unknown>\nE       #3 0x557b55352120 <unknown>\nE       #4 0x557b553521dc <unknown>\nE       #5 0x557b5538d782 <unknown>\nE       #6 0x557b553b4942 <unknown>\nE       #7 0x557b55388776 <unknown>\nE       #8 0x557b553b4b0e <unknown>\nE       #9 0x557b553cdc02 <unknown>\nE       #10 0x557b553b4713 <unknown>\nE       #11 0x557b5538718b <unknown>\nE       #12 0x557b55387f7e <unknown>\nE       #13 0x557b5563d8d8 <unknown>\nE       #14 0x557b55641800 <unknown>\nE       #15 0x557b5564bcfc <unknown>\nE       #16 0x557b55642418 <unknown>\nE       #17 0x557b5560f42f <unknown>\nE       #18 0x557b556664e8 <unknown>\nE       #19 0x557b556666b4 <unknown>\nE       #20 0x557b55677143 <unknown>\nE       #21 0x7f0a16c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1698196143766,"stop":1698196143845,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_result_folder","time":{"start":1698196143846,"stop":1698196143846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1698196873390,"stop":1698196874565,"duration":1175},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"This test checks that the card has a price and a price in USD","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=118.0.5993.70); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x557b55677fb3 <unknown>\n#1 0x557b5534b4a7 <unknown>\n#2 0x557b55350509 <unknown>\n#3 0x557b55352120 <unknown>\n#4 0x557b553521dc <unknown>\n#5 0x557b5538d782 <unknown>\n#6 0x557b553b4942 <unknown>\n#7 0x557b55388776 <unknown>\n#8 0x557b553b4b0e <unknown>\n#9 0x557b553cdc02 <unknown>\n#10 0x557b553b4713 <unknown>\n#11 0x557b5538718b <unknown>\n#12 0x557b55387f7e <unknown>\n#13 0x557b5563d8d8 <unknown>\n#14 0x557b55641800 <unknown>\n#15 0x557b5564bcfc <unknown>\n#16 0x557b55642418 <unknown>\n#17 0x557b5560f42f <unknown>\n#18 0x557b556664e8 <unknown>\n#19 0x557b556666b4 <unknown>\n#20 0x557b55677143 <unknown>\n#21 0x7f0a16c94ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7f9fffc3f010>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"265860af0220b47273c85fe0c548a238\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    def test_check_card_price(self, driver):\n        \"\"\"This test checks that the card has a price and a price in USD\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       text = page.check_card_price()\n\ntests/test_main_page.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:49: in check_card_price\n    text = self.get_text(self.locators.CARD_PRICE)\npages/base_page.py:145: in get_text\n    return text.text\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9fff8ce990>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x557b556666b4 \\\\u003Cunknown>\\\\n#20 0x557b55677143 \\\\u003Cunknown>\\\\n#21 0x7f0a16c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=118.0.5993.70); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x557b55677fb3 <unknown>\nE       #1 0x557b5534b4a7 <unknown>\nE       #2 0x557b55350509 <unknown>\nE       #3 0x557b55352120 <unknown>\nE       #4 0x557b553521dc <unknown>\nE       #5 0x557b5538d782 <unknown>\nE       #6 0x557b553b4942 <unknown>\nE       #7 0x557b55388776 <unknown>\nE       #8 0x557b553b4b0e <unknown>\nE       #9 0x557b553cdc02 <unknown>\nE       #10 0x557b553b4713 <unknown>\nE       #11 0x557b5538718b <unknown>\nE       #12 0x557b55387f7e <unknown>\nE       #13 0x557b5563d8d8 <unknown>\nE       #14 0x557b55641800 <unknown>\nE       #15 0x557b5564bcfc <unknown>\nE       #16 0x557b55642418 <unknown>\nE       #17 0x557b5560f42f <unknown>\nE       #18 0x557b556664e8 <unknown>\nE       #19 0x557b556666b4 <unknown>\nE       #20 0x557b55677143 <unknown>\nE       #21 0x7f0a16c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Open a browser","time":{"start":1698196874566,"stop":1698196889501,"duration":14935},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Get element text","time":{"start":1698196889501,"stop":1698196889733,"duration":232},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=118.0.5993.70); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x557b55677fb3 <unknown>\n#1 0x557b5534b4a7 <unknown>\n#2 0x557b55350509 <unknown>\n#3 0x557b55352120 <unknown>\n#4 0x557b553521dc <unknown>\n#5 0x557b5538d782 <unknown>\n#6 0x557b553b4942 <unknown>\n#7 0x557b55388776 <unknown>\n#8 0x557b553b4b0e <unknown>\n#9 0x557b553cdc02 <unknown>\n#10 0x557b553b4713 <unknown>\n#11 0x557b5538718b <unknown>\n#12 0x557b55387f7e <unknown>\n#13 0x557b5563d8d8 <unknown>\n#14 0x557b55641800 <unknown>\n#15 0x557b5564bcfc <unknown>\n#16 0x557b55642418 <unknown>\n#17 0x557b5560f42f <unknown>\n#18 0x557b556664e8 <unknown>\n#19 0x557b556666b4 <unknown>\n#20 0x557b55677143 <unknown>\n#21 0x7f0a16c94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 145, in get_text\n    return text.text\n           ^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 89, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1698196889501,"stop":1698196889601,"duration":100},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1698196889501,"stop":1698196889530,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(3) span[class='price']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Go to specified element","time":{"start":1698196889530,"stop":1698196889550,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"265860af0220b47273c85fe0c548a238\", element=\"7CC8FCBA120236BC5AB3D5B63DC6271B_element_18\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(3) span[class='price']\")"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(3) span[class='price']\")"}],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"daf64dbda1b29869","name":"Screenshot","source":"daf64dbda1b29869.png","type":"image/png","size":122913},{"uid":"4ce0b5fb04f7cadd","name":"HTML source","source":"4ce0b5fb04f7cadd.html","type":"text/html","size":116064}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1698196890329,"stop":1698196890411,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_result_folder::0","time":{"start":1698197728921,"stop":1698197728921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Main Page"},{"name":"feature","value":"Testing Hot Seller Section"},{"name":"tag","value":"@pytest.mark.xfail(reason='In CI the test failed in PR#203')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az851-676"},{"name":"thread","value":"3023-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":2,"unknown":0,"total":4},"items":[{"uid":"f09961c1c4a660b3","reportUrl":"https://verafes.github.io/luma_project/107//#testresult/f09961c1c4a660b3","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1698110548856,"stop":1698110550214,"duration":1358}},{"uid":"338927ccc6ec97b4","reportUrl":"https://verafes.github.io/luma_project/106//#testresult/338927ccc6ec97b4","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1698024057056,"stop":1698024058096,"duration":1040}},{"uid":"bf2d0593e234faf4","reportUrl":"https://verafes.github.io/luma_project/105//#testresult/bf2d0593e234faf4","status":"skipped","statusDetails":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=118.0.5993.70); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55ec189a4fb3 <unknown>\n#1 0x55ec186784a7 <unknown>\n#2 0x55ec1867d509 <unknown>\n#3 0x55ec1867f120 <unknown>\n#4 0x55ec1867f1dc <unknown>\n#5 0x55ec186ba782 <unknown>\n#6 0x55ec186e1942 <unknown>\n#7 0x55ec186b5776 <unknown>\n#8 0x55ec186e1b0e <unknown>\n#9 0x55ec186fac02 <unknown>\n#10 0x55ec186e1713 <unknown>\n#11 0x55ec186b418b <unknown>\n#12 0x55ec186b4f7e <unknown>\n#13 0x55ec1896a8d8 <unknown>\n#14 0x55ec1896e800 <unknown>\n#15 0x55ec18978cfc <unknown>\n#16 0x55ec1896f418 <unknown>\n#17 0x55ec1893c42f <unknown>\n#18 0x55ec189934e8 <unknown>\n#19 0x55ec189936b4 <unknown>\n#20 0x55ec189a4143 <unknown>\n#21 0x7fdc5e894ac3 <unknown>","time":{"start":1697938130333,"stop":1697938131904,"duration":1571}}]},"tags":["@pytest.mark.xfail(reason='In CI the test failed in PR#203')"]},"source":"bf8138b878016f31.json","parameterValues":[]}