{"uid":"cf8132d49b4d1a2f","name":"tc 07.02.08 Verify that 'Proceed to checkout' button redirects to the shipping page","fullName":"tests.test_shopping_cart.TestShoppingCartFull#test_tc_07_02_08_verify_proceed_to_checkout_button_leads_to_the_shipping_page","historyId":"9ea104d91506ad7602cf69e28583a223","time":{"start":1730512790245,"stop":1730512791530,"duration":1285},"description":"Verify that the 'Proceed to checkout' button redirects to the shipping page.","descriptionHtml":"<p>Verify that the 'Proceed to checkout' button redirects to the shipping page.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1410, 848). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x5560870740aa <unknown>\n#1 0x556086b8b1a0 <unknown>\n#2 0x556086bde896 <unknown>\n#3 0x556086bdc82d <unknown>\n#4 0x556086bda2d7 <unknown>\n#5 0x556086bd96f1 <unknown>\n#6 0x556086bcccf8 <unknown>\n#7 0x556086bfbd82 <unknown>\n#8 0x556086bcc6d8 <unknown>\n#9 0x556086bfbf4e <unknown>\n#10 0x556086c1a866 <unknown>\n#11 0x556086bfbb23 <unknown>\n#12 0x556086bca990 <unknown>\n#13 0x556086bcb96e <unknown>\n#14 0x55608704016b <unknown>\n#15 0x556087043f68 <unknown>\n#16 0x55608702d64c <unknown>\n#17 0x556087044ae7 <unknown>\n#18 0x5560870124af <unknown>\n#19 0x5560870624f8 <unknown>\n#20 0x5560870626c0 <unknown>\n#21 0x556087072f26 <unknown>\n#22 0x7fb8ab094ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCartFull object at 0x7fb8df795fd0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b5f382feda11bf7476ef726c39b0b57\")>\nfull_cart_page = None\n\n    @allure.title(\"tc 07.02.08 Verify that 'Proceed to checkout' button redirects to the shipping page\")\n    def test_tc_07_02_08_verify_proceed_to_checkout_button_leads_to_the_shipping_page(self, driver, full_cart_page):\n        \"\"\"Verify that the 'Proceed to checkout' button redirects to the shipping page.\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n>       link = page.check_checkout_button_redirects_to_shipping_page()\n\ntests/test_shopping_cart.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:113: in check_checkout_button_redirects_to_shipping_page\n    button.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb8e0097cd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5560870626c0 \\\\u003Cunknown>\\\\n#21 0x556087072f26 \\\\u003Cunknown>\\\\n#22 0x7fb8ab094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1410, 848). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x5560870740aa <unknown>\nE       #1 0x556086b8b1a0 <unknown>\nE       #2 0x556086bde896 <unknown>\nE       #3 0x556086bdc82d <unknown>\nE       #4 0x556086bda2d7 <unknown>\nE       #5 0x556086bd96f1 <unknown>\nE       #6 0x556086bcccf8 <unknown>\nE       #7 0x556086bfbd82 <unknown>\nE       #8 0x556086bcc6d8 <unknown>\nE       #9 0x556086bfbf4e <unknown>\nE       #10 0x556086c1a866 <unknown>\nE       #11 0x556086bfbb23 <unknown>\nE       #12 0x556086bca990 <unknown>\nE       #13 0x556086bcb96e <unknown>\nE       #14 0x55608704016b <unknown>\nE       #15 0x556087043f68 <unknown>\nE       #16 0x55608702d64c <unknown>\nE       #17 0x556087044ae7 <unknown>\nE       #18 0x5560870124af <unknown>\nE       #19 0x5560870624f8 <unknown>\nE       #20 0x5560870626c0 <unknown>\nE       #21 0x556087072f26 <unknown>\nE       #22 0x7fb8ab094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1730511391742,"stop":1730511391805,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1730511391805,"stop":1730511391806,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1730512782798,"stop":1730512784055,"duration":1257},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"full_cart_page","time":{"start":1730512784056,"stop":1730512790245,"duration":6189},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify that the 'Proceed to checkout' button redirects to the shipping page.","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1410, 848). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x5560870740aa <unknown>\n#1 0x556086b8b1a0 <unknown>\n#2 0x556086bde896 <unknown>\n#3 0x556086bdc82d <unknown>\n#4 0x556086bda2d7 <unknown>\n#5 0x556086bd96f1 <unknown>\n#6 0x556086bcccf8 <unknown>\n#7 0x556086bfbd82 <unknown>\n#8 0x556086bcc6d8 <unknown>\n#9 0x556086bfbf4e <unknown>\n#10 0x556086c1a866 <unknown>\n#11 0x556086bfbb23 <unknown>\n#12 0x556086bca990 <unknown>\n#13 0x556086bcb96e <unknown>\n#14 0x55608704016b <unknown>\n#15 0x556087043f68 <unknown>\n#16 0x55608702d64c <unknown>\n#17 0x556087044ae7 <unknown>\n#18 0x5560870124af <unknown>\n#19 0x5560870624f8 <unknown>\n#20 0x5560870626c0 <unknown>\n#21 0x556087072f26 <unknown>\n#22 0x7fb8ab094ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCartFull object at 0x7fb8df795fd0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b5f382feda11bf7476ef726c39b0b57\")>\nfull_cart_page = None\n\n    @allure.title(\"tc 07.02.08 Verify that 'Proceed to checkout' button redirects to the shipping page\")\n    def test_tc_07_02_08_verify_proceed_to_checkout_button_leads_to_the_shipping_page(self, driver, full_cart_page):\n        \"\"\"Verify that the 'Proceed to checkout' button redirects to the shipping page.\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n>       link = page.check_checkout_button_redirects_to_shipping_page()\n\ntests/test_shopping_cart.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:113: in check_checkout_button_redirects_to_shipping_page\n    button.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb8e0097cd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5560870626c0 \\\\u003Cunknown>\\\\n#21 0x556087072f26 \\\\u003Cunknown>\\\\n#22 0x7fb8ab094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1410, 848). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x5560870740aa <unknown>\nE       #1 0x556086b8b1a0 <unknown>\nE       #2 0x556086bde896 <unknown>\nE       #3 0x556086bdc82d <unknown>\nE       #4 0x556086bda2d7 <unknown>\nE       #5 0x556086bd96f1 <unknown>\nE       #6 0x556086bcccf8 <unknown>\nE       #7 0x556086bfbd82 <unknown>\nE       #8 0x556086bcc6d8 <unknown>\nE       #9 0x556086bfbf4e <unknown>\nE       #10 0x556086c1a866 <unknown>\nE       #11 0x556086bfbb23 <unknown>\nE       #12 0x556086bca990 <unknown>\nE       #13 0x556086bcb96e <unknown>\nE       #14 0x55608704016b <unknown>\nE       #15 0x556087043f68 <unknown>\nE       #16 0x55608702d64c <unknown>\nE       #17 0x556087044ae7 <unknown>\nE       #18 0x5560870124af <unknown>\nE       #19 0x5560870624f8 <unknown>\nE       #20 0x5560870626c0 <unknown>\nE       #21 0x556087072f26 <unknown>\nE       #22 0x7fb8ab094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Check 'Proceed to checkout' button redirects to the shipping page","time":{"start":1730512790245,"stop":1730512791529,"duration":1284},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1410, 848). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x5560870740aa <unknown>\n#1 0x556086b8b1a0 <unknown>\n#2 0x556086bde896 <unknown>\n#3 0x556086bdc82d <unknown>\n#4 0x556086bda2d7 <unknown>\n#5 0x556086bd96f1 <unknown>\n#6 0x556086bcccf8 <unknown>\n#7 0x556086bfbd82 <unknown>\n#8 0x556086bcc6d8 <unknown>\n#9 0x556086bfbf4e <unknown>\n#10 0x556086c1a866 <unknown>\n#11 0x556086bfbb23 <unknown>\n#12 0x556086bca990 <unknown>\n#13 0x556086bcb96e <unknown>\n#14 0x55608704016b <unknown>\n#15 0x556087043f68 <unknown>\n#16 0x55608702d64c <unknown>\n#17 0x556087044ae7 <unknown>\n#18 0x5560870124af <unknown>\n#19 0x5560870624f8 <unknown>\n#20 0x5560870626c0 <unknown>\n#21 0x556087072f26 <unknown>\n#22 0x7fb8ab094ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/shopping_cart_page.py\", line 113, in check_checkout_button_redirects_to_shipping_page\n    button.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1730512790246,"stop":1730512790408,"duration":162},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'button.action.primary.checkout span')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"86773ad8786d8e7c","name":"Screenshot","source":"86773ad8786d8e7c.png","type":"image/png","size":148558},{"uid":"5ec66a316bdeb6a3","name":"HTML source","source":"5ec66a316bdeb6a3.html","type":"text/html","size":262377}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1730512791668,"stop":1730512791748,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1730513177310,"stop":1730513177310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Shopping Cart is full"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_shopping_cart"},{"name":"subSuite","value":"TestShoppingCartFull"},{"name":"host","value":"fv-az1391-672"},{"name":"thread","value":"2936-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_shopping_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":3,"unknown":0,"total":6},"items":[{"uid":"5fbe02075e7677a1","reportUrl":"https://verafes.github.io/luma_project/481//#testresult/5fbe02075e7677a1","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1410, 848). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241030/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"COXH3b2GuokDFVYzaAgdZN0CbQ\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55d53bc2c0aa <unknown>\n#1 0x55d53b7431a0 <unknown>\n#2 0x55d53b796896 <unknown>\n#3 0x55d53b79482d <unknown>\n#4 0x55d53b7922d7 <unknown>\n#5 0x55d53b7916f1 <unknown>\n#6 0x55d53b784cf8 <unknown>\n#7 0x55d53b7b3d82 <unknown>\n#8 0x55d53b7846d8 <unknown>\n#9 0x55d53b7b3f4e <unknown>\n#10 0x55d53b7d2866 <unknown>\n#11 0x55d53b7b3b23 <unknown>\n#12 0x55d53b782990 <unknown>\n#13 0x55d53b78396e <unknown>\n#14 0x55d53bbf816b <unknown>\n#15 0x55d53bbfbf68 <unknown>\n#16 0x55d53bbe564c <unknown>\n#17 0x55d53bbfcae7 <unknown>\n#18 0x55d53bbca4af <unknown>\n#19 0x55d53bc1a4f8 <unknown>\n#20 0x55d53bc1a6c0 <unknown>\n#21 0x55d53bc2af26 <unknown>\n#22 0x7fb951694ac3 <unknown>","time":{"start":1730426885322,"stop":1730426886425,"duration":1103}},{"uid":"10b7c62e8504abc6","reportUrl":"https://verafes.github.io/luma_project/480//#testresult/10b7c62e8504abc6","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action primary tocart\" id=\"product-addtocart-button\">...</button> is not clickable at point (1187, 744). Other element would receive the click: <iframe id=\"aswift_5\" name=\"aswift_5\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241028/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=7&amp;uci=a!7&amp;btvi=5\" data-google-container-id=\"a!7\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CP_4vfDGt4kDFd680QQdcuwbzg\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x5564330270aa <unknown>\n#1 0x556432b3e1a0 <unknown>\n#2 0x556432b91896 <unknown>\n#3 0x556432b8f82d <unknown>\n#4 0x556432b8d2d7 <unknown>\n#5 0x556432b8c6f1 <unknown>\n#6 0x556432b7fcf8 <unknown>\n#7 0x556432baed82 <unknown>\n#8 0x556432b7f6d8 <unknown>\n#9 0x556432baef4e <unknown>\n#10 0x556432bcd866 <unknown>\n#11 0x556432baeb23 <unknown>\n#12 0x556432b7d990 <unknown>\n#13 0x556432b7e96e <unknown>\n#14 0x556432ff316b <unknown>\n#15 0x556432ff6f68 <unknown>\n#16 0x556432fe064c <unknown>\n#17 0x556432ff7ae7 <unknown>\n#18 0x556432fc54af <unknown>\n#19 0x5564330154f8 <unknown>\n#20 0x5564330156c0 <unknown>\n#21 0x556433025f26 <unknown>\n#22 0x7f2b69294ac3 <unknown>","time":{"start":1730341088759,"stop":1730341088759,"duration":0}},{"uid":"a8cce8cb2a68bbf3","reportUrl":"https://verafes.github.io/luma_project/479//#testresult/a8cce8cb2a68bbf3","status":"passed","time":{"start":1730253687237,"stop":1730253694851,"duration":7614}},{"uid":"5168e957e9d30bfa","reportUrl":"https://verafes.github.io/luma_project/478//#testresult/5168e957e9d30bfa","status":"passed","time":{"start":1730168586993,"stop":1730168591572,"duration":4579}},{"uid":"b8118d9109d83d3d","reportUrl":"https://verafes.github.io/luma_project/477//#testresult/b8118d9109d83d3d","status":"passed","time":{"start":1730081304930,"stop":1730081309502,"duration":4572}}]},"tags":[]},"source":"cf8132d49b4d1a2f.json","parameterValues":[]}