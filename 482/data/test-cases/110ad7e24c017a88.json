{"uid":"110ad7e24c017a88","name":"TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation","fullName":"tests.test_sign_in.TestFailedLogin#test_03_02_01_to_03_02_10_login","historyId":"7f91f4a63115fb89e466c8c9b85c1503","time":{"start":1730513067136,"stop":1730513070646,"duration":3510},"description":"Check Success and Failed Login, no error validation","descriptionHtml":"<p>Check Success and Failed Login, no error validation</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55630db0f0aa <unknown>\n#1 0x55630d6261a0 <unknown>\n#2 0x55630d679896 <unknown>\n#3 0x55630d67782d <unknown>\n#4 0x55630d6752d7 <unknown>\n#5 0x55630d6746f1 <unknown>\n#6 0x55630d667cf8 <unknown>\n#7 0x55630d696d82 <unknown>\n#8 0x55630d6676d8 <unknown>\n#9 0x55630d696f4e <unknown>\n#10 0x55630d6b5866 <unknown>\n#11 0x55630d696b23 <unknown>\n#12 0x55630d665990 <unknown>\n#13 0x55630d66696e <unknown>\n#14 0x55630dadb16b <unknown>\n#15 0x55630dadef68 <unknown>\n#16 0x55630dac864c <unknown>\n#17 0x55630dadfae7 <unknown>\n#18 0x55630daad4af <unknown>\n#19 0x55630dafd4f8 <unknown>\n#20 0x55630dafd6c0 <unknown>\n#21 0x55630db0df26 <unknown>\n#22 0x7fde5e494ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7fb8df7a7610>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9d0bb3220716644ac9d5907c4c75b1cb\")>\nemail = 'teston120@mailinator.com', password = 'test#12p@ssword'\n\n    @allure.title('TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation')\n    @pytest.mark.parametrize('email, password', LOGIN)\n    def test_03_02_01_to_03_02_10_login(self, driver, email, password):\n        \"\"\"Check Success and Failed Login, no error validation\"\"\"\n        sign_in_page = SignInPage(driver, SIGN_IN_URL)\n        sign_in_page.open()\n        sign_in_page.fill_in_email_field(email)\n>       sign_in_page.fill_in_password_field(password)\n\ntests/test_sign_in.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:88: in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb8dffd3ed0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55630dafd6c0 \\\\u003Cunknown>\\\\n#21 0x55630db0df26 \\\\u003Cunknown>\\\\n#22 0x7fde5e494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x55630db0f0aa <unknown>\nE       #1 0x55630d6261a0 <unknown>\nE       #2 0x55630d679896 <unknown>\nE       #3 0x55630d67782d <unknown>\nE       #4 0x55630d6752d7 <unknown>\nE       #5 0x55630d6746f1 <unknown>\nE       #6 0x55630d667cf8 <unknown>\nE       #7 0x55630d696d82 <unknown>\nE       #8 0x55630d6676d8 <unknown>\nE       #9 0x55630d696f4e <unknown>\nE       #10 0x55630d6b5866 <unknown>\nE       #11 0x55630d696b23 <unknown>\nE       #12 0x55630d665990 <unknown>\nE       #13 0x55630d66696e <unknown>\nE       #14 0x55630dadb16b <unknown>\nE       #15 0x55630dadef68 <unknown>\nE       #16 0x55630dac864c <unknown>\nE       #17 0x55630dadfae7 <unknown>\nE       #18 0x55630daad4af <unknown>\nE       #19 0x55630dafd4f8 <unknown>\nE       #20 0x55630dafd6c0 <unknown>\nE       #21 0x55630db0df26 <unknown>\nE       #22 0x7fde5e494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1730511391742,"stop":1730511391805,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1730511391805,"stop":1730511391806,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1730513065873,"stop":1730513067135,"duration":1262},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check Success and Failed Login, no error validation","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55630db0f0aa <unknown>\n#1 0x55630d6261a0 <unknown>\n#2 0x55630d679896 <unknown>\n#3 0x55630d67782d <unknown>\n#4 0x55630d6752d7 <unknown>\n#5 0x55630d6746f1 <unknown>\n#6 0x55630d667cf8 <unknown>\n#7 0x55630d696d82 <unknown>\n#8 0x55630d6676d8 <unknown>\n#9 0x55630d696f4e <unknown>\n#10 0x55630d6b5866 <unknown>\n#11 0x55630d696b23 <unknown>\n#12 0x55630d665990 <unknown>\n#13 0x55630d66696e <unknown>\n#14 0x55630dadb16b <unknown>\n#15 0x55630dadef68 <unknown>\n#16 0x55630dac864c <unknown>\n#17 0x55630dadfae7 <unknown>\n#18 0x55630daad4af <unknown>\n#19 0x55630dafd4f8 <unknown>\n#20 0x55630dafd6c0 <unknown>\n#21 0x55630db0df26 <unknown>\n#22 0x7fde5e494ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7fb8df7a7610>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9d0bb3220716644ac9d5907c4c75b1cb\")>\nemail = 'teston120@mailinator.com', password = 'test#12p@ssword'\n\n    @allure.title('TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation')\n    @pytest.mark.parametrize('email, password', LOGIN)\n    def test_03_02_01_to_03_02_10_login(self, driver, email, password):\n        \"\"\"Check Success and Failed Login, no error validation\"\"\"\n        sign_in_page = SignInPage(driver, SIGN_IN_URL)\n        sign_in_page.open()\n        sign_in_page.fill_in_email_field(email)\n>       sign_in_page.fill_in_password_field(password)\n\ntests/test_sign_in.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:88: in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb8dffd3ed0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55630dafd6c0 \\\\u003Cunknown>\\\\n#21 0x55630db0df26 \\\\u003Cunknown>\\\\n#22 0x7fde5e494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x55630db0f0aa <unknown>\nE       #1 0x55630d6261a0 <unknown>\nE       #2 0x55630d679896 <unknown>\nE       #3 0x55630d67782d <unknown>\nE       #4 0x55630d6752d7 <unknown>\nE       #5 0x55630d6746f1 <unknown>\nE       #6 0x55630d667cf8 <unknown>\nE       #7 0x55630d696d82 <unknown>\nE       #8 0x55630d6676d8 <unknown>\nE       #9 0x55630d696f4e <unknown>\nE       #10 0x55630d6b5866 <unknown>\nE       #11 0x55630d696b23 <unknown>\nE       #12 0x55630d665990 <unknown>\nE       #13 0x55630d66696e <unknown>\nE       #14 0x55630dadb16b <unknown>\nE       #15 0x55630dadef68 <unknown>\nE       #16 0x55630dac864c <unknown>\nE       #17 0x55630dadfae7 <unknown>\nE       #18 0x55630daad4af <unknown>\nE       #19 0x55630dafd4f8 <unknown>\nE       #20 0x55630dafd6c0 <unknown>\nE       #21 0x55630db0df26 <unknown>\nE       #22 0x7fde5e494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open a browser","time":{"start":1730513067136,"stop":1730513069178,"duration":2042},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Fill in Email field","time":{"start":1730513069178,"stop":1730513069500,"duration":322},"status":"passed","steps":[{"name":"Check Email field is clickable","time":{"start":1730513069178,"stop":1730513069236,"duration":58},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1730513069178,"stop":1730513069236,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#email')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1730513069236,"stop":1730513069500,"duration":264},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1730513069236,"stop":1730513069258,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"9d0bb3220716644ac9d5907c4c75b1cb\", element=\"f.A369C2F95FD418F1E8342956C9627DB2.d.50D4024FB8ADA369FD7D1D3D23EADFF3.e.4\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"9d0bb3220716644ac9d5907c4c75b1cb\", element=\"f.A369C2F95FD418F1E8342956C9627DB2.d.50D4024FB8ADA369FD7D1D3D23EADFF3.e.4\")>"},{"name":"value","value":"'teston120@mailinator.com'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"email","value":"'teston120@mailinator.com'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in Password field","time":{"start":1730513069500,"stop":1730513070645,"duration":1145},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55630db0f0aa <unknown>\n#1 0x55630d6261a0 <unknown>\n#2 0x55630d679896 <unknown>\n#3 0x55630d67782d <unknown>\n#4 0x55630d6752d7 <unknown>\n#5 0x55630d6746f1 <unknown>\n#6 0x55630d667cf8 <unknown>\n#7 0x55630d696d82 <unknown>\n#8 0x55630d6676d8 <unknown>\n#9 0x55630d696f4e <unknown>\n#10 0x55630d6b5866 <unknown>\n#11 0x55630d696b23 <unknown>\n#12 0x55630d665990 <unknown>\n#13 0x55630d66696e <unknown>\n#14 0x55630dadb16b <unknown>\n#15 0x55630dadef68 <unknown>\n#16 0x55630dac864c <unknown>\n#17 0x55630dadfae7 <unknown>\n#18 0x55630daad4af <unknown>\n#19 0x55630dafd4f8 <unknown>\n#20 0x55630dafd6c0 <unknown>\n#21 0x55630db0df26 <unknown>\n#22 0x7fde5e494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 88, in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check Password field is clickable","time":{"start":1730513069500,"stop":1730513069529,"duration":29},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1730513069500,"stop":1730513069529,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#pass')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1730513069530,"stop":1730513070645,"duration":1115},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55630db0f0aa <unknown>\n#1 0x55630d6261a0 <unknown>\n#2 0x55630d679896 <unknown>\n#3 0x55630d67782d <unknown>\n#4 0x55630d6752d7 <unknown>\n#5 0x55630d6746f1 <unknown>\n#6 0x55630d667cf8 <unknown>\n#7 0x55630d696d82 <unknown>\n#8 0x55630d6676d8 <unknown>\n#9 0x55630d696f4e <unknown>\n#10 0x55630d6b5866 <unknown>\n#11 0x55630d696b23 <unknown>\n#12 0x55630d665990 <unknown>\n#13 0x55630d66696e <unknown>\n#14 0x55630dadb16b <unknown>\n#15 0x55630dadef68 <unknown>\n#16 0x55630dac864c <unknown>\n#17 0x55630dadfae7 <unknown>\n#18 0x55630daad4af <unknown>\n#19 0x55630dafd4f8 <unknown>\n#20 0x55630dafd6c0 <unknown>\n#21 0x55630db0df26 <unknown>\n#22 0x7fde5e494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1730513069530,"stop":1730513069544,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"9d0bb3220716644ac9d5907c4c75b1cb\", element=\"f.A369C2F95FD418F1E8342956C9627DB2.d.50D4024FB8ADA369FD7D1D3D23EADFF3.e.5\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"9d0bb3220716644ac9d5907c4c75b1cb\", element=\"f.A369C2F95FD418F1E8342956C9627DB2.d.50D4024FB8ADA369FD7D1D3D23EADFF3.e.5\")>"},{"name":"value","value":"'test#12p@ssword'"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"password","value":"'test#12p@ssword'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6a782f4c949c3f79","name":"Screenshot","source":"6a782f4c949c3f79.png","type":"image/png","size":81754},{"uid":"4609a981b5658302","name":"HTML source","source":"4609a981b5658302.html","type":"text/html","size":144892}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1730513070779,"stop":1730513070853,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1730513177310,"stop":1730513177310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Failed Login Functionality"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sign_in"},{"name":"subSuite","value":"TestFailedLogin"},{"name":"host","value":"fv-az1391-672"},{"name":"thread","value":"2936-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'teston120@mailinator.com'"},{"name":"password","value":"'test#12p@ssword'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":3,"unknown":0,"total":6},"items":[{"uid":"aa69df49efe0340a","reportUrl":"https://verafes.github.io/luma_project/481//#testresult/aa69df49efe0340a","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241030/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CMjn2bmHuokDFc8CaAgdXNIwxw\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55e61330e0aa <unknown>\n#1 0x55e612e251a0 <unknown>\n#2 0x55e612e78896 <unknown>\n#3 0x55e612e7682d <unknown>\n#4 0x55e612e742d7 <unknown>\n#5 0x55e612e736f1 <unknown>\n#6 0x55e612e66cf8 <unknown>\n#7 0x55e612e95d82 <unknown>\n#8 0x55e612e666d8 <unknown>\n#9 0x55e612e95f4e <unknown>\n#10 0x55e612eb4866 <unknown>\n#11 0x55e612e95b23 <unknown>\n#12 0x55e612e64990 <unknown>\n#13 0x55e612e6596e <unknown>\n#14 0x55e6132da16b <unknown>\n#15 0x55e6132ddf68 <unknown>\n#16 0x55e6132c764c <unknown>\n#17 0x55e6132deae7 <unknown>\n#18 0x55e6132ac4af <unknown>\n#19 0x55e6132fc4f8 <unknown>\n#20 0x55e6132fc6c0 <unknown>\n#21 0x55e61330cf26 <unknown>\n#22 0x7f33b3894ac3 <unknown>","time":{"start":1730427142873,"stop":1730427146079,"duration":3206}},{"uid":"d5f64da5f78a431c","reportUrl":"https://verafes.github.io/luma_project/480//#testresult/d5f64da5f78a431c","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241028/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CIyB__HHt4kDFQkiTwgdl2UrzQ\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x5584407650aa <unknown>\n#1 0x55844027c1a0 <unknown>\n#2 0x5584402cf896 <unknown>\n#3 0x5584402cd82d <unknown>\n#4 0x5584402cb2d7 <unknown>\n#5 0x5584402ca6f1 <unknown>\n#6 0x5584402bdcf8 <unknown>\n#7 0x5584402ecd82 <unknown>\n#8 0x5584402bd6d8 <unknown>\n#9 0x5584402ecf4e <unknown>\n#10 0x55844030b866 <unknown>\n#11 0x5584402ecb23 <unknown>\n#12 0x5584402bb990 <unknown>\n#13 0x5584402bc96e <unknown>\n#14 0x55844073116b <unknown>\n#15 0x558440734f68 <unknown>\n#16 0x55844071e64c <unknown>\n#17 0x558440735ae7 <unknown>\n#18 0x5584407034af <unknown>\n#19 0x5584407534f8 <unknown>\n#20 0x5584407536c0 <unknown>\n#21 0x558440763f26 <unknown>\n#22 0x7fe242694ac3 <unknown>","time":{"start":1730341361538,"stop":1730341365298,"duration":3760}},{"uid":"188d8f5f416b1cdf","reportUrl":"https://verafes.github.io/luma_project/479//#testresult/188d8f5f416b1cdf","status":"passed","time":{"start":1730253939503,"stop":1730253943408,"duration":3905}},{"uid":"a7d1aebc167319a0","reportUrl":"https://verafes.github.io/luma_project/478//#testresult/a7d1aebc167319a0","status":"passed","time":{"start":1730168832929,"stop":1730168837972,"duration":5043}},{"uid":"45eb1ebace29335c","reportUrl":"https://verafes.github.io/luma_project/477//#testresult/45eb1ebace29335c","status":"passed","time":{"start":1730081589012,"stop":1730081593691,"duration":4679}}]},"tags":[]},"source":"110ad7e24c017a88.json","parameterValues":["'teston120@mailinator.com'","'test#12p@ssword'"]}