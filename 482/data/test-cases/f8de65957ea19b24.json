{"uid":"f8de65957ea19b24","name":"tc 07.02.25 Verify the message coupon code is not valid is displayed correct","fullName":"tests.test_shopping_cart.TestShoppingCartFull#test_tc_07_02_25_verify_msg_coupon_code_is_not_valid_is_displayed","historyId":"492343fa43b6d6d286e390bbb49df7ba","time":{"start":1730512887286,"stop":1730512890349,"duration":3063},"description":"Check that message coupon code is not valid is displayed correct","descriptionHtml":"<p>Check that message coupon code is not valid is displayed correct</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x56536650a0aa <unknown>\n#1 0x5653660211a0 <unknown>\n#2 0x565366074896 <unknown>\n#3 0x56536607282d <unknown>\n#4 0x5653660702d7 <unknown>\n#5 0x56536606f6f1 <unknown>\n#6 0x565366062cf8 <unknown>\n#7 0x565366091d82 <unknown>\n#8 0x5653660626d8 <unknown>\n#9 0x565366091f4e <unknown>\n#10 0x5653660b0866 <unknown>\n#11 0x565366091b23 <unknown>\n#12 0x565366060990 <unknown>\n#13 0x56536606196e <unknown>\n#14 0x5653664d616b <unknown>\n#15 0x5653664d9f68 <unknown>\n#16 0x5653664c364c <unknown>\n#17 0x5653664daae7 <unknown>\n#18 0x5653664a84af <unknown>\n#19 0x5653664f84f8 <unknown>\n#20 0x5653664f86c0 <unknown>\n#21 0x565366508f26 <unknown>\n#22 0x7fee28094ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCartFull object at 0x7fb8df752750>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"17457d6faea9c7164e13c56110c59b32\")>\nfull_cart_page = None\n\n    @allure.title(\"tc 07.02.25 Verify the message coupon code is not valid is displayed correct\")\n    def test_tc_07_02_25_verify_msg_coupon_code_is_not_valid_is_displayed(self, driver, full_cart_page):\n        \"\"\"Check that message coupon code is not valid is displayed correct\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n        page.open()\n>       page.click_apply_discount_code()\n\ntests/test_shopping_cart.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:190: in click_apply_discount_code\n    self.element_is_clickable(self.shopping_locators.APPLY_DISCOUNT_CODE).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb8dffa2890>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5653664f86c0 \\\\u003Cunknown>\\\\n#21 0x565366508f26 \\\\u003Cunknown>\\\\n#22 0x7fee28094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x56536650a0aa <unknown>\nE       #1 0x5653660211a0 <unknown>\nE       #2 0x565366074896 <unknown>\nE       #3 0x56536607282d <unknown>\nE       #4 0x5653660702d7 <unknown>\nE       #5 0x56536606f6f1 <unknown>\nE       #6 0x565366062cf8 <unknown>\nE       #7 0x565366091d82 <unknown>\nE       #8 0x5653660626d8 <unknown>\nE       #9 0x565366091f4e <unknown>\nE       #10 0x5653660b0866 <unknown>\nE       #11 0x565366091b23 <unknown>\nE       #12 0x565366060990 <unknown>\nE       #13 0x56536606196e <unknown>\nE       #14 0x5653664d616b <unknown>\nE       #15 0x5653664d9f68 <unknown>\nE       #16 0x5653664c364c <unknown>\nE       #17 0x5653664daae7 <unknown>\nE       #18 0x5653664a84af <unknown>\nE       #19 0x5653664f84f8 <unknown>\nE       #20 0x5653664f86c0 <unknown>\nE       #21 0x565366508f26 <unknown>\nE       #22 0x7fee28094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1730511391742,"stop":1730511391805,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1730511391805,"stop":1730511391806,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1730512880481,"stop":1730512881735,"duration":1254},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"full_cart_page","time":{"start":1730512881735,"stop":1730512887285,"duration":5550},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check that message coupon code is not valid is displayed correct","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x56536650a0aa <unknown>\n#1 0x5653660211a0 <unknown>\n#2 0x565366074896 <unknown>\n#3 0x56536607282d <unknown>\n#4 0x5653660702d7 <unknown>\n#5 0x56536606f6f1 <unknown>\n#6 0x565366062cf8 <unknown>\n#7 0x565366091d82 <unknown>\n#8 0x5653660626d8 <unknown>\n#9 0x565366091f4e <unknown>\n#10 0x5653660b0866 <unknown>\n#11 0x565366091b23 <unknown>\n#12 0x565366060990 <unknown>\n#13 0x56536606196e <unknown>\n#14 0x5653664d616b <unknown>\n#15 0x5653664d9f68 <unknown>\n#16 0x5653664c364c <unknown>\n#17 0x5653664daae7 <unknown>\n#18 0x5653664a84af <unknown>\n#19 0x5653664f84f8 <unknown>\n#20 0x5653664f86c0 <unknown>\n#21 0x565366508f26 <unknown>\n#22 0x7fee28094ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCartFull object at 0x7fb8df752750>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"17457d6faea9c7164e13c56110c59b32\")>\nfull_cart_page = None\n\n    @allure.title(\"tc 07.02.25 Verify the message coupon code is not valid is displayed correct\")\n    def test_tc_07_02_25_verify_msg_coupon_code_is_not_valid_is_displayed(self, driver, full_cart_page):\n        \"\"\"Check that message coupon code is not valid is displayed correct\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n        page.open()\n>       page.click_apply_discount_code()\n\ntests/test_shopping_cart.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:190: in click_apply_discount_code\n    self.element_is_clickable(self.shopping_locators.APPLY_DISCOUNT_CODE).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb8dffa2890>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5653664f86c0 \\\\u003Cunknown>\\\\n#21 0x565366508f26 \\\\u003Cunknown>\\\\n#22 0x7fee28094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x56536650a0aa <unknown>\nE       #1 0x5653660211a0 <unknown>\nE       #2 0x565366074896 <unknown>\nE       #3 0x56536607282d <unknown>\nE       #4 0x5653660702d7 <unknown>\nE       #5 0x56536606f6f1 <unknown>\nE       #6 0x565366062cf8 <unknown>\nE       #7 0x565366091d82 <unknown>\nE       #8 0x5653660626d8 <unknown>\nE       #9 0x565366091f4e <unknown>\nE       #10 0x5653660b0866 <unknown>\nE       #11 0x565366091b23 <unknown>\nE       #12 0x565366060990 <unknown>\nE       #13 0x56536606196e <unknown>\nE       #14 0x5653664d616b <unknown>\nE       #15 0x5653664d9f68 <unknown>\nE       #16 0x5653664c364c <unknown>\nE       #17 0x5653664daae7 <unknown>\nE       #18 0x5653664a84af <unknown>\nE       #19 0x5653664f84f8 <unknown>\nE       #20 0x5653664f86c0 <unknown>\nE       #21 0x565366508f26 <unknown>\nE       #22 0x7fee28094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open a browser","time":{"start":1730512887286,"stop":1730512889150,"duration":1864},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Apply Discount Code on click","time":{"start":1730512889150,"stop":1730512890348,"duration":1198},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x56536650a0aa <unknown>\n#1 0x5653660211a0 <unknown>\n#2 0x565366074896 <unknown>\n#3 0x56536607282d <unknown>\n#4 0x5653660702d7 <unknown>\n#5 0x56536606f6f1 <unknown>\n#6 0x565366062cf8 <unknown>\n#7 0x565366091d82 <unknown>\n#8 0x5653660626d8 <unknown>\n#9 0x565366091f4e <unknown>\n#10 0x5653660b0866 <unknown>\n#11 0x565366091b23 <unknown>\n#12 0x565366060990 <unknown>\n#13 0x56536606196e <unknown>\n#14 0x5653664d616b <unknown>\n#15 0x5653664d9f68 <unknown>\n#16 0x5653664c364c <unknown>\n#17 0x5653664daae7 <unknown>\n#18 0x5653664a84af <unknown>\n#19 0x5653664f84f8 <unknown>\n#20 0x5653664f86c0 <unknown>\n#21 0x565366508f26 <unknown>\n#22 0x7fee28094ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/shopping_cart_page.py\", line 190, in click_apply_discount_code\n    self.element_is_clickable(self.shopping_locators.APPLY_DISCOUNT_CODE).click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1730512889150,"stop":1730512889251,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#block-discount-heading')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"32dc90231452cf18","name":"Screenshot","source":"32dc90231452cf18.png","type":"image/png","size":62075},{"uid":"e2ec8d937b4a892f","name":"HTML source","source":"e2ec8d937b4a892f.html","type":"text/html","size":258951}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1730512890488,"stop":1730512890572,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1730513177310,"stop":1730513177310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Shopping Cart is full"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_shopping_cart"},{"name":"subSuite","value":"TestShoppingCartFull"},{"name":"host","value":"fv-az1391-672"},{"name":"thread","value":"2936-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_shopping_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":4,"unknown":0,"total":6},"items":[{"uid":"3f628ccdd9375a72","reportUrl":"https://verafes.github.io/luma_project/481//#testresult/3f628ccdd9375a72","status":"passed","time":{"start":1730426971396,"stop":1730426975354,"duration":3958}},{"uid":"b81a416aa98c4f8e","reportUrl":"https://verafes.github.io/luma_project/480//#testresult/b81a416aa98c4f8e","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_2_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x5612473090aa <unknown>\n#1 0x561246e201a0 <unknown>\n#2 0x561246e73896 <unknown>\n#3 0x561246e7182d <unknown>\n#4 0x561246e6f2d7 <unknown>\n#5 0x561246e6e6f1 <unknown>\n#6 0x561246e61cf8 <unknown>\n#7 0x561246e90d82 <unknown>\n#8 0x561246e616d8 <unknown>\n#9 0x561246e90f4e <unknown>\n#10 0x561246eaf866 <unknown>\n#11 0x561246e90b23 <unknown>\n#12 0x561246e5f990 <unknown>\n#13 0x561246e6096e <unknown>\n#14 0x5612472d516b <unknown>\n#15 0x5612472d8f68 <unknown>\n#16 0x5612472c264c <unknown>\n#17 0x5612472d9ae7 <unknown>\n#18 0x5612472a74af <unknown>\n#19 0x5612472f74f8 <unknown>\n#20 0x5612472f76c0 <unknown>\n#21 0x561247307f26 <unknown>\n#22 0x7fd17d894ac3 <unknown>","time":{"start":1730341194554,"stop":1730341197798,"duration":3244}},{"uid":"a38501c6a8610b67","reportUrl":"https://verafes.github.io/luma_project/479//#testresult/a38501c6a8610b67","status":"passed","time":{"start":1730253780672,"stop":1730253785461,"duration":4789}},{"uid":"7ec9e04c533929c6","reportUrl":"https://verafes.github.io/luma_project/478//#testresult/7ec9e04c533929c6","status":"passed","time":{"start":1730168658692,"stop":1730168663595,"duration":4903}},{"uid":"a6287d1009039ce9","reportUrl":"https://verafes.github.io/luma_project/477//#testresult/a6287d1009039ce9","status":"passed","time":{"start":1730081414758,"stop":1730081419416,"duration":4658}}]},"tags":[]},"source":"f8de65957ea19b24.json","parameterValues":[]}