{"uid":"260f22eeebbc89a7","name":"tc 07.02.26 Verify the button 'Apply Discount' is displayed correct","fullName":"tests.test_shopping_cart.TestShoppingCartFull#test_tc_07_02_26_verify_button_apply_discount_is_displayed","historyId":"303215e727de3f0f385cbcf5a6c20e0c","time":{"start":1731897035009,"stop":1731897039100,"duration":4091},"description":"Check that button 'Apply Discount' is displayed correct","descriptionHtml":"<p>Check that button 'Apply Discount' is displayed correct</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x5562a90454ca <unknown>\n#1 0x5562a8b58620 <unknown>\n#2 0x5562a8badff6 <unknown>\n#3 0x5562a8babf66 <unknown>\n#4 0x5562a8ba9685 <unknown>\n#5 0x5562a8ba8848 <unknown>\n#6 0x5562a8b9bff5 <unknown>\n#7 0x5562a8bcb372 <unknown>\n#8 0x5562a8b9b938 <unknown>\n#9 0x5562a8bcb53e <unknown>\n#10 0x5562a8be9de0 <unknown>\n#11 0x5562a8bcb113 <unknown>\n#12 0x5562a8b99be0 <unknown>\n#13 0x5562a8b9abbe <unknown>\n#14 0x5562a9011e4b <unknown>\n#15 0x5562a9015de2 <unknown>\n#16 0x5562a8ffed2c <unknown>\n#17 0x5562a9016957 <unknown>\n#18 0x5562a8fe44bf <unknown>\n#19 0x5562a9034348 <unknown>\n#20 0x5562a9034510 <unknown>\n#21 0x5562a9044346 <unknown>\n#22 0x7fb784894ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCartFull object at 0x7fb5595d7850>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecead3645271c3c2fb729aeabf76a250\")>\nfull_cart_page = None\n\n    @allure.title(\"tc 07.02.26 Verify the button 'Apply Discount' is displayed correct\")\n    def test_tc_07_02_26_verify_button_apply_discount_is_displayed(self, driver, full_cart_page):\n        \"\"\"Check that button 'Apply Discount' is displayed correct\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n        page.open()\n>       page.click_apply_discount_code()\n\ntests/test_shopping_cart.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:190: in click_apply_discount_code\n    self.element_is_clickable(self.shopping_locators.APPLY_DISCOUNT_CODE).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb559e6db50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5562a9034510 \\\\u003Cunknown>\\\\n#21 0x5562a9044346 \\\\u003Cunknown>\\\\n#22 0x7fb784894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=131.0.6778.69)\nE       Stacktrace:\nE       #0 0x5562a90454ca <unknown>\nE       #1 0x5562a8b58620 <unknown>\nE       #2 0x5562a8badff6 <unknown>\nE       #3 0x5562a8babf66 <unknown>\nE       #4 0x5562a8ba9685 <unknown>\nE       #5 0x5562a8ba8848 <unknown>\nE       #6 0x5562a8b9bff5 <unknown>\nE       #7 0x5562a8bcb372 <unknown>\nE       #8 0x5562a8b9b938 <unknown>\nE       #9 0x5562a8bcb53e <unknown>\nE       #10 0x5562a8be9de0 <unknown>\nE       #11 0x5562a8bcb113 <unknown>\nE       #12 0x5562a8b99be0 <unknown>\nE       #13 0x5562a8b9abbe <unknown>\nE       #14 0x5562a9011e4b <unknown>\nE       #15 0x5562a9015de2 <unknown>\nE       #16 0x5562a8ffed2c <unknown>\nE       #17 0x5562a9016957 <unknown>\nE       #18 0x5562a8fe44bf <unknown>\nE       #19 0x5562a9034348 <unknown>\nE       #20 0x5562a9034510 <unknown>\nE       #21 0x5562a9044346 <unknown>\nE       #22 0x7fb784894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1731894306175,"stop":1731894306240,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1731894306240,"stop":1731894306240,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1731897027029,"stop":1731897028297,"duration":1268},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"full_cart_page","time":{"start":1731897028297,"stop":1731897035008,"duration":6711},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check that button 'Apply Discount' is displayed correct","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x5562a90454ca <unknown>\n#1 0x5562a8b58620 <unknown>\n#2 0x5562a8badff6 <unknown>\n#3 0x5562a8babf66 <unknown>\n#4 0x5562a8ba9685 <unknown>\n#5 0x5562a8ba8848 <unknown>\n#6 0x5562a8b9bff5 <unknown>\n#7 0x5562a8bcb372 <unknown>\n#8 0x5562a8b9b938 <unknown>\n#9 0x5562a8bcb53e <unknown>\n#10 0x5562a8be9de0 <unknown>\n#11 0x5562a8bcb113 <unknown>\n#12 0x5562a8b99be0 <unknown>\n#13 0x5562a8b9abbe <unknown>\n#14 0x5562a9011e4b <unknown>\n#15 0x5562a9015de2 <unknown>\n#16 0x5562a8ffed2c <unknown>\n#17 0x5562a9016957 <unknown>\n#18 0x5562a8fe44bf <unknown>\n#19 0x5562a9034348 <unknown>\n#20 0x5562a9034510 <unknown>\n#21 0x5562a9044346 <unknown>\n#22 0x7fb784894ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCartFull object at 0x7fb5595d7850>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ecead3645271c3c2fb729aeabf76a250\")>\nfull_cart_page = None\n\n    @allure.title(\"tc 07.02.26 Verify the button 'Apply Discount' is displayed correct\")\n    def test_tc_07_02_26_verify_button_apply_discount_is_displayed(self, driver, full_cart_page):\n        \"\"\"Check that button 'Apply Discount' is displayed correct\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n        page.open()\n>       page.click_apply_discount_code()\n\ntests/test_shopping_cart.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:190: in click_apply_discount_code\n    self.element_is_clickable(self.shopping_locators.APPLY_DISCOUNT_CODE).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb559e6db50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5562a9034510 \\\\u003Cunknown>\\\\n#21 0x5562a9044346 \\\\u003Cunknown>\\\\n#22 0x7fb784894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=131.0.6778.69)\nE       Stacktrace:\nE       #0 0x5562a90454ca <unknown>\nE       #1 0x5562a8b58620 <unknown>\nE       #2 0x5562a8badff6 <unknown>\nE       #3 0x5562a8babf66 <unknown>\nE       #4 0x5562a8ba9685 <unknown>\nE       #5 0x5562a8ba8848 <unknown>\nE       #6 0x5562a8b9bff5 <unknown>\nE       #7 0x5562a8bcb372 <unknown>\nE       #8 0x5562a8b9b938 <unknown>\nE       #9 0x5562a8bcb53e <unknown>\nE       #10 0x5562a8be9de0 <unknown>\nE       #11 0x5562a8bcb113 <unknown>\nE       #12 0x5562a8b99be0 <unknown>\nE       #13 0x5562a8b9abbe <unknown>\nE       #14 0x5562a9011e4b <unknown>\nE       #15 0x5562a9015de2 <unknown>\nE       #16 0x5562a8ffed2c <unknown>\nE       #17 0x5562a9016957 <unknown>\nE       #18 0x5562a8fe44bf <unknown>\nE       #19 0x5562a9034348 <unknown>\nE       #20 0x5562a9034510 <unknown>\nE       #21 0x5562a9044346 <unknown>\nE       #22 0x7fb784894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open a browser","time":{"start":1731897035009,"stop":1731897037901,"duration":2892},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Apply Discount Code on click","time":{"start":1731897037901,"stop":1731897039100,"duration":1199},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <strong id=\"block-discount-heading\" role=\"heading\" aria-level=\"2\">...</strong> is not clickable at point (394, 849). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x5562a90454ca <unknown>\n#1 0x5562a8b58620 <unknown>\n#2 0x5562a8badff6 <unknown>\n#3 0x5562a8babf66 <unknown>\n#4 0x5562a8ba9685 <unknown>\n#5 0x5562a8ba8848 <unknown>\n#6 0x5562a8b9bff5 <unknown>\n#7 0x5562a8bcb372 <unknown>\n#8 0x5562a8b9b938 <unknown>\n#9 0x5562a8bcb53e <unknown>\n#10 0x5562a8be9de0 <unknown>\n#11 0x5562a8bcb113 <unknown>\n#12 0x5562a8b99be0 <unknown>\n#13 0x5562a8b9abbe <unknown>\n#14 0x5562a9011e4b <unknown>\n#15 0x5562a9015de2 <unknown>\n#16 0x5562a8ffed2c <unknown>\n#17 0x5562a9016957 <unknown>\n#18 0x5562a8fe44bf <unknown>\n#19 0x5562a9034348 <unknown>\n#20 0x5562a9034510 <unknown>\n#21 0x5562a9044346 <unknown>\n#22 0x7fb784894ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/shopping_cart_page.py\", line 190, in click_apply_discount_code\n    self.element_is_clickable(self.shopping_locators.APPLY_DISCOUNT_CODE).click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1731897037901,"stop":1731897038026,"duration":125},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#block-discount-heading')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e38ba3a6cfcedfe6","name":"Screenshot","source":"e38ba3a6cfcedfe6.png","type":"image/png","size":99701},{"uid":"ea2903bffe757c7d","name":"HTML source","source":"ea2903bffe757c7d.html","type":"text/html","size":242114}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1731897039260,"stop":1731897039347,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1731897320871,"stop":1731897320871,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Shopping Cart is full"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_shopping_cart"},{"name":"subSuite","value":"TestShoppingCartFull"},{"name":"host","value":"fv-az573-955"},{"name":"thread","value":"2835-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_shopping_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"9aba4f865554f0e2","reportUrl":"https://verafes.github.io/luma_project/497//#testresult/9aba4f865554f0e2","status":"passed","time":{"start":1731809436897,"stop":1731809439297,"duration":2400}}]},"tags":[]},"source":"260f22eeebbc89a7.json","parameterValues":[]}