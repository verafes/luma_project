{"uid":"bcaa9dc8c8deab0e","name":"test_check_card_price","fullName":"tests.test_main_page.TestHotSellerSection#test_check_card_price","historyId":"f4026d9f96acc9996f781ecba7818e56","time":{"start":1723944817747,"stop":1723944818664,"duration":917},"description":"This test checks that the card has a price and a price in USD","descriptionHtml":"<p>This test checks that the card has a price and a price in USD</p>\n","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=127.0.6533.99); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55795d5ed6aa <unknown>\n#1 0x55795d2be600 <unknown>\n#2 0x55795d2c448f <unknown>\n#3 0x55795d2c60b5 <unknown>\n#4 0x55795d2c613c <unknown>\n#5 0x55795d308122 <unknown>\n#6 0x55795d3308a2 <unknown>\n#7 0x55795d302599 <unknown>\n#8 0x55795d330a6e <unknown>\n#9 0x55795d34f04a <unknown>\n#10 0x55795d330643 <unknown>\n#11 0x55795d300d31 <unknown>\n#12 0x55795d30179e <unknown>\n#13 0x55795d5b523b <unknown>\n#14 0x55795d5b91d2 <unknown>\n#15 0x55795d5a25f5 <unknown>\n#16 0x55795d5b9d62 <unknown>\n#17 0x55795d58723f <unknown>\n#18 0x55795d5dce48 <unknown>\n#19 0x55795d5dd020 <unknown>\n#20 0x55795d5ec47c <unknown>\n#21 0x7f9a43894ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7f13eda66850>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"10d7b679bb2b8a89963b1d6046dc75e4\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    def test_check_card_price(self, driver):\n        \"\"\"This test checks that the card has a price and a price in USD\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       text = page.check_card_price()\n\ntests/test_main_page.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:49: in check_card_price\n    text = self.get_text(self.locators.CARD_PRICE)\npages/base_page.py:145: in get_text\n    return text.text\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f13ef4fe810>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55795d5dd020 \\\\u003Cunknown>\\\\n#20 0x55795d5ec47c \\\\u003Cunknown>\\\\n#21 0x7f9a43894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=127.0.6533.99); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55795d5ed6aa <unknown>\nE       #1 0x55795d2be600 <unknown>\nE       #2 0x55795d2c448f <unknown>\nE       #3 0x55795d2c60b5 <unknown>\nE       #4 0x55795d2c613c <unknown>\nE       #5 0x55795d308122 <unknown>\nE       #6 0x55795d3308a2 <unknown>\nE       #7 0x55795d302599 <unknown>\nE       #8 0x55795d330a6e <unknown>\nE       #9 0x55795d34f04a <unknown>\nE       #10 0x55795d330643 <unknown>\nE       #11 0x55795d300d31 <unknown>\nE       #12 0x55795d30179e <unknown>\nE       #13 0x55795d5b523b <unknown>\nE       #14 0x55795d5b91d2 <unknown>\nE       #15 0x55795d5a25f5 <unknown>\nE       #16 0x55795d5b9d62 <unknown>\nE       #17 0x55795d58723f <unknown>\nE       #18 0x55795d5dce48 <unknown>\nE       #19 0x55795d5dd020 <unknown>\nE       #20 0x55795d5ec47c <unknown>\nE       #21 0x7f9a43894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1723944365307,"stop":1723944365375,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1723944365375,"stop":1723944365375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1723944816556,"stop":1723944817746,"duration":1190},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"This test checks that the card has a price and a price in USD","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=127.0.6533.99); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55795d5ed6aa <unknown>\n#1 0x55795d2be600 <unknown>\n#2 0x55795d2c448f <unknown>\n#3 0x55795d2c60b5 <unknown>\n#4 0x55795d2c613c <unknown>\n#5 0x55795d308122 <unknown>\n#6 0x55795d3308a2 <unknown>\n#7 0x55795d302599 <unknown>\n#8 0x55795d330a6e <unknown>\n#9 0x55795d34f04a <unknown>\n#10 0x55795d330643 <unknown>\n#11 0x55795d300d31 <unknown>\n#12 0x55795d30179e <unknown>\n#13 0x55795d5b523b <unknown>\n#14 0x55795d5b91d2 <unknown>\n#15 0x55795d5a25f5 <unknown>\n#16 0x55795d5b9d62 <unknown>\n#17 0x55795d58723f <unknown>\n#18 0x55795d5dce48 <unknown>\n#19 0x55795d5dd020 <unknown>\n#20 0x55795d5ec47c <unknown>\n#21 0x7f9a43894ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7f13eda66850>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"10d7b679bb2b8a89963b1d6046dc75e4\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    def test_check_card_price(self, driver):\n        \"\"\"This test checks that the card has a price and a price in USD\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       text = page.check_card_price()\n\ntests/test_main_page.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:49: in check_card_price\n    text = self.get_text(self.locators.CARD_PRICE)\npages/base_page.py:145: in get_text\n    return text.text\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f13ef4fe810>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55795d5dd020 \\\\u003Cunknown>\\\\n#20 0x55795d5ec47c \\\\u003Cunknown>\\\\n#21 0x7f9a43894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=127.0.6533.99); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55795d5ed6aa <unknown>\nE       #1 0x55795d2be600 <unknown>\nE       #2 0x55795d2c448f <unknown>\nE       #3 0x55795d2c60b5 <unknown>\nE       #4 0x55795d2c613c <unknown>\nE       #5 0x55795d308122 <unknown>\nE       #6 0x55795d3308a2 <unknown>\nE       #7 0x55795d302599 <unknown>\nE       #8 0x55795d330a6e <unknown>\nE       #9 0x55795d34f04a <unknown>\nE       #10 0x55795d330643 <unknown>\nE       #11 0x55795d300d31 <unknown>\nE       #12 0x55795d30179e <unknown>\nE       #13 0x55795d5b523b <unknown>\nE       #14 0x55795d5b91d2 <unknown>\nE       #15 0x55795d5a25f5 <unknown>\nE       #16 0x55795d5b9d62 <unknown>\nE       #17 0x55795d58723f <unknown>\nE       #18 0x55795d5dce48 <unknown>\nE       #19 0x55795d5dd020 <unknown>\nE       #20 0x55795d5ec47c <unknown>\nE       #21 0x7f9a43894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Open a browser","time":{"start":1723944817747,"stop":1723944818542,"duration":795},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Get element text","time":{"start":1723944818542,"stop":1723944818662,"duration":120},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=127.0.6533.99); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55795d5ed6aa <unknown>\n#1 0x55795d2be600 <unknown>\n#2 0x55795d2c448f <unknown>\n#3 0x55795d2c60b5 <unknown>\n#4 0x55795d2c613c <unknown>\n#5 0x55795d308122 <unknown>\n#6 0x55795d3308a2 <unknown>\n#7 0x55795d302599 <unknown>\n#8 0x55795d330a6e <unknown>\n#9 0x55795d34f04a <unknown>\n#10 0x55795d330643 <unknown>\n#11 0x55795d300d31 <unknown>\n#12 0x55795d30179e <unknown>\n#13 0x55795d5b523b <unknown>\n#14 0x55795d5b91d2 <unknown>\n#15 0x55795d5a25f5 <unknown>\n#16 0x55795d5b9d62 <unknown>\n#17 0x55795d58723f <unknown>\n#18 0x55795d5dce48 <unknown>\n#19 0x55795d5dd020 <unknown>\n#20 0x55795d5ec47c <unknown>\n#21 0x7f9a43894ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 145, in get_text\n    return text.text\n           ^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 89, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1723944818542,"stop":1723944818607,"duration":65},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1723944818543,"stop":1723944818569,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(2) span[class='price']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1723944818569,"stop":1723944818575,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"10d7b679bb2b8a89963b1d6046dc75e4\", element=\"f.D9D28042EE3934A7615687741018B284.d.D881AB4D2519881D19B63B1A30F4316E.e.11\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(2) span[class='price']\")"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(2) span[class='price']\")"}],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3015e1712c2841bc","name":"Screenshot","source":"3015e1712c2841bc.png","type":"image/png","size":126948},{"uid":"364d6e9e8d65fdd8","name":"HTML source","source":"364d6e9e8d65fdd8.html","type":"text/html","size":123093}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1723944818857,"stop":1723944818926,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1723945537594,"stop":1723945537594,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Main Page"},{"name":"feature","value":"Testing Hot Seller Section"},{"name":"tag","value":"@pytest.mark.xfail(reason='In CI the test failed in PR#203')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az1446-103"},{"name":"thread","value":"2878-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail(reason='In CI the test failed in PR#203')"]},"source":"bcaa9dc8c8deab0e.json","parameterValues":[]}