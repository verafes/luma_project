{"uid":"c7ceb82768fb464","name":"TC 06.01.02 - verify the card is interactive on hover","fullName":"tests.test_main_page.TestHotSellerSection#test_verify_the_card_is_interactive_on_hover","historyId":"0ae3fd0cada57213a5c961202c8dada8","time":{"start":1702430603316,"stop":1702430604929,"duration":1613},"description":"This test checks that the card is interactive","descriptionHtml":"<p>This test checks that the card is interactive</p>\n","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nAssertionError: Card is not interactive\nassert 'rgba(0, 0, 0, 0.3) 3px 4px 4px 0px' != 'rgba(0, 0, 0, 0.3) 3px 4px 4px 0px'","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7fd33686ff10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc18e2dbf56bb7ddbcf0971005436f97\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    @allure.title(\"TC 06.01.02 - verify the card is interactive on hover\")\n    def test_verify_the_card_is_interactive_on_hover(self, driver):\n        \"\"\"This test checks that the card is interactive\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n        shadow_before, shadow_after = page.check_for_shadow_appearance_when_hovering_over_the_card()\n>       assert shadow_before != shadow_after, \\\n            \"Card is not interactive\"\nE       AssertionError: Card is not interactive\nE       assert 'rgba(0, 0, 0, 0.3) 3px 4px 4px 0px' != 'rgba(0, 0, 0, 0.3) 3px 4px 4px 0px'\n\ntests/test_main_page.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702430004886,"stop":1702430004949,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1702430004949,"stop":1702430004949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1702430602356,"stop":1702430603316,"duration":960},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"This test checks that the card is interactive","status":"skipped","statusMessage":"XFAIL In CI the test failed in PR#203\n\nAssertionError: Card is not interactive\nassert 'rgba(0, 0, 0, 0.3) 3px 4px 4px 0px' != 'rgba(0, 0, 0, 0.3) 3px 4px 4px 0px'","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7fd33686ff10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc18e2dbf56bb7ddbcf0971005436f97\")>\n\n    @pytest.mark.xfail(reason=\"In CI the test failed in PR#203\")\n    @allure.title(\"TC 06.01.02 - verify the card is interactive on hover\")\n    def test_verify_the_card_is_interactive_on_hover(self, driver):\n        \"\"\"This test checks that the card is interactive\"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n        shadow_before, shadow_after = page.check_for_shadow_appearance_when_hovering_over_the_card()\n>       assert shadow_before != shadow_after, \\\n            \"Card is not interactive\"\nE       AssertionError: Card is not interactive\nE       assert 'rgba(0, 0, 0, 0.3) 3px 4px 4px 0px' != 'rgba(0, 0, 0, 0.3) 3px 4px 4px 0px'\n\ntests/test_main_page.py:25: AssertionError","steps":[{"name":"Open a browser","time":{"start":1702430603317,"stop":1702430604606,"duration":1289},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Find a visible element","time":{"start":1702430604606,"stop":1702430604637,"duration":31},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1702430604606,"stop":1702430604615,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(3) div[class='product-item-info']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1702430604615,"stop":1702430604619,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"dc18e2dbf56bb7ddbcf0971005436f97\", element=\"7DA7329243F0729DFC3D6423F21C2208_element_8\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(3) div[class='product-item-info']\")"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move cursor to element","time":{"start":1702430604645,"stop":1702430604924,"duration":279},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"dc18e2dbf56bb7ddbcf0971005436f97\", element=\"7DA7329243F0729DFC3D6423F21C2208_element_8\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9c186f8e38c62bbc","name":"Screenshot","source":"9c186f8e38c62bbc.png","type":"image/png","size":321705},{"uid":"74642f0c8ff34047","name":"HTML source","source":"74642f0c8ff34047.html","type":"text/html","size":124223}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1702430605161,"stop":1702430605229,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1702431770007,"stop":1702431770007,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Main Page"},{"name":"feature","value":"Testing Hot Seller Section"},{"name":"tag","value":"@pytest.mark.xfail(reason='In CI the test failed in PR#203')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az573-728"},{"name":"thread","value":"3032-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":1,"passed":3,"unknown":0,"total":4},"items":[{"uid":"2ae458eb5018224e","reportUrl":"https://verafes.github.io/luma_project/156//#testresult/2ae458eb5018224e","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1702344219026,"stop":1702344220662,"duration":1636}},{"uid":"8de4ea2e06de4856","reportUrl":"https://verafes.github.io/luma_project/155//#testresult/8de4ea2e06de4856","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1702257818519,"stop":1702257819838,"duration":1319}},{"uid":"fe8a9d6190d3f9f2","reportUrl":"https://verafes.github.io/luma_project/154//#testresult/fe8a9d6190d3f9f2","status":"passed","statusDetails":"XPASS In CI the test failed in PR#203","time":{"start":1702171658000,"stop":1702171659721,"duration":1721}}]},"tags":["@pytest.mark.xfail(reason='In CI the test failed in PR#203')"]},"source":"c7ceb82768fb464.json","parameterValues":[]}