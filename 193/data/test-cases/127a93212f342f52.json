{"uid":"127a93212f342f52","name":"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_01_32_check_text_of_write_for_us_link_on_pages","historyId":"27d4644d484c5fead378278f7d4af6ee","time":{"start":1705540626347,"stop":1705540627195,"duration":848},"description":"Checks if text of Write for us link is correct on each page in DATA_1","descriptionHtml":"<p>Checks if text of Write for us link is correct on each page in DATA_1</p>\n","status":"failed","statusMessage":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7fb8e0d9c310>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"80cb2aba1981fb25c72a792dc317733d\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705540443788,"stop":1705540443852,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1705540443853,"stop":1705540443853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1705540625384,"stop":1705540626346,"duration":962},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Checks if text of Write for us link is correct on each page in DATA_1","status":"failed","statusMessage":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7fb8e0d9c310>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"80cb2aba1981fb25c72a792dc317733d\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","steps":[{"name":"Open a browser","time":{"start":1705540626347,"stop":1705540627144,"duration":797},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check the text of Write for us link","time":{"start":1705540627144,"stop":1705540627195,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"7d3b2eec179ad174","name":"Screenshot","source":"7d3b2eec179ad174.png","type":"image/png","size":654233},{"uid":"8c78dfacf9a95b39","name":"HTML source","source":"8c78dfacf9a95b39.html","type":"text/html","size":116428}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1705540627536,"stop":1705540627603,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1705541700331,"stop":1705541700331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az523-111"},{"name":"thread","value":"3078-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":5},"items":[{"uid":"d40d472ba3ece5aa","reportUrl":"https://verafes.github.io/luma_project/192//#testresult/d40d472ba3ece5aa","status":"failed","statusDetails":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1705454354398,"stop":1705454355242,"duration":844}},{"uid":"b464e892e5545bca","reportUrl":"https://verafes.github.io/luma_project/191//#testresult/b464e892e5545bca","status":"failed","statusDetails":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1705367825828,"stop":1705367826712,"duration":884}},{"uid":"191b79770e5f802e","reportUrl":"https://verafes.github.io/luma_project/190//#testresult/191b79770e5f802e","status":"passed","time":{"start":1705281585381,"stop":1705281586276,"duration":895}},{"uid":"f716053d97c4fa01","reportUrl":"https://verafes.github.io/luma_project/189//#testresult/f716053d97c4fa01","status":"passed","time":{"start":1705195342557,"stop":1705195343428,"duration":871}}]},"tags":[]},"source":"127a93212f342f52.json","parameterValues":["'https://magento.softwaretestingboard.com/'"]}