{"uid":"5f3a86193dc38260","name":"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_01_32_check_text_of_write_for_us_link_on_pages","historyId":"27d4644d484c5fead378278f7d4af6ee","time":{"start":1706404589651,"stop":1706404590422,"duration":771},"description":"Checks if text of Write for us link is correct on each page in DATA_1","descriptionHtml":"<p>Checks if text of Write for us link is correct on each page in DATA_1</p>\n","status":"failed","statusMessage":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7f09c3cc6f90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e91539baf77078a4d8bd97682595283\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1706404407743,"stop":1706404407806,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1706404407806,"stop":1706404407806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1706404588699,"stop":1706404589651,"duration":952},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Checks if text of Write for us link is correct on each page in DATA_1","status":"failed","statusMessage":"AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nassert 'Notes' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7f09c3cc6f90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e91539baf77078a4d8bd97682595283\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","steps":[{"name":"Open a browser","time":{"start":1706404589651,"stop":1706404590379,"duration":728},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check the text of Write for us link","time":{"start":1706404590379,"stop":1706404590422,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"f2a9f89131cac547","name":"Screenshot","source":"f2a9f89131cac547.png","type":"image/png","size":654233},{"uid":"d69004557a03f6aa","name":"HTML source","source":"d69004557a03f6aa.html","type":"text/html","size":117568}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1706404590752,"stop":1706404590820,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1706405614298,"stop":1706405614298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az841-861"},{"name":"thread","value":"3079-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5f3a86193dc38260.json","parameterValues":["'https://magento.softwaretestingboard.com/'"]}