{"uid":"cfe24718ce2a6c6c","name":"tc 07.01.04 Verify that here link leads to the main page","fullName":"tests.test_shopping_cart.TestShoppingCart#test_tc_07_01_04_verify_here_link_leads_to_the_main_page","historyId":"74ce87d1c1cd156eddc6d9ac3f3d65b1","time":{"start":1729130965481,"stop":1729131267479,"duration":301998},"description":"Verify that the link \"here\" redirects to the main page.","descriptionHtml":"<p>Verify that the link &quot;here&quot; redirects to the main page.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55614f38902a <unknown>\n#1 0x55614f06f5e0 <unknown>\n#2 0x55614f057733 <unknown>\n#3 0x55614f057422 <unknown>\n#4 0x55614f055493 <unknown>\n#5 0x55614f055c4f <unknown>\n#6 0x55614f065667 <unknown>\n#7 0x55614f07b9b4 <unknown>\n#8 0x55614f080dfb <unknown>\n#9 0x55614f05635e <unknown>\n#10 0x55614f07b80f <unknown>\n#11 0x55614f102fe2 <unknown>\n#12 0x55614f0e38c3 <unknown>\n#13 0x55614f0b16b3 <unknown>\n#14 0x55614f0b268e <unknown>\n#15 0x55614f353a2b <unknown>\n#16 0x55614f3579b1 <unknown>\n#17 0x55614f340225 <unknown>\n#18 0x55614f358532 <unknown>\n#19 0x55614f32538f <unknown>\n#20 0x55614f377f28 <unknown>\n#21 0x55614f3780f3 <unknown>\n#22 0x55614f387e7c <unknown>\n#23 0x7ffbee294ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCart object at 0x7f0ff9189890>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cd57e26a2c4655c8f7a411ed396ff8b4\")>\n\n    @allure.title(\"tc 07.01.04 Verify that here link leads to the main page\")\n    def test_tc_07_01_04_verify_here_link_leads_to_the_main_page(self, driver):\n        \"\"\"Verify that the link \"here\" redirects to the main page.\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n        page.open()\n>       actual_link = page.here_link_actual_url()\n\ntests/test_shopping_cart.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:29: in here_link_actual_url\n    here_link.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0ffa99e550>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55614f3780f3 \\\\u003Cunknown>\\\\n#22 0x55614f387e7c \\\\u003Cunknown>\\\\n#23 0x7ffbee294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x55614f38902a <unknown>\nE       #1 0x55614f06f5e0 <unknown>\nE       #2 0x55614f057733 <unknown>\nE       #3 0x55614f057422 <unknown>\nE       #4 0x55614f055493 <unknown>\nE       #5 0x55614f055c4f <unknown>\nE       #6 0x55614f065667 <unknown>\nE       #7 0x55614f07b9b4 <unknown>\nE       #8 0x55614f080dfb <unknown>\nE       #9 0x55614f05635e <unknown>\nE       #10 0x55614f07b80f <unknown>\nE       #11 0x55614f102fe2 <unknown>\nE       #12 0x55614f0e38c3 <unknown>\nE       #13 0x55614f0b16b3 <unknown>\nE       #14 0x55614f0b268e <unknown>\nE       #15 0x55614f353a2b <unknown>\nE       #16 0x55614f3579b1 <unknown>\nE       #17 0x55614f340225 <unknown>\nE       #18 0x55614f358532 <unknown>\nE       #19 0x55614f32538f <unknown>\nE       #20 0x55614f377f28 <unknown>\nE       #21 0x55614f3780f3 <unknown>\nE       #22 0x55614f387e7c <unknown>\nE       #23 0x7ffbee294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1729129063669,"stop":1729129063732,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1729129063732,"stop":1729129063733,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1729130964239,"stop":1729130965480,"duration":1241},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify that the link \"here\" redirects to the main page.","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55614f38902a <unknown>\n#1 0x55614f06f5e0 <unknown>\n#2 0x55614f057733 <unknown>\n#3 0x55614f057422 <unknown>\n#4 0x55614f055493 <unknown>\n#5 0x55614f055c4f <unknown>\n#6 0x55614f065667 <unknown>\n#7 0x55614f07b9b4 <unknown>\n#8 0x55614f080dfb <unknown>\n#9 0x55614f05635e <unknown>\n#10 0x55614f07b80f <unknown>\n#11 0x55614f102fe2 <unknown>\n#12 0x55614f0e38c3 <unknown>\n#13 0x55614f0b16b3 <unknown>\n#14 0x55614f0b268e <unknown>\n#15 0x55614f353a2b <unknown>\n#16 0x55614f3579b1 <unknown>\n#17 0x55614f340225 <unknown>\n#18 0x55614f358532 <unknown>\n#19 0x55614f32538f <unknown>\n#20 0x55614f377f28 <unknown>\n#21 0x55614f3780f3 <unknown>\n#22 0x55614f387e7c <unknown>\n#23 0x7ffbee294ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCart object at 0x7f0ff9189890>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cd57e26a2c4655c8f7a411ed396ff8b4\")>\n\n    @allure.title(\"tc 07.01.04 Verify that here link leads to the main page\")\n    def test_tc_07_01_04_verify_here_link_leads_to_the_main_page(self, driver):\n        \"\"\"Verify that the link \"here\" redirects to the main page.\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n        page.open()\n>       actual_link = page.here_link_actual_url()\n\ntests/test_shopping_cart.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:29: in here_link_actual_url\n    here_link.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0ffa99e550>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x55614f3780f3 \\\\u003Cunknown>\\\\n#22 0x55614f387e7c \\\\u003Cunknown>\\\\n#23 0x7ffbee294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x55614f38902a <unknown>\nE       #1 0x55614f06f5e0 <unknown>\nE       #2 0x55614f057733 <unknown>\nE       #3 0x55614f057422 <unknown>\nE       #4 0x55614f055493 <unknown>\nE       #5 0x55614f055c4f <unknown>\nE       #6 0x55614f065667 <unknown>\nE       #7 0x55614f07b9b4 <unknown>\nE       #8 0x55614f080dfb <unknown>\nE       #9 0x55614f05635e <unknown>\nE       #10 0x55614f07b80f <unknown>\nE       #11 0x55614f102fe2 <unknown>\nE       #12 0x55614f0e38c3 <unknown>\nE       #13 0x55614f0b16b3 <unknown>\nE       #14 0x55614f0b268e <unknown>\nE       #15 0x55614f353a2b <unknown>\nE       #16 0x55614f3579b1 <unknown>\nE       #17 0x55614f340225 <unknown>\nE       #18 0x55614f358532 <unknown>\nE       #19 0x55614f32538f <unknown>\nE       #20 0x55614f377f28 <unknown>\nE       #21 0x55614f3780f3 <unknown>\nE       #22 0x55614f387e7c <unknown>\nE       #23 0x7ffbee294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Open a browser","time":{"start":1729130965481,"stop":1729130967289,"duration":1808},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check that here link leads to the correct url","time":{"start":1729130967290,"stop":1729131267479,"duration":300189},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55614f38902a <unknown>\n#1 0x55614f06f5e0 <unknown>\n#2 0x55614f057733 <unknown>\n#3 0x55614f057422 <unknown>\n#4 0x55614f055493 <unknown>\n#5 0x55614f055c4f <unknown>\n#6 0x55614f065667 <unknown>\n#7 0x55614f07b9b4 <unknown>\n#8 0x55614f080dfb <unknown>\n#9 0x55614f05635e <unknown>\n#10 0x55614f07b80f <unknown>\n#11 0x55614f102fe2 <unknown>\n#12 0x55614f0e38c3 <unknown>\n#13 0x55614f0b16b3 <unknown>\n#14 0x55614f0b268e <unknown>\n#15 0x55614f353a2b <unknown>\n#16 0x55614f3579b1 <unknown>\n#17 0x55614f340225 <unknown>\n#18 0x55614f358532 <unknown>\n#19 0x55614f32538f <unknown>\n#20 0x55614f377f28 <unknown>\n#21 0x55614f3780f3 <unknown>\n#22 0x55614f387e7c <unknown>\n#23 0x7ffbee294ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/shopping_cart_page.py\", line 29, in here_link_actual_url\n    here_link.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1729130967290,"stop":1729130967338,"duration":48},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1729130967290,"stop":1729130967302,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'div.cart-empty > p:nth-child(2) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1729130967302,"stop":1729130967310,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"cd57e26a2c4655c8f7a411ed396ff8b4\", element=\"f.5EC5C6718B08BF39EE939ED155F492AA.d.8179A3317A776BDB72B2EA220CB11474.e.21\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'div.cart-empty > p:nth-child(2) > a')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1729131567544,"stop":1729131567653,"duration":109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1729132015305,"stop":1729132015305,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Shopping Cart"},{"name":"feature","value":"Shopping Cart is empty"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_shopping_cart"},{"name":"subSuite","value":"TestShoppingCart"},{"name":"host","value":"fv-az1445-799"},{"name":"thread","value":"2930-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_shopping_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"cb7841d3d4d8cfd3","reportUrl":"https://verafes.github.io/luma_project/465//#testresult/cb7841d3d4d8cfd3","status":"passed","time":{"start":1729044196337,"stop":1729044200365,"duration":4028}},{"uid":"3bb4145cd322880","reportUrl":"https://verafes.github.io/luma_project/464//#testresult/3bb4145cd322880","status":"passed","time":{"start":1728957903917,"stop":1728957907471,"duration":3554}},{"uid":"962bed5dbb2aef82","reportUrl":"https://verafes.github.io/luma_project/463//#testresult/962bed5dbb2aef82","status":"passed","time":{"start":1728871255137,"stop":1728871259514,"duration":4377}},{"uid":"1898b491913bd48a","reportUrl":"https://verafes.github.io/luma_project/462//#testresult/1898b491913bd48a","status":"passed","time":{"start":1728786061945,"stop":1728786065382,"duration":3437}}]},"tags":[]},"source":"cfe24718ce2a6c6c.json","parameterValues":[]}