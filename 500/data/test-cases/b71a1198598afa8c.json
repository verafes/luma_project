{"uid":"b71a1198598afa8c","name":"TC 03.01.23 Verify Create an Account button is functional","fullName":"tests.test_sign_in.TestNewCustomers#test_03_01_23_create_an_account_button_","historyId":"62dc73bef87974182479566edd960df0","time":{"start":1732069171212,"stop":1732069471344,"duration":300132},"description":"Check if 'Create an Account' button link opens correct page","descriptionHtml":"<p>Check if 'Create an Account' button link opens correct page</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x559ed48ce4ca <unknown>\n#1 0x559ed43e1620 <unknown>\n#2 0x559ed43c9907 <unknown>\n#3 0x559ed43c95de <unknown>\n#4 0x559ed43c7616 <unknown>\n#5 0x559ed43c7dff <unknown>\n#6 0x559ed43d7687 <unknown>\n#7 0x559ed43ee4a4 <unknown>\n#8 0x559ed43f432b <unknown>\n#9 0x559ed43c8507 <unknown>\n#10 0x559ed43ee304 <unknown>\n#11 0x559ed447315f <unknown>\n#12 0x559ed4454113 <unknown>\n#13 0x559ed4422be0 <unknown>\n#14 0x559ed4423bbe <unknown>\n#15 0x559ed489ae4b <unknown>\n#16 0x559ed489ede2 <unknown>\n#17 0x559ed4887d2c <unknown>\n#18 0x559ed489f957 <unknown>\n#19 0x559ed486d4bf <unknown>\n#20 0x559ed48bd348 <unknown>\n#21 0x559ed48bd510 <unknown>\n#22 0x559ed48cd346 <unknown>\n#23 0x7f72f2c94ac3 <unknown>","statusTrace":"self = <test_sign_in.TestNewCustomers object at 0x7f634ec97cd0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9513c3b9bc42a591abe83bdc8ea31ac6\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f634f14d490>\n\n    @allure.title('TC 03.01.23 Verify Create an Account button is functional')\n    def test_03_01_23_create_an_account_button_(self, driver, sign_in_page):\n        \"\"\"Check if 'Create an Account' button link opens correct page\"\"\"\n>       sign_in_page.click_create_an_account_button()\n\ntests/test_sign_in.py:193: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:143: in click_create_an_account_button\n    return self.element_is_clickable(self.locators.CREATE_ACCOUNT_BUTTON).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f634f212c50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x559ed48bd510 \\\\u003Cunknown>\\\\n#22 0x559ed48cd346 \\\\u003Cunknown>\\\\n#23 0x7f72f2c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=131.0.6778.69)\nE       Stacktrace:\nE       #0 0x559ed48ce4ca <unknown>\nE       #1 0x559ed43e1620 <unknown>\nE       #2 0x559ed43c9907 <unknown>\nE       #3 0x559ed43c95de <unknown>\nE       #4 0x559ed43c7616 <unknown>\nE       #5 0x559ed43c7dff <unknown>\nE       #6 0x559ed43d7687 <unknown>\nE       #7 0x559ed43ee4a4 <unknown>\nE       #8 0x559ed43f432b <unknown>\nE       #9 0x559ed43c8507 <unknown>\nE       #10 0x559ed43ee304 <unknown>\nE       #11 0x559ed447315f <unknown>\nE       #12 0x559ed4454113 <unknown>\nE       #13 0x559ed4422be0 <unknown>\nE       #14 0x559ed4423bbe <unknown>\nE       #15 0x559ed489ae4b <unknown>\nE       #16 0x559ed489ede2 <unknown>\nE       #17 0x559ed4887d2c <unknown>\nE       #18 0x559ed489f957 <unknown>\nE       #19 0x559ed486d4bf <unknown>\nE       #20 0x559ed48bd348 <unknown>\nE       #21 0x559ed48bd510 <unknown>\nE       #22 0x559ed48cd346 <unknown>\nE       #23 0x7f72f2c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732066923608,"stop":1732066923673,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1732066923673,"stop":1732066923674,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732069168205,"stop":1732069169407,"duration":1202},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sign_in_page","time":{"start":1732069169407,"stop":1732069171211,"duration":1804},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1732069169407,"stop":1732069171211,"duration":1804},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Check if 'Create an Account' button link opens correct page","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x559ed48ce4ca <unknown>\n#1 0x559ed43e1620 <unknown>\n#2 0x559ed43c9907 <unknown>\n#3 0x559ed43c95de <unknown>\n#4 0x559ed43c7616 <unknown>\n#5 0x559ed43c7dff <unknown>\n#6 0x559ed43d7687 <unknown>\n#7 0x559ed43ee4a4 <unknown>\n#8 0x559ed43f432b <unknown>\n#9 0x559ed43c8507 <unknown>\n#10 0x559ed43ee304 <unknown>\n#11 0x559ed447315f <unknown>\n#12 0x559ed4454113 <unknown>\n#13 0x559ed4422be0 <unknown>\n#14 0x559ed4423bbe <unknown>\n#15 0x559ed489ae4b <unknown>\n#16 0x559ed489ede2 <unknown>\n#17 0x559ed4887d2c <unknown>\n#18 0x559ed489f957 <unknown>\n#19 0x559ed486d4bf <unknown>\n#20 0x559ed48bd348 <unknown>\n#21 0x559ed48bd510 <unknown>\n#22 0x559ed48cd346 <unknown>\n#23 0x7f72f2c94ac3 <unknown>","statusTrace":"self = <test_sign_in.TestNewCustomers object at 0x7f634ec97cd0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9513c3b9bc42a591abe83bdc8ea31ac6\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f634f14d490>\n\n    @allure.title('TC 03.01.23 Verify Create an Account button is functional')\n    def test_03_01_23_create_an_account_button_(self, driver, sign_in_page):\n        \"\"\"Check if 'Create an Account' button link opens correct page\"\"\"\n>       sign_in_page.click_create_an_account_button()\n\ntests/test_sign_in.py:193: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:143: in click_create_an_account_button\n    return self.element_is_clickable(self.locators.CREATE_ACCOUNT_BUTTON).click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f634f212c50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x559ed48bd510 \\\\u003Cunknown>\\\\n#22 0x559ed48cd346 \\\\u003Cunknown>\\\\n#23 0x7f72f2c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=131.0.6778.69)\nE       Stacktrace:\nE       #0 0x559ed48ce4ca <unknown>\nE       #1 0x559ed43e1620 <unknown>\nE       #2 0x559ed43c9907 <unknown>\nE       #3 0x559ed43c95de <unknown>\nE       #4 0x559ed43c7616 <unknown>\nE       #5 0x559ed43c7dff <unknown>\nE       #6 0x559ed43d7687 <unknown>\nE       #7 0x559ed43ee4a4 <unknown>\nE       #8 0x559ed43f432b <unknown>\nE       #9 0x559ed43c8507 <unknown>\nE       #10 0x559ed43ee304 <unknown>\nE       #11 0x559ed447315f <unknown>\nE       #12 0x559ed4454113 <unknown>\nE       #13 0x559ed4422be0 <unknown>\nE       #14 0x559ed4423bbe <unknown>\nE       #15 0x559ed489ae4b <unknown>\nE       #16 0x559ed489ede2 <unknown>\nE       #17 0x559ed4887d2c <unknown>\nE       #18 0x559ed489f957 <unknown>\nE       #19 0x559ed486d4bf <unknown>\nE       #20 0x559ed48bd348 <unknown>\nE       #21 0x559ed48bd510 <unknown>\nE       #22 0x559ed48cd346 <unknown>\nE       #23 0x7f72f2c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Check Create an Account button is clickable","time":{"start":1732069171212,"stop":1732069471343,"duration":300131},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x559ed48ce4ca <unknown>\n#1 0x559ed43e1620 <unknown>\n#2 0x559ed43c9907 <unknown>\n#3 0x559ed43c95de <unknown>\n#4 0x559ed43c7616 <unknown>\n#5 0x559ed43c7dff <unknown>\n#6 0x559ed43d7687 <unknown>\n#7 0x559ed43ee4a4 <unknown>\n#8 0x559ed43f432b <unknown>\n#9 0x559ed43c8507 <unknown>\n#10 0x559ed43ee304 <unknown>\n#11 0x559ed447315f <unknown>\n#12 0x559ed4454113 <unknown>\n#13 0x559ed4422be0 <unknown>\n#14 0x559ed4423bbe <unknown>\n#15 0x559ed489ae4b <unknown>\n#16 0x559ed489ede2 <unknown>\n#17 0x559ed4887d2c <unknown>\n#18 0x559ed489f957 <unknown>\n#19 0x559ed486d4bf <unknown>\n#20 0x559ed48bd348 <unknown>\n#21 0x559ed48bd510 <unknown>\n#22 0x559ed48cd346 <unknown>\n#23 0x7f72f2c94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 143, in click_create_an_account_button\n    return self.element_is_clickable(self.locators.CREATE_ACCOUNT_BUTTON).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1732069171212,"stop":1732069171255,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.action.create.primary')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732069771394,"stop":1732069771494,"duration":100},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1732069950879,"stop":1732069950879,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"New Customers"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sign_in"},{"name":"subSuite","value":"TestNewCustomers"},{"name":"host","value":"fv-az1020-329"},{"name":"thread","value":"2856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"8f0e6f5c9e269b9e","reportUrl":"https://verafes.github.io/luma_project/499//#testresult/8f0e6f5c9e269b9e","status":"passed","time":{"start":1731983666866,"stop":1731983668312,"duration":1446}},{"uid":"e453786cd47fb2f9","reportUrl":"https://verafes.github.io/luma_project/498//#testresult/e453786cd47fb2f9","status":"passed","time":{"start":1731897157510,"stop":1731897159818,"duration":2308}},{"uid":"93683a26bd76dfed","reportUrl":"https://verafes.github.io/luma_project/497//#testresult/93683a26bd76dfed","status":"passed","time":{"start":1731809559507,"stop":1731809561831,"duration":2324}}]},"tags":[]},"source":"b71a1198598afa8c.json","parameterValues":[]}