{"uid":"b3fa26a7ea6c66ff","name":"TC 03.02.02 to 03_02_10 Verify Error on Failed Login with invalid credentials","fullName":"tests.test_sign_in.TestFailedLogin#test_03_02_02_to_10_error_if_login_with_invalid_credentials","historyId":"4583913b6850c24cdb81747bf33f657d","time":{"start":1728525956239,"stop":1728526256890,"duration":300651},"description":"Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces","descriptionHtml":"<p>Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x56258baeb02a <unknown>\n#1 0x56258b7d15e0 <unknown>\n#2 0x56258b7b9733 <unknown>\n#3 0x56258b7b9422 <unknown>\n#4 0x56258b7b7493 <unknown>\n#5 0x56258b7b7c4f <unknown>\n#6 0x56258b7c7667 <unknown>\n#7 0x56258b7dd9b4 <unknown>\n#8 0x56258b7e2dfb <unknown>\n#9 0x56258b7b835e <unknown>\n#10 0x56258b7dd80f <unknown>\n#11 0x56258b864fe2 <unknown>\n#12 0x56258b8458c3 <unknown>\n#13 0x56258b8136b3 <unknown>\n#14 0x56258b81468e <unknown>\n#15 0x56258bab5a2b <unknown>\n#16 0x56258bab99b1 <unknown>\n#17 0x56258baa2225 <unknown>\n#18 0x56258baba532 <unknown>\n#19 0x56258ba8738f <unknown>\n#20 0x56258bad9f28 <unknown>\n#21 0x56258bada0f3 <unknown>\n#22 0x56258bae9e7c <unknown>\n#23 0x7f4144e94ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7fe2c872a190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d0204bd349cb08bd1a0bc7ca83bb8ea6\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7fe2c9e849d0>\nemail = 'teston110@mailinator.com', password = 'Test#12p@ssword'\n\n    @allure.title('TC 03.02.02 to 03_02_10 Verify Error on Failed Login with invalid credentials')\n    @pytest.mark.parametrize('email, password', [LOGIN[i] for i in [1, 2, 6, 8, 9]])\n    def test_03_02_02_to_10_error_if_login_with_invalid_credentials(self, driver, sign_in_page, email, password):\n        \"\"\"Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces\"\"\"\n        sign_in_page.fill_in_email_field(email)\n        sign_in_page.fill_in_password_field(password)\n>       sign_in_page.click_sign_in_button()\n\ntests/test_sign_in.py:273: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:112: in click_sign_in_button\n    self.check_sign_in_button_is_clickable().click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe2c9edf8d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x56258bada0f3 \\\\u003Cunknown>\\\\n#22 0x56258bae9e7c \\\\u003Cunknown>\\\\n#23 0x7f4144e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x56258baeb02a <unknown>\nE       #1 0x56258b7d15e0 <unknown>\nE       #2 0x56258b7b9733 <unknown>\nE       #3 0x56258b7b9422 <unknown>\nE       #4 0x56258b7b7493 <unknown>\nE       #5 0x56258b7b7c4f <unknown>\nE       #6 0x56258b7c7667 <unknown>\nE       #7 0x56258b7dd9b4 <unknown>\nE       #8 0x56258b7e2dfb <unknown>\nE       #9 0x56258b7b835e <unknown>\nE       #10 0x56258b7dd80f <unknown>\nE       #11 0x56258b864fe2 <unknown>\nE       #12 0x56258b8458c3 <unknown>\nE       #13 0x56258b8136b3 <unknown>\nE       #14 0x56258b81468e <unknown>\nE       #15 0x56258bab5a2b <unknown>\nE       #16 0x56258bab99b1 <unknown>\nE       #17 0x56258baa2225 <unknown>\nE       #18 0x56258baba532 <unknown>\nE       #19 0x56258ba8738f <unknown>\nE       #20 0x56258bad9f28 <unknown>\nE       #21 0x56258bada0f3 <unknown>\nE       #22 0x56258bae9e7c <unknown>\nE       #23 0x7f4144e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1728524223327,"stop":1728524223393,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1728524223393,"stop":1728524223393,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1728525953110,"stop":1728525954381,"duration":1271},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sign_in_page","time":{"start":1728525954381,"stop":1728525956238,"duration":1857},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1728525954381,"stop":1728525956238,"duration":1857},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x56258baeb02a <unknown>\n#1 0x56258b7d15e0 <unknown>\n#2 0x56258b7b9733 <unknown>\n#3 0x56258b7b9422 <unknown>\n#4 0x56258b7b7493 <unknown>\n#5 0x56258b7b7c4f <unknown>\n#6 0x56258b7c7667 <unknown>\n#7 0x56258b7dd9b4 <unknown>\n#8 0x56258b7e2dfb <unknown>\n#9 0x56258b7b835e <unknown>\n#10 0x56258b7dd80f <unknown>\n#11 0x56258b864fe2 <unknown>\n#12 0x56258b8458c3 <unknown>\n#13 0x56258b8136b3 <unknown>\n#14 0x56258b81468e <unknown>\n#15 0x56258bab5a2b <unknown>\n#16 0x56258bab99b1 <unknown>\n#17 0x56258baa2225 <unknown>\n#18 0x56258baba532 <unknown>\n#19 0x56258ba8738f <unknown>\n#20 0x56258bad9f28 <unknown>\n#21 0x56258bada0f3 <unknown>\n#22 0x56258bae9e7c <unknown>\n#23 0x7f4144e94ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7fe2c872a190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d0204bd349cb08bd1a0bc7ca83bb8ea6\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7fe2c9e849d0>\nemail = 'teston110@mailinator.com', password = 'Test#12p@ssword'\n\n    @allure.title('TC 03.02.02 to 03_02_10 Verify Error on Failed Login with invalid credentials')\n    @pytest.mark.parametrize('email, password', [LOGIN[i] for i in [1, 2, 6, 8, 9]])\n    def test_03_02_02_to_10_error_if_login_with_invalid_credentials(self, driver, sign_in_page, email, password):\n        \"\"\"Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces\"\"\"\n        sign_in_page.fill_in_email_field(email)\n        sign_in_page.fill_in_password_field(password)\n>       sign_in_page.click_sign_in_button()\n\ntests/test_sign_in.py:273: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:112: in click_sign_in_button\n    self.check_sign_in_button_is_clickable().click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe2c9edf8d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 3...\\\\n#21 0x56258bada0f3 \\\\u003Cunknown>\\\\n#22 0x56258bae9e7c \\\\u003Cunknown>\\\\n#23 0x7f4144e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x56258baeb02a <unknown>\nE       #1 0x56258b7d15e0 <unknown>\nE       #2 0x56258b7b9733 <unknown>\nE       #3 0x56258b7b9422 <unknown>\nE       #4 0x56258b7b7493 <unknown>\nE       #5 0x56258b7b7c4f <unknown>\nE       #6 0x56258b7c7667 <unknown>\nE       #7 0x56258b7dd9b4 <unknown>\nE       #8 0x56258b7e2dfb <unknown>\nE       #9 0x56258b7b835e <unknown>\nE       #10 0x56258b7dd80f <unknown>\nE       #11 0x56258b864fe2 <unknown>\nE       #12 0x56258b8458c3 <unknown>\nE       #13 0x56258b8136b3 <unknown>\nE       #14 0x56258b81468e <unknown>\nE       #15 0x56258bab5a2b <unknown>\nE       #16 0x56258bab99b1 <unknown>\nE       #17 0x56258baa2225 <unknown>\nE       #18 0x56258baba532 <unknown>\nE       #19 0x56258ba8738f <unknown>\nE       #20 0x56258bad9f28 <unknown>\nE       #21 0x56258bada0f3 <unknown>\nE       #22 0x56258bae9e7c <unknown>\nE       #23 0x7f4144e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Fill in Email field","time":{"start":1728525956239,"stop":1728525956668,"duration":429},"status":"passed","steps":[{"name":"Check Email field is clickable","time":{"start":1728525956239,"stop":1728525956300,"duration":61},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1728525956239,"stop":1728525956300,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#email')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1728525956301,"stop":1728525956668,"duration":367},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1728525956301,"stop":1728525956349,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"d0204bd349cb08bd1a0bc7ca83bb8ea6\", element=\"f.D9B1F68624D7454F35484CC0FCFBD367.d.12D8B8ADE02E4810EFE331D17A06FCB5.e.3\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"d0204bd349cb08bd1a0bc7ca83bb8ea6\", element=\"f.D9B1F68624D7454F35484CC0FCFBD367.d.12D8B8ADE02E4810EFE331D17A06FCB5.e.3\")>"},{"name":"value","value":"'teston110@mailinator.com'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"email","value":"'teston110@mailinator.com'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in Password field","time":{"start":1728525956668,"stop":1728525956805,"duration":137},"status":"passed","steps":[{"name":"Check Password field is clickable","time":{"start":1728525956668,"stop":1728525956694,"duration":26},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1728525956668,"stop":1728525956694,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#pass')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1728525956694,"stop":1728525956805,"duration":111},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1728525956694,"stop":1728525956707,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"d0204bd349cb08bd1a0bc7ca83bb8ea6\", element=\"f.D9B1F68624D7454F35484CC0FCFBD367.d.12D8B8ADE02E4810EFE331D17A06FCB5.e.4\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"d0204bd349cb08bd1a0bc7ca83bb8ea6\", element=\"f.D9B1F68624D7454F35484CC0FCFBD367.d.12D8B8ADE02E4810EFE331D17A06FCB5.e.4\")>"},{"name":"value","value":"'Test#12p@ssword'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"password","value":"'Test#12p@ssword'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click on Sign In button","time":{"start":1728525956805,"stop":1728526256890,"duration":300085},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x56258baeb02a <unknown>\n#1 0x56258b7d15e0 <unknown>\n#2 0x56258b7b9733 <unknown>\n#3 0x56258b7b9422 <unknown>\n#4 0x56258b7b7493 <unknown>\n#5 0x56258b7b7c4f <unknown>\n#6 0x56258b7c7667 <unknown>\n#7 0x56258b7dd9b4 <unknown>\n#8 0x56258b7e2dfb <unknown>\n#9 0x56258b7b835e <unknown>\n#10 0x56258b7dd80f <unknown>\n#11 0x56258b864fe2 <unknown>\n#12 0x56258b8458c3 <unknown>\n#13 0x56258b8136b3 <unknown>\n#14 0x56258b81468e <unknown>\n#15 0x56258bab5a2b <unknown>\n#16 0x56258bab99b1 <unknown>\n#17 0x56258baa2225 <unknown>\n#18 0x56258baba532 <unknown>\n#19 0x56258ba8738f <unknown>\n#20 0x56258bad9f28 <unknown>\n#21 0x56258bada0f3 <unknown>\n#22 0x56258bae9e7c <unknown>\n#23 0x7f4144e94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 112, in click_sign_in_button\n    self.check_sign_in_button_is_clickable().click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check Sign In button is clickable","time":{"start":1728525956805,"stop":1728525956827,"duration":22},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1728525956805,"stop":1728525956827,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('xpath', '//button[@id=\"send2\"]')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":13,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1728526556940,"stop":1728526557050,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1728526649232,"stop":1728526649232,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Failed Login Functionality"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sign_in"},{"name":"subSuite","value":"TestFailedLogin"},{"name":"host","value":"fv-az842-29"},{"name":"thread","value":"2885-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'teston110@mailinator.com'"},{"name":"password","value":"'Test#12p@ssword'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"a1d50e8b8c969f5e","reportUrl":"https://verafes.github.io/luma_project/458//#testresult/a1d50e8b8c969f5e","status":"passed","time":{"start":1728438999236,"stop":1728439001018,"duration":1782}},{"uid":"fa10f240d672684a","reportUrl":"https://verafes.github.io/luma_project/457//#testresult/fa10f240d672684a","status":"passed","time":{"start":1728352615358,"stop":1728352617103,"duration":1745}},{"uid":"bb71139394a12fc1","reportUrl":"https://verafes.github.io/luma_project/456//#testresult/bb71139394a12fc1","status":"passed","time":{"start":1728266279438,"stop":1728266281205,"duration":1767}},{"uid":"dde185993fc821d5","reportUrl":"https://verafes.github.io/luma_project/455//#testresult/dde185993fc821d5","status":"passed","time":{"start":1728180023308,"stop":1728180024962,"duration":1654}}]},"tags":[]},"source":"b3fa26a7ea6c66ff.json","parameterValues":["'teston110@mailinator.com'","'Test#12p@ssword'"]}