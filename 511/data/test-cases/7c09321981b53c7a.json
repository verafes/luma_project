{"uid":"7c09321981b53c7a","name":"TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation","fullName":"tests.test_sign_in.TestFailedLogin#test_03_02_01_to_03_02_10_login","historyId":"0029e97b34628286aac0dce42d8b2f6a","time":{"start":1733019880673,"stop":1733019883940,"duration":3267},"description":"Check Success and Failed Login, no error validation","descriptionHtml":"<p>Check Success and Failed Login, no error validation</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 848). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 69px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55fdea45831a <unknown>\n#1 0x55fde9f6e6e0 <unknown>\n#2 0x55fde9fc40f6 <unknown>\n#3 0x55fde9fc205d <unknown>\n#4 0x55fde9fbf775 <unknown>\n#5 0x55fde9fbe92f <unknown>\n#6 0x55fde9fb20d5 <unknown>\n#7 0x55fde9fe1462 <unknown>\n#8 0x55fde9fb1a18 <unknown>\n#9 0x55fde9fe162e <unknown>\n#10 0x55fde9fffed7 <unknown>\n#11 0x55fde9fe1203 <unknown>\n#12 0x55fde9fafcc0 <unknown>\n#13 0x55fde9fb0c9e <unknown>\n#14 0x55fdea425d0b <unknown>\n#15 0x55fdea429c92 <unknown>\n#16 0x55fdea412b3c <unknown>\n#17 0x55fdea42a807 <unknown>\n#18 0x55fdea3f80df <unknown>\n#19 0x55fdea447578 <unknown>\n#20 0x55fdea447740 <unknown>\n#21 0x55fdea457196 <unknown>\n#22 0x7f92e9c94ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7f3e1109c910>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"147e53a03c2a11e88d513af3c85d47fd\")>\nemail = '', password = 'Test#12p@ssword'\n\n    @allure.title('TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation')\n    @pytest.mark.parametrize('email, password', LOGIN)\n    def test_03_02_01_to_03_02_10_login(self, driver, email, password):\n        \"\"\"Check Success and Failed Login, no error validation\"\"\"\n        sign_in_page = SignInPage(driver, SIGN_IN_URL)\n        sign_in_page.open()\n        sign_in_page.fill_in_email_field(email)\n>       sign_in_page.fill_in_password_field(password)\n\ntests/test_sign_in.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:88: in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3e12658350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55fdea447740 \\\\u003Cunknown>\\\\n#21 0x55fdea457196 \\\\u003Cunknown>\\\\n#22 0x7f92e9c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 848). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 69px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x55fdea45831a <unknown>\nE       #1 0x55fde9f6e6e0 <unknown>\nE       #2 0x55fde9fc40f6 <unknown>\nE       #3 0x55fde9fc205d <unknown>\nE       #4 0x55fde9fbf775 <unknown>\nE       #5 0x55fde9fbe92f <unknown>\nE       #6 0x55fde9fb20d5 <unknown>\nE       #7 0x55fde9fe1462 <unknown>\nE       #8 0x55fde9fb1a18 <unknown>\nE       #9 0x55fde9fe162e <unknown>\nE       #10 0x55fde9fffed7 <unknown>\nE       #11 0x55fde9fe1203 <unknown>\nE       #12 0x55fde9fafcc0 <unknown>\nE       #13 0x55fde9fb0c9e <unknown>\nE       #14 0x55fdea425d0b <unknown>\nE       #15 0x55fdea429c92 <unknown>\nE       #16 0x55fdea412b3c <unknown>\nE       #17 0x55fdea42a807 <unknown>\nE       #18 0x55fdea3f80df <unknown>\nE       #19 0x55fdea447578 <unknown>\nE       #20 0x55fdea447740 <unknown>\nE       #21 0x55fdea457196 <unknown>\nE       #22 0x7f92e9c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733018380670,"stop":1733018380734,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1733018380734,"stop":1733018380734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1733019879471,"stop":1733019880673,"duration":1202},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check Success and Failed Login, no error validation","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 848). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 69px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55fdea45831a <unknown>\n#1 0x55fde9f6e6e0 <unknown>\n#2 0x55fde9fc40f6 <unknown>\n#3 0x55fde9fc205d <unknown>\n#4 0x55fde9fbf775 <unknown>\n#5 0x55fde9fbe92f <unknown>\n#6 0x55fde9fb20d5 <unknown>\n#7 0x55fde9fe1462 <unknown>\n#8 0x55fde9fb1a18 <unknown>\n#9 0x55fde9fe162e <unknown>\n#10 0x55fde9fffed7 <unknown>\n#11 0x55fde9fe1203 <unknown>\n#12 0x55fde9fafcc0 <unknown>\n#13 0x55fde9fb0c9e <unknown>\n#14 0x55fdea425d0b <unknown>\n#15 0x55fdea429c92 <unknown>\n#16 0x55fdea412b3c <unknown>\n#17 0x55fdea42a807 <unknown>\n#18 0x55fdea3f80df <unknown>\n#19 0x55fdea447578 <unknown>\n#20 0x55fdea447740 <unknown>\n#21 0x55fdea457196 <unknown>\n#22 0x7f92e9c94ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7f3e1109c910>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"147e53a03c2a11e88d513af3c85d47fd\")>\nemail = '', password = 'Test#12p@ssword'\n\n    @allure.title('TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation')\n    @pytest.mark.parametrize('email, password', LOGIN)\n    def test_03_02_01_to_03_02_10_login(self, driver, email, password):\n        \"\"\"Check Success and Failed Login, no error validation\"\"\"\n        sign_in_page = SignInPage(driver, SIGN_IN_URL)\n        sign_in_page.open()\n        sign_in_page.fill_in_email_field(email)\n>       sign_in_page.fill_in_password_field(password)\n\ntests/test_sign_in.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:88: in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3e12658350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55fdea447740 \\\\u003Cunknown>\\\\n#21 0x55fdea457196 \\\\u003Cunknown>\\\\n#22 0x7f92e9c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 848). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 69px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x55fdea45831a <unknown>\nE       #1 0x55fde9f6e6e0 <unknown>\nE       #2 0x55fde9fc40f6 <unknown>\nE       #3 0x55fde9fc205d <unknown>\nE       #4 0x55fde9fbf775 <unknown>\nE       #5 0x55fde9fbe92f <unknown>\nE       #6 0x55fde9fb20d5 <unknown>\nE       #7 0x55fde9fe1462 <unknown>\nE       #8 0x55fde9fb1a18 <unknown>\nE       #9 0x55fde9fe162e <unknown>\nE       #10 0x55fde9fffed7 <unknown>\nE       #11 0x55fde9fe1203 <unknown>\nE       #12 0x55fde9fafcc0 <unknown>\nE       #13 0x55fde9fb0c9e <unknown>\nE       #14 0x55fdea425d0b <unknown>\nE       #15 0x55fdea429c92 <unknown>\nE       #16 0x55fdea412b3c <unknown>\nE       #17 0x55fdea42a807 <unknown>\nE       #18 0x55fdea3f80df <unknown>\nE       #19 0x55fdea447578 <unknown>\nE       #20 0x55fdea447740 <unknown>\nE       #21 0x55fdea457196 <unknown>\nE       #22 0x7f92e9c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open a browser","time":{"start":1733019880673,"stop":1733019882483,"duration":1810},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Fill in Email field","time":{"start":1733019882483,"stop":1733019882851,"duration":368},"status":"passed","steps":[{"name":"Check Email field is clickable","time":{"start":1733019882483,"stop":1733019882527,"duration":44},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1733019882484,"stop":1733019882527,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#email')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1733019882527,"stop":1733019882851,"duration":324},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1733019882527,"stop":1733019882550,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"147e53a03c2a11e88d513af3c85d47fd\", element=\"f.AA0E730F908D320203345022F4AEF8BC.d.165B332FFB1E194E77BE552C0007DFE4.e.3\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"147e53a03c2a11e88d513af3c85d47fd\", element=\"f.AA0E730F908D320203345022F4AEF8BC.d.165B332FFB1E194E77BE552C0007DFE4.e.3\")>"},{"name":"value","value":"''"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"email","value":"''"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in Password field","time":{"start":1733019882851,"stop":1733019883939,"duration":1088},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 848). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 69px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55fdea45831a <unknown>\n#1 0x55fde9f6e6e0 <unknown>\n#2 0x55fde9fc40f6 <unknown>\n#3 0x55fde9fc205d <unknown>\n#4 0x55fde9fbf775 <unknown>\n#5 0x55fde9fbe92f <unknown>\n#6 0x55fde9fb20d5 <unknown>\n#7 0x55fde9fe1462 <unknown>\n#8 0x55fde9fb1a18 <unknown>\n#9 0x55fde9fe162e <unknown>\n#10 0x55fde9fffed7 <unknown>\n#11 0x55fde9fe1203 <unknown>\n#12 0x55fde9fafcc0 <unknown>\n#13 0x55fde9fb0c9e <unknown>\n#14 0x55fdea425d0b <unknown>\n#15 0x55fdea429c92 <unknown>\n#16 0x55fdea412b3c <unknown>\n#17 0x55fdea42a807 <unknown>\n#18 0x55fdea3f80df <unknown>\n#19 0x55fdea447578 <unknown>\n#20 0x55fdea447740 <unknown>\n#21 0x55fdea457196 <unknown>\n#22 0x7f92e9c94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 88, in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check Password field is clickable","time":{"start":1733019882851,"stop":1733019882871,"duration":20},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1733019882851,"stop":1733019882871,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#pass')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1733019882871,"stop":1733019883939,"duration":1068},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 848). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 69px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55fdea45831a <unknown>\n#1 0x55fde9f6e6e0 <unknown>\n#2 0x55fde9fc40f6 <unknown>\n#3 0x55fde9fc205d <unknown>\n#4 0x55fde9fbf775 <unknown>\n#5 0x55fde9fbe92f <unknown>\n#6 0x55fde9fb20d5 <unknown>\n#7 0x55fde9fe1462 <unknown>\n#8 0x55fde9fb1a18 <unknown>\n#9 0x55fde9fe162e <unknown>\n#10 0x55fde9fffed7 <unknown>\n#11 0x55fde9fe1203 <unknown>\n#12 0x55fde9fafcc0 <unknown>\n#13 0x55fde9fb0c9e <unknown>\n#14 0x55fdea425d0b <unknown>\n#15 0x55fdea429c92 <unknown>\n#16 0x55fdea412b3c <unknown>\n#17 0x55fdea42a807 <unknown>\n#18 0x55fdea3f80df <unknown>\n#19 0x55fdea447578 <unknown>\n#20 0x55fdea447740 <unknown>\n#21 0x55fdea457196 <unknown>\n#22 0x7f92e9c94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1733019882871,"stop":1733019882882,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"147e53a03c2a11e88d513af3c85d47fd\", element=\"f.AA0E730F908D320203345022F4AEF8BC.d.165B332FFB1E194E77BE552C0007DFE4.e.4\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"147e53a03c2a11e88d513af3c85d47fd\", element=\"f.AA0E730F908D320203345022F4AEF8BC.d.165B332FFB1E194E77BE552C0007DFE4.e.4\")>"},{"name":"value","value":"'Test#12p@ssword'"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"password","value":"'Test#12p@ssword'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2bee8a4a5b9d9e6b","name":"Screenshot","source":"2bee8a4a5b9d9e6b.png","type":"image/png","size":201966},{"uid":"ebb1a620b3081988","name":"HTML source","source":"ebb1a620b3081988.html","type":"text/html","size":168631}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1733019884091,"stop":1733019884164,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1733020022488,"stop":1733020022488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Failed Login Functionality"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sign_in"},{"name":"subSuite","value":"TestFailedLogin"},{"name":"host","value":"fv-az1146-773"},{"name":"thread","value":"2848-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"''"},{"name":"password","value":"'Test#12p@ssword'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7c09321981b53c7a.json","parameterValues":["''","'Test#12p@ssword'"]}