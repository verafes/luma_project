{"uid":"203f89f0f30ccf5a","name":"tc 07.02.22 Verify subtotal in Summury Card: subtotal = price * qty and displayed correctly.","fullName":"tests.test_shopping_cart.TestShoppingCartFull#test_tc_07_02_22_verify_subtotal_displayed_correctly_in_summary_card","historyId":"a2797fdcb251487a396e7395ba0413f5","time":{"start":1733019668636,"stop":1733019670058,"duration":1422},"description":"Verify subtotal in summary: subtotal = price * qty and displayed correctly.","descriptionHtml":"<p>Verify subtotal in summary: subtotal = price * qty and displayed correctly.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" name=\"update_cart_action\" data-cart-item-update=\"\" value=\"update_qty\" title=\"Update Shopping Cart\" class=\"action update\">...</button> is not clickable at point (1114, 844). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"COWXwK3BhYoDFfAo-QAd5nkPeQ\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55bf0f61e31a <unknown>\n#1 0x55bf0f1346e0 <unknown>\n#2 0x55bf0f18a0f6 <unknown>\n#3 0x55bf0f18805d <unknown>\n#4 0x55bf0f185775 <unknown>\n#5 0x55bf0f18492f <unknown>\n#6 0x55bf0f1780d5 <unknown>\n#7 0x55bf0f1a7462 <unknown>\n#8 0x55bf0f177a18 <unknown>\n#9 0x55bf0f1a762e <unknown>\n#10 0x55bf0f1c5ed7 <unknown>\n#11 0x55bf0f1a7203 <unknown>\n#12 0x55bf0f175cc0 <unknown>\n#13 0x55bf0f176c9e <unknown>\n#14 0x55bf0f5ebd0b <unknown>\n#15 0x55bf0f5efc92 <unknown>\n#16 0x55bf0f5d8b3c <unknown>\n#17 0x55bf0f5f0807 <unknown>\n#18 0x55bf0f5be0df <unknown>\n#19 0x55bf0f60d578 <unknown>\n#20 0x55bf0f60d740 <unknown>\n#21 0x55bf0f61d196 <unknown>\n#22 0x7fd33a294ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCartFull object at 0x7f3e11fc1d10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6069306cc1e91913bf8e42fa65f7135b\")>\nfull_cart_page = None\n\n    @allure.title(\"tc 07.02.22 Verify subtotal in Summury Card: subtotal = price * qty and displayed correctly.\")\n    def test_tc_07_02_22_verify_subtotal_displayed_correctly_in_summary_card(self, driver, full_cart_page):\n        \"\"\"Verify subtotal in summary: subtotal = price * qty and displayed correctly.\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n>       subtotal = page.check_subtotal_of_item_price_multiply_qty()\n\ntests/test_shopping_cart.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:103: in check_subtotal_of_item_price_multiply_qty\n    update_button.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3e12935090>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55bf0f60d740 \\\\u003Cunknown>\\\\n#21 0x55bf0f61d196 \\\\u003Cunknown>\\\\n#22 0x7fd33a294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" name=\"update_cart_action\" data-cart-item-update=\"\" value=\"update_qty\" title=\"Update Shopping Cart\" class=\"action update\">...</button> is not clickable at point (1114, 844). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"COWXwK3BhYoDFfAo-QAd5nkPeQ\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x55bf0f61e31a <unknown>\nE       #1 0x55bf0f1346e0 <unknown>\nE       #2 0x55bf0f18a0f6 <unknown>\nE       #3 0x55bf0f18805d <unknown>\nE       #4 0x55bf0f185775 <unknown>\nE       #5 0x55bf0f18492f <unknown>\nE       #6 0x55bf0f1780d5 <unknown>\nE       #7 0x55bf0f1a7462 <unknown>\nE       #8 0x55bf0f177a18 <unknown>\nE       #9 0x55bf0f1a762e <unknown>\nE       #10 0x55bf0f1c5ed7 <unknown>\nE       #11 0x55bf0f1a7203 <unknown>\nE       #12 0x55bf0f175cc0 <unknown>\nE       #13 0x55bf0f176c9e <unknown>\nE       #14 0x55bf0f5ebd0b <unknown>\nE       #15 0x55bf0f5efc92 <unknown>\nE       #16 0x55bf0f5d8b3c <unknown>\nE       #17 0x55bf0f5f0807 <unknown>\nE       #18 0x55bf0f5be0df <unknown>\nE       #19 0x55bf0f60d578 <unknown>\nE       #20 0x55bf0f60d740 <unknown>\nE       #21 0x55bf0f61d196 <unknown>\nE       #22 0x7fd33a294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733018380670,"stop":1733018380734,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1733018380734,"stop":1733018380734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1733019661713,"stop":1733019662982,"duration":1269},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"full_cart_page","time":{"start":1733019662982,"stop":1733019668636,"duration":5654},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify subtotal in summary: subtotal = price * qty and displayed correctly.","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" name=\"update_cart_action\" data-cart-item-update=\"\" value=\"update_qty\" title=\"Update Shopping Cart\" class=\"action update\">...</button> is not clickable at point (1114, 844). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"COWXwK3BhYoDFfAo-QAd5nkPeQ\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55bf0f61e31a <unknown>\n#1 0x55bf0f1346e0 <unknown>\n#2 0x55bf0f18a0f6 <unknown>\n#3 0x55bf0f18805d <unknown>\n#4 0x55bf0f185775 <unknown>\n#5 0x55bf0f18492f <unknown>\n#6 0x55bf0f1780d5 <unknown>\n#7 0x55bf0f1a7462 <unknown>\n#8 0x55bf0f177a18 <unknown>\n#9 0x55bf0f1a762e <unknown>\n#10 0x55bf0f1c5ed7 <unknown>\n#11 0x55bf0f1a7203 <unknown>\n#12 0x55bf0f175cc0 <unknown>\n#13 0x55bf0f176c9e <unknown>\n#14 0x55bf0f5ebd0b <unknown>\n#15 0x55bf0f5efc92 <unknown>\n#16 0x55bf0f5d8b3c <unknown>\n#17 0x55bf0f5f0807 <unknown>\n#18 0x55bf0f5be0df <unknown>\n#19 0x55bf0f60d578 <unknown>\n#20 0x55bf0f60d740 <unknown>\n#21 0x55bf0f61d196 <unknown>\n#22 0x7fd33a294ac3 <unknown>","statusTrace":"self = <test_shopping_cart.TestShoppingCartFull object at 0x7f3e11fc1d10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6069306cc1e91913bf8e42fa65f7135b\")>\nfull_cart_page = None\n\n    @allure.title(\"tc 07.02.22 Verify subtotal in Summury Card: subtotal = price * qty and displayed correctly.\")\n    def test_tc_07_02_22_verify_subtotal_displayed_correctly_in_summary_card(self, driver, full_cart_page):\n        \"\"\"Verify subtotal in summary: subtotal = price * qty and displayed correctly.\"\"\"\n        page = ShoppingCartPage(driver, SHOPPING_CART_PAGE)\n>       subtotal = page.check_subtotal_of_item_price_multiply_qty()\n\ntests/test_shopping_cart.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/shopping_cart_page.py:103: in check_subtotal_of_item_price_multiply_qty\n    update_button.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3e12935090>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55bf0f60d740 \\\\u003Cunknown>\\\\n#21 0x55bf0f61d196 \\\\u003Cunknown>\\\\n#22 0x7fd33a294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" name=\"update_cart_action\" data-cart-item-update=\"\" value=\"update_qty\" title=\"Update Shopping Cart\" class=\"action update\">...</button> is not clickable at point (1114, 844). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"COWXwK3BhYoDFfAo-QAd5nkPeQ\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x55bf0f61e31a <unknown>\nE       #1 0x55bf0f1346e0 <unknown>\nE       #2 0x55bf0f18a0f6 <unknown>\nE       #3 0x55bf0f18805d <unknown>\nE       #4 0x55bf0f185775 <unknown>\nE       #5 0x55bf0f18492f <unknown>\nE       #6 0x55bf0f1780d5 <unknown>\nE       #7 0x55bf0f1a7462 <unknown>\nE       #8 0x55bf0f177a18 <unknown>\nE       #9 0x55bf0f1a762e <unknown>\nE       #10 0x55bf0f1c5ed7 <unknown>\nE       #11 0x55bf0f1a7203 <unknown>\nE       #12 0x55bf0f175cc0 <unknown>\nE       #13 0x55bf0f176c9e <unknown>\nE       #14 0x55bf0f5ebd0b <unknown>\nE       #15 0x55bf0f5efc92 <unknown>\nE       #16 0x55bf0f5d8b3c <unknown>\nE       #17 0x55bf0f5f0807 <unknown>\nE       #18 0x55bf0f5be0df <unknown>\nE       #19 0x55bf0f60d578 <unknown>\nE       #20 0x55bf0f60d740 <unknown>\nE       #21 0x55bf0f61d196 <unknown>\nE       #22 0x7fd33a294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Check subtotal for items: price * qty","time":{"start":1733019668636,"stop":1733019670058,"duration":1422},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" name=\"update_cart_action\" data-cart-item-update=\"\" value=\"update_qty\" title=\"Update Shopping Cart\" class=\"action update\">...</button> is not clickable at point (1114, 844). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"COWXwK3BhYoDFfAo-QAd5nkPeQ\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55bf0f61e31a <unknown>\n#1 0x55bf0f1346e0 <unknown>\n#2 0x55bf0f18a0f6 <unknown>\n#3 0x55bf0f18805d <unknown>\n#4 0x55bf0f185775 <unknown>\n#5 0x55bf0f18492f <unknown>\n#6 0x55bf0f1780d5 <unknown>\n#7 0x55bf0f1a7462 <unknown>\n#8 0x55bf0f177a18 <unknown>\n#9 0x55bf0f1a762e <unknown>\n#10 0x55bf0f1c5ed7 <unknown>\n#11 0x55bf0f1a7203 <unknown>\n#12 0x55bf0f175cc0 <unknown>\n#13 0x55bf0f176c9e <unknown>\n#14 0x55bf0f5ebd0b <unknown>\n#15 0x55bf0f5efc92 <unknown>\n#16 0x55bf0f5d8b3c <unknown>\n#17 0x55bf0f5f0807 <unknown>\n#18 0x55bf0f5be0df <unknown>\n#19 0x55bf0f60d578 <unknown>\n#20 0x55bf0f60d740 <unknown>\n#21 0x55bf0f61d196 <unknown>\n#22 0x7fd33a294ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/shopping_cart_page.py\", line 103, in check_subtotal_of_item_price_multiply_qty\n    update_button.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1733019668636,"stop":1733019668800,"duration":164},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'input.input-text.qty')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Get a random number between 1 and 10","time":{"start":1733019668907,"stop":1733019668907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Find clickable elements","time":{"start":1733019668949,"stop":1733019668973,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', 'button.action.update')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9c8982121d408578","name":"Screenshot","source":"9c8982121d408578.png","type":"image/png","size":261880},{"uid":"8b3a183e9ec874fe","name":"HTML source","source":"8b3a183e9ec874fe.html","type":"text/html","size":380574}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1733019670217,"stop":1733019670301,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1733020022488,"stop":1733020022488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Shopping Cart is full"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_shopping_cart"},{"name":"subSuite","value":"TestShoppingCartFull"},{"name":"host","value":"fv-az1146-773"},{"name":"thread","value":"2848-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_shopping_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"203f89f0f30ccf5a.json","parameterValues":[]}