{"uid":"d3d15beb1cc70cb9","name":"TC 10.02.03, 10.02.05, 10.02.07, 10.02.09, 10.02.11 - Verify 5 links in Men's Deals open the correct pages","fullName":"tests.test_sale.TestSideMenuBarMen#test_tc_10_01_03__05_07_09_11_13","historyId":"208117c981e863ac8478e5ea37a02383","time":{"start":1730944629868,"stop":1730944631063,"duration":1195},"description":"Check that five links in Men's Deals section lead to the correct pages after click","descriptionHtml":"<p>Check that five links in Men's Deals section lead to the correct pages after click</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html\">...</a> is not clickable at point (343, 851). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.91)\nStacktrace:\n#0 0x55f15cfca13a <unknown>\n#1 0x55f15cae5460 <unknown>\n#2 0x55f15cb38b26 <unknown>\n#3 0x55f15cb36aad <unknown>\n#4 0x55f15cb34557 <unknown>\n#5 0x55f15cb33971 <unknown>\n#6 0x55f15cb26f78 <unknown>\n#7 0x55f15cb56012 <unknown>\n#8 0x55f15cb26958 <unknown>\n#9 0x55f15cb561de <unknown>\n#10 0x55f15cb74af6 <unknown>\n#11 0x55f15cb55db3 <unknown>\n#12 0x55f15cb24c10 <unknown>\n#13 0x55f15cb25bee <unknown>\n#14 0x55f15cf963cb <unknown>\n#15 0x55f15cf9a368 <unknown>\n#16 0x55f15cf83eec <unknown>\n#17 0x55f15cf9aee7 <unknown>\n#18 0x55f15cf6913f <unknown>\n#19 0x55f15cfb8858 <unknown>\n#20 0x55f15cfb8a20 <unknown>\n#21 0x55f15cfc8fb6 <unknown>\n#22 0x7f2a18694ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7f47d13b7b50>\nsale_page = <pages.sale_page.SalePage object at 0x7f47d0f5dd10>\nelement_locator = ('css selector', '.categories-menu > ul:nth-child(4) > li:nth-child(5) > a')\nexpected_title = 'Shorts - Bottoms - Men'\nexpected_url = 'https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html'\n\n    @allure.title(\"TC 10.02.03, 10.02.05, 10.02.07, 10.02.09, 10.02.11 - \"\n                  \"Verify 5 links in Men's Deals open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            SideBarLocators.MEN_DEALS_ELEMENTS.values(),\n            expected_titles_m.values(),\n            expected_urls_m.values(),\n        )\n    )\n    def test_tc_10_01_03__05_07_09_11_13(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that five links in Men's Deals section lead to the correct pages after click\"\"\"\n        element_in_men_deals = sale_page.element_is_clickable(element_locator)\n>       element_in_men_deals.click()\n\ntests/test_sale.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f47d10ffdd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f15cfb8a20 \\\\u003Cunknown>\\\\n#21 0x55f15cfc8fb6 \\\\u003Cunknown>\\\\n#22 0x7f2a18694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html\">...</a> is not clickable at point (343, 851). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.91)\nE       Stacktrace:\nE       #0 0x55f15cfca13a <unknown>\nE       #1 0x55f15cae5460 <unknown>\nE       #2 0x55f15cb38b26 <unknown>\nE       #3 0x55f15cb36aad <unknown>\nE       #4 0x55f15cb34557 <unknown>\nE       #5 0x55f15cb33971 <unknown>\nE       #6 0x55f15cb26f78 <unknown>\nE       #7 0x55f15cb56012 <unknown>\nE       #8 0x55f15cb26958 <unknown>\nE       #9 0x55f15cb561de <unknown>\nE       #10 0x55f15cb74af6 <unknown>\nE       #11 0x55f15cb55db3 <unknown>\nE       #12 0x55f15cb24c10 <unknown>\nE       #13 0x55f15cb25bee <unknown>\nE       #14 0x55f15cf963cb <unknown>\nE       #15 0x55f15cf9a368 <unknown>\nE       #16 0x55f15cf83eec <unknown>\nE       #17 0x55f15cf9aee7 <unknown>\nE       #18 0x55f15cf6913f <unknown>\nE       #19 0x55f15cfb8858 <unknown>\nE       #20 0x55f15cfb8a20 <unknown>\nE       #21 0x55f15cfc8fb6 <unknown>\nE       #22 0x7f2a18694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1730943375835,"stop":1730943375901,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1730943375901,"stop":1730943375901,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1730944626414,"stop":1730944627687,"duration":1273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sale_page","time":{"start":1730944627688,"stop":1730944629867,"duration":2179},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1730944627688,"stop":1730944629867,"duration":2179},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Check that five links in Men's Deals section lead to the correct pages after click","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html\">...</a> is not clickable at point (343, 851). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.91)\nStacktrace:\n#0 0x55f15cfca13a <unknown>\n#1 0x55f15cae5460 <unknown>\n#2 0x55f15cb38b26 <unknown>\n#3 0x55f15cb36aad <unknown>\n#4 0x55f15cb34557 <unknown>\n#5 0x55f15cb33971 <unknown>\n#6 0x55f15cb26f78 <unknown>\n#7 0x55f15cb56012 <unknown>\n#8 0x55f15cb26958 <unknown>\n#9 0x55f15cb561de <unknown>\n#10 0x55f15cb74af6 <unknown>\n#11 0x55f15cb55db3 <unknown>\n#12 0x55f15cb24c10 <unknown>\n#13 0x55f15cb25bee <unknown>\n#14 0x55f15cf963cb <unknown>\n#15 0x55f15cf9a368 <unknown>\n#16 0x55f15cf83eec <unknown>\n#17 0x55f15cf9aee7 <unknown>\n#18 0x55f15cf6913f <unknown>\n#19 0x55f15cfb8858 <unknown>\n#20 0x55f15cfb8a20 <unknown>\n#21 0x55f15cfc8fb6 <unknown>\n#22 0x7f2a18694ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7f47d13b7b50>\nsale_page = <pages.sale_page.SalePage object at 0x7f47d0f5dd10>\nelement_locator = ('css selector', '.categories-menu > ul:nth-child(4) > li:nth-child(5) > a')\nexpected_title = 'Shorts - Bottoms - Men'\nexpected_url = 'https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html'\n\n    @allure.title(\"TC 10.02.03, 10.02.05, 10.02.07, 10.02.09, 10.02.11 - \"\n                  \"Verify 5 links in Men's Deals open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            SideBarLocators.MEN_DEALS_ELEMENTS.values(),\n            expected_titles_m.values(),\n            expected_urls_m.values(),\n        )\n    )\n    def test_tc_10_01_03__05_07_09_11_13(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that five links in Men's Deals section lead to the correct pages after click\"\"\"\n        element_in_men_deals = sale_page.element_is_clickable(element_locator)\n>       element_in_men_deals.click()\n\ntests/test_sale.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f47d10ffdd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f15cfb8a20 \\\\u003Cunknown>\\\\n#21 0x55f15cfc8fb6 \\\\u003Cunknown>\\\\n#22 0x7f2a18694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html\">...</a> is not clickable at point (343, 851). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.91)\nE       Stacktrace:\nE       #0 0x55f15cfca13a <unknown>\nE       #1 0x55f15cae5460 <unknown>\nE       #2 0x55f15cb38b26 <unknown>\nE       #3 0x55f15cb36aad <unknown>\nE       #4 0x55f15cb34557 <unknown>\nE       #5 0x55f15cb33971 <unknown>\nE       #6 0x55f15cb26f78 <unknown>\nE       #7 0x55f15cb56012 <unknown>\nE       #8 0x55f15cb26958 <unknown>\nE       #9 0x55f15cb561de <unknown>\nE       #10 0x55f15cb74af6 <unknown>\nE       #11 0x55f15cb55db3 <unknown>\nE       #12 0x55f15cb24c10 <unknown>\nE       #13 0x55f15cb25bee <unknown>\nE       #14 0x55f15cf963cb <unknown>\nE       #15 0x55f15cf9a368 <unknown>\nE       #16 0x55f15cf83eec <unknown>\nE       #17 0x55f15cf9aee7 <unknown>\nE       #18 0x55f15cf6913f <unknown>\nE       #19 0x55f15cfb8858 <unknown>\nE       #20 0x55f15cfb8a20 <unknown>\nE       #21 0x55f15cfc8fb6 <unknown>\nE       #22 0x7f2a18694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Find clickable elements","time":{"start":1730944629868,"stop":1730944629910,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > ul:nth-child(4) > li:nth-child(5) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"15452c2040e6c1f6","name":"Screenshot","source":"15452c2040e6c1f6.png","type":"image/png","size":266566},{"uid":"58649c1a1f2379e4","name":"HTML source","source":"58649c1a1f2379e4.html","type":"text/html","size":156733}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1730944631241,"stop":1730944631320,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1730946108342,"stop":1730946108342,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Testing Side Menu Bar - Men's Deals Section"},{"name":"epic","value":"Sale Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az2022-763"},{"name":"thread","value":"2800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"element_locator","value":"('css selector', '.categories-menu > ul:nth-child(4) > li:nth-child(5) > a')"},{"name":"expected_title","value":"'Shorts - Bottoms - Men'"},{"name":"expected_url","value":"'https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":3,"unknown":0,"total":5},"items":[{"uid":"daeb381bf429225b","reportUrl":"https://verafes.github.io/luma_project/486//#testresult/daeb381bf429225b","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html\">...</a> is not clickable at point (343, 851). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x555a79abb0aa <unknown>\n#1 0x555a795d21a0 <unknown>\n#2 0x555a79625896 <unknown>\n#3 0x555a7962382d <unknown>\n#4 0x555a796212d7 <unknown>\n#5 0x555a796206f1 <unknown>\n#6 0x555a79613cf8 <unknown>\n#7 0x555a79642d82 <unknown>\n#8 0x555a796136d8 <unknown>\n#9 0x555a79642f4e <unknown>\n#10 0x555a79661866 <unknown>\n#11 0x555a79642b23 <unknown>\n#12 0x555a79611990 <unknown>\n#13 0x555a7961296e <unknown>\n#14 0x555a79a8716b <unknown>\n#15 0x555a79a8af68 <unknown>\n#16 0x555a79a7464c <unknown>\n#17 0x555a79a8bae7 <unknown>\n#18 0x555a79a594af <unknown>\n#19 0x555a79aa94f8 <unknown>\n#20 0x555a79aa96c0 <unknown>\n#21 0x555a79ab9f26 <unknown>\n#22 0x7effd8294ac3 <unknown>","time":{"start":1730858490104,"stop":1730858491558,"duration":1454}},{"uid":"ccdc4db4792204a2","reportUrl":"https://verafes.github.io/luma_project/485//#testresult/ccdc4db4792204a2","status":"passed","time":{"start":1730771700540,"stop":1730771702355,"duration":1815}},{"uid":"a5f0b30238de1c5c","reportUrl":"https://verafes.github.io/luma_project/484//#testresult/a5f0b30238de1c5c","status":"passed","time":{"start":1730685624809,"stop":1730685627235,"duration":2426}},{"uid":"c7aef5eb106201ee","reportUrl":"https://verafes.github.io/luma_project/483//#testresult/c7aef5eb106201ee","status":"passed","time":{"start":1730599268876,"stop":1730599270027,"duration":1151}}]},"tags":[]},"source":"d3d15beb1cc70cb9.json","parameterValues":["('css selector', '.categories-menu > ul:nth-child(4) > li:nth-child(5) > a')","'Shorts - Bottoms - Men'","'https://magento.softwaretestingboard.com/men/bottoms-men/shorts-men.html'"]}