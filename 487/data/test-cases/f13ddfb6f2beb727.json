{"uid":"f13ddfb6f2beb727","name":"TC 10.01.03, 10.01.05, 10.01.07, 10.01.09, 10.01.11, 10.01.13 - Verify 6 links in Women's Deals open the correct pages","fullName":"tests.test_sale.TestSideMenuBarWomen#test_tc_10_01_03__05_07_09_11_13","historyId":"3fe2ba700ff5afba63aaea1e01c0a092","time":{"start":1730944563206,"stop":1730944564378,"duration":1172},"description":"Check that six links in Women's Deals section lead to the correct pages after click","descriptionHtml":"<p>Check that six links in Women's Deals section lead to the correct pages after click</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html\">...</a> is not clickable at point (344, 755). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.91)\nStacktrace:\n#0 0x5591cc8b413a <unknown>\n#1 0x5591cc3cf460 <unknown>\n#2 0x5591cc422b26 <unknown>\n#3 0x5591cc420aad <unknown>\n#4 0x5591cc41e557 <unknown>\n#5 0x5591cc41d971 <unknown>\n#6 0x5591cc410f78 <unknown>\n#7 0x5591cc440012 <unknown>\n#8 0x5591cc410958 <unknown>\n#9 0x5591cc4401de <unknown>\n#10 0x5591cc45eaf6 <unknown>\n#11 0x5591cc43fdb3 <unknown>\n#12 0x5591cc40ec10 <unknown>\n#13 0x5591cc40fbee <unknown>\n#14 0x5591cc8803cb <unknown>\n#15 0x5591cc884368 <unknown>\n#16 0x5591cc86deec <unknown>\n#17 0x5591cc884ee7 <unknown>\n#18 0x5591cc85313f <unknown>\n#19 0x5591cc8a2858 <unknown>\n#20 0x5591cc8a2a20 <unknown>\n#21 0x5591cc8b2fb6 <unknown>\n#22 0x7fdb92a94ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarWomen object at 0x7f47d112c690>\nsale_page = <pages.sale_page.SalePage object at 0x7f47d0f5aa10>\nelement_locator = ('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(2) > a')\nexpected_title = 'Jackets - Tops - Women'\nexpected_url = 'https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html'\n\n    @allure.title(\"TC 10.01.03, 10.01.05, 10.01.07, 10.01.09, 10.01.11, 10.01.13 - \"\n                  \"Verify 6 links in Women's Deals open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            SideBarLocators.WOMEN_DEALS_ELEMENTS.values(),\n            expected_titles_w.values(),\n            expected_urls_w.values(),\n        )\n    )\n    def test_tc_10_01_03__05_07_09_11_13(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that six links in Women's Deals section lead to the correct pages after click\"\"\"\n        element_in_women_deals = sale_page.element_is_clickable(element_locator)\n>       element_in_women_deals.click()\n\ntests/test_sale.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f47d0f49850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5591cc8a2a20 \\\\u003Cunknown>\\\\n#21 0x5591cc8b2fb6 \\\\u003Cunknown>\\\\n#22 0x7fdb92a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html\">...</a> is not clickable at point (344, 755). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.91)\nE       Stacktrace:\nE       #0 0x5591cc8b413a <unknown>\nE       #1 0x5591cc3cf460 <unknown>\nE       #2 0x5591cc422b26 <unknown>\nE       #3 0x5591cc420aad <unknown>\nE       #4 0x5591cc41e557 <unknown>\nE       #5 0x5591cc41d971 <unknown>\nE       #6 0x5591cc410f78 <unknown>\nE       #7 0x5591cc440012 <unknown>\nE       #8 0x5591cc410958 <unknown>\nE       #9 0x5591cc4401de <unknown>\nE       #10 0x5591cc45eaf6 <unknown>\nE       #11 0x5591cc43fdb3 <unknown>\nE       #12 0x5591cc40ec10 <unknown>\nE       #13 0x5591cc40fbee <unknown>\nE       #14 0x5591cc8803cb <unknown>\nE       #15 0x5591cc884368 <unknown>\nE       #16 0x5591cc86deec <unknown>\nE       #17 0x5591cc884ee7 <unknown>\nE       #18 0x5591cc85313f <unknown>\nE       #19 0x5591cc8a2858 <unknown>\nE       #20 0x5591cc8a2a20 <unknown>\nE       #21 0x5591cc8b2fb6 <unknown>\nE       #22 0x7fdb92a94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1730943375835,"stop":1730943375901,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1730943375901,"stop":1730943375901,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1730944559917,"stop":1730944561204,"duration":1287},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sale_page","time":{"start":1730944561204,"stop":1730944563205,"duration":2001},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1730944561204,"stop":1730944563205,"duration":2001},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Check that six links in Women's Deals section lead to the correct pages after click","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html\">...</a> is not clickable at point (344, 755). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.91)\nStacktrace:\n#0 0x5591cc8b413a <unknown>\n#1 0x5591cc3cf460 <unknown>\n#2 0x5591cc422b26 <unknown>\n#3 0x5591cc420aad <unknown>\n#4 0x5591cc41e557 <unknown>\n#5 0x5591cc41d971 <unknown>\n#6 0x5591cc410f78 <unknown>\n#7 0x5591cc440012 <unknown>\n#8 0x5591cc410958 <unknown>\n#9 0x5591cc4401de <unknown>\n#10 0x5591cc45eaf6 <unknown>\n#11 0x5591cc43fdb3 <unknown>\n#12 0x5591cc40ec10 <unknown>\n#13 0x5591cc40fbee <unknown>\n#14 0x5591cc8803cb <unknown>\n#15 0x5591cc884368 <unknown>\n#16 0x5591cc86deec <unknown>\n#17 0x5591cc884ee7 <unknown>\n#18 0x5591cc85313f <unknown>\n#19 0x5591cc8a2858 <unknown>\n#20 0x5591cc8a2a20 <unknown>\n#21 0x5591cc8b2fb6 <unknown>\n#22 0x7fdb92a94ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarWomen object at 0x7f47d112c690>\nsale_page = <pages.sale_page.SalePage object at 0x7f47d0f5aa10>\nelement_locator = ('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(2) > a')\nexpected_title = 'Jackets - Tops - Women'\nexpected_url = 'https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html'\n\n    @allure.title(\"TC 10.01.03, 10.01.05, 10.01.07, 10.01.09, 10.01.11, 10.01.13 - \"\n                  \"Verify 6 links in Women's Deals open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            SideBarLocators.WOMEN_DEALS_ELEMENTS.values(),\n            expected_titles_w.values(),\n            expected_urls_w.values(),\n        )\n    )\n    def test_tc_10_01_03__05_07_09_11_13(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that six links in Women's Deals section lead to the correct pages after click\"\"\"\n        element_in_women_deals = sale_page.element_is_clickable(element_locator)\n>       element_in_women_deals.click()\n\ntests/test_sale.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f47d0f49850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5591cc8a2a20 \\\\u003Cunknown>\\\\n#21 0x5591cc8b2fb6 \\\\u003Cunknown>\\\\n#22 0x7fdb92a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html\">...</a> is not clickable at point (344, 755). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.91)\nE       Stacktrace:\nE       #0 0x5591cc8b413a <unknown>\nE       #1 0x5591cc3cf460 <unknown>\nE       #2 0x5591cc422b26 <unknown>\nE       #3 0x5591cc420aad <unknown>\nE       #4 0x5591cc41e557 <unknown>\nE       #5 0x5591cc41d971 <unknown>\nE       #6 0x5591cc410f78 <unknown>\nE       #7 0x5591cc440012 <unknown>\nE       #8 0x5591cc410958 <unknown>\nE       #9 0x5591cc4401de <unknown>\nE       #10 0x5591cc45eaf6 <unknown>\nE       #11 0x5591cc43fdb3 <unknown>\nE       #12 0x5591cc40ec10 <unknown>\nE       #13 0x5591cc40fbee <unknown>\nE       #14 0x5591cc8803cb <unknown>\nE       #15 0x5591cc884368 <unknown>\nE       #16 0x5591cc86deec <unknown>\nE       #17 0x5591cc884ee7 <unknown>\nE       #18 0x5591cc85313f <unknown>\nE       #19 0x5591cc8a2858 <unknown>\nE       #20 0x5591cc8a2a20 <unknown>\nE       #21 0x5591cc8b2fb6 <unknown>\nE       #22 0x7fdb92a94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Find clickable elements","time":{"start":1730944563206,"stop":1730944563260,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(2) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fc8bc15da3354f66","name":"Screenshot","source":"fc8bc15da3354f66.png","type":"image/png","size":80797},{"uid":"4bb6c9a1b65fe719","name":"HTML source","source":"4bb6c9a1b65fe719.html","type":"text/html","size":116197}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1730944564505,"stop":1730944564580,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1730946108342,"stop":1730946108342,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Testing Side Menu Bar - Women's Deals Section"},{"name":"epic","value":"Sale Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az2022-763"},{"name":"thread","value":"2800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"element_locator","value":"('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(2) > a')"},{"name":"expected_title","value":"'Jackets - Tops - Women'"},{"name":"expected_url","value":"'https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"679cb270c9d68954","reportUrl":"https://verafes.github.io/luma_project/486//#testresult/679cb270c9d68954","status":"passed","time":{"start":1730858425347,"stop":1730858426523,"duration":1176}},{"uid":"6803c14715d8b9f5","reportUrl":"https://verafes.github.io/luma_project/485//#testresult/6803c14715d8b9f5","status":"passed","time":{"start":1730771638109,"stop":1730771639919,"duration":1810}},{"uid":"1d6be48c6c6f53c","reportUrl":"https://verafes.github.io/luma_project/484//#testresult/1d6be48c6c6f53c","status":"passed","time":{"start":1730685570766,"stop":1730685572758,"duration":1992}},{"uid":"1142860bfa2f1bc8","reportUrl":"https://verafes.github.io/luma_project/483//#testresult/1142860bfa2f1bc8","status":"passed","time":{"start":1730599215393,"stop":1730599216390,"duration":997}}]},"tags":[]},"source":"f13ddfb6f2beb727.json","parameterValues":["('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(2) > a')","'Jackets - Tops - Women'","'https://magento.softwaretestingboard.com/women/tops-women/jackets-women.html'"]}