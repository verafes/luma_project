{"uid":"9aa460e6e82a9ca9","name":"TC 02.02.02 - Check Privacy and Cookie Policy link in footer leads to the correct page from each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_02_02_check_privacy_and_cookie_policy_link_functionality","historyId":"328a11773af6e4f4c78c7226c5006eac","time":{"start":1703293990781,"stop":1703294290789,"duration":300008},"description":"Check that Privacy and Cookie Policy link in footer is correct","descriptionHtml":"<p>Check that Privacy and Cookie Policy link in footer is correct</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.661\n  (Session info: chrome=120.0.6099.109)\nStacktrace:\n#0 0x55e541b9ad33 <unknown>\n#1 0x55e541857f87 <unknown>\n#2 0x55e54183d9c8 <unknown>\n#3 0x55e54183d6fa <unknown>\n#4 0x55e54183ba99 <unknown>\n#5 0x55e54183c43a <unknown>\n#6 0x55e54184d30c <unknown>\n#7 0x55e541865a51 <unknown>\n#8 0x55e54186b93b <unknown>\n#9 0x55e54183cbdd <unknown>\n#10 0x55e541865852 <unknown>\n#11 0x55e5418f0496 <unknown>\n#12 0x55e5418d10e3 <unknown>\n#13 0x55e541899044 <unknown>\n#14 0x55e54189a44e <unknown>\n#15 0x55e541b5f861 <unknown>\n#16 0x55e541b63785 <unknown>\n#17 0x55e541b4d285 <unknown>\n#18 0x55e541b6441f <unknown>\n#19 0x55e541b3120f <unknown>\n#20 0x55e541b88028 <unknown>\n#21 0x55e541b881f7 <unknown>\n#22 0x55e541b99ed4 <unknown>\n#23 0x7f3024894ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f2dfffa6b50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"46f552221ac333c2b05e4b8583a30e4d\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.02.02 - Check Privacy and Cookie Policy link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_02_check_privacy_and_cookie_policy_link_functionality(self, driver, URL):\n        \"\"\"Check that Privacy and Cookie Policy link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n>       page.open()\n\ntests/test_footer.py:517: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2dffa82f10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x55e541b881f7 \\\\u003Cunknown>\\\\n#22 0x55e541b99ed4 \\\\u003Cunknown>\\\\n#23 0x7f3024894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.661\nE         (Session info: chrome=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55e541b9ad33 <unknown>\nE       #1 0x55e541857f87 <unknown>\nE       #2 0x55e54183d9c8 <unknown>\nE       #3 0x55e54183d6fa <unknown>\nE       #4 0x55e54183ba99 <unknown>\nE       #5 0x55e54183c43a <unknown>\nE       #6 0x55e54184d30c <unknown>\nE       #7 0x55e541865a51 <unknown>\nE       #8 0x55e54186b93b <unknown>\nE       #9 0x55e54183cbdd <unknown>\nE       #10 0x55e541865852 <unknown>\nE       #11 0x55e5418f0496 <unknown>\nE       #12 0x55e5418d10e3 <unknown>\nE       #13 0x55e541899044 <unknown>\nE       #14 0x55e54189a44e <unknown>\nE       #15 0x55e541b5f861 <unknown>\nE       #16 0x55e541b63785 <unknown>\nE       #17 0x55e541b4d285 <unknown>\nE       #18 0x55e541b6441f <unknown>\nE       #19 0x55e541b3120f <unknown>\nE       #20 0x55e541b88028 <unknown>\nE       #21 0x55e541b881f7 <unknown>\nE       #22 0x55e541b99ed4 <unknown>\nE       #23 0x7f3024894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1703293748303,"stop":1703293748365,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1703293748365,"stop":1703293748365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1703293989830,"stop":1703293990780,"duration":950},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check that Privacy and Cookie Policy link in footer is correct","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.661\n  (Session info: chrome=120.0.6099.109)\nStacktrace:\n#0 0x55e541b9ad33 <unknown>\n#1 0x55e541857f87 <unknown>\n#2 0x55e54183d9c8 <unknown>\n#3 0x55e54183d6fa <unknown>\n#4 0x55e54183ba99 <unknown>\n#5 0x55e54183c43a <unknown>\n#6 0x55e54184d30c <unknown>\n#7 0x55e541865a51 <unknown>\n#8 0x55e54186b93b <unknown>\n#9 0x55e54183cbdd <unknown>\n#10 0x55e541865852 <unknown>\n#11 0x55e5418f0496 <unknown>\n#12 0x55e5418d10e3 <unknown>\n#13 0x55e541899044 <unknown>\n#14 0x55e54189a44e <unknown>\n#15 0x55e541b5f861 <unknown>\n#16 0x55e541b63785 <unknown>\n#17 0x55e541b4d285 <unknown>\n#18 0x55e541b6441f <unknown>\n#19 0x55e541b3120f <unknown>\n#20 0x55e541b88028 <unknown>\n#21 0x55e541b881f7 <unknown>\n#22 0x55e541b99ed4 <unknown>\n#23 0x7f3024894ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f2dfffa6b50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"46f552221ac333c2b05e4b8583a30e4d\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.02.02 - Check Privacy and Cookie Policy link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_02_check_privacy_and_cookie_policy_link_functionality(self, driver, URL):\n        \"\"\"Check that Privacy and Cookie Policy link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n>       page.open()\n\ntests/test_footer.py:517: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2dffa82f10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x55e541b881f7 \\\\u003Cunknown>\\\\n#22 0x55e541b99ed4 \\\\u003Cunknown>\\\\n#23 0x7f3024894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.661\nE         (Session info: chrome=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x55e541b9ad33 <unknown>\nE       #1 0x55e541857f87 <unknown>\nE       #2 0x55e54183d9c8 <unknown>\nE       #3 0x55e54183d6fa <unknown>\nE       #4 0x55e54183ba99 <unknown>\nE       #5 0x55e54183c43a <unknown>\nE       #6 0x55e54184d30c <unknown>\nE       #7 0x55e541865a51 <unknown>\nE       #8 0x55e54186b93b <unknown>\nE       #9 0x55e54183cbdd <unknown>\nE       #10 0x55e541865852 <unknown>\nE       #11 0x55e5418f0496 <unknown>\nE       #12 0x55e5418d10e3 <unknown>\nE       #13 0x55e541899044 <unknown>\nE       #14 0x55e54189a44e <unknown>\nE       #15 0x55e541b5f861 <unknown>\nE       #16 0x55e541b63785 <unknown>\nE       #17 0x55e541b4d285 <unknown>\nE       #18 0x55e541b6441f <unknown>\nE       #19 0x55e541b3120f <unknown>\nE       #20 0x55e541b88028 <unknown>\nE       #21 0x55e541b881f7 <unknown>\nE       #22 0x55e541b99ed4 <unknown>\nE       #23 0x7f3024894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Open a browser","time":{"start":1703293990781,"stop":1703294290788,"duration":300007},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.661\n  (Session info: chrome=120.0.6099.109)\nStacktrace:\n#0 0x55e541b9ad33 <unknown>\n#1 0x55e541857f87 <unknown>\n#2 0x55e54183d9c8 <unknown>\n#3 0x55e54183d6fa <unknown>\n#4 0x55e54183ba99 <unknown>\n#5 0x55e54183c43a <unknown>\n#6 0x55e54184d30c <unknown>\n#7 0x55e541865a51 <unknown>\n#8 0x55e54186b93b <unknown>\n#9 0x55e54183cbdd <unknown>\n#10 0x55e541865852 <unknown>\n#11 0x55e5418f0496 <unknown>\n#12 0x55e5418d10e3 <unknown>\n#13 0x55e541899044 <unknown>\n#14 0x55e54189a44e <unknown>\n#15 0x55e541b5f861 <unknown>\n#16 0x55e541b63785 <unknown>\n#17 0x55e541b4d285 <unknown>\n#18 0x55e541b6441f <unknown>\n#19 0x55e541b3120f <unknown>\n#20 0x55e541b88028 <unknown>\n#21 0x55e541b881f7 <unknown>\n#22 0x55e541b99ed4 <unknown>\n#23 0x7f3024894ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 19, in open\n    self.driver.get(self.url)\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5a7fbebeb2c865a2","name":"Screenshot","source":"5a7fbebeb2c865a2.png","type":"image/png","size":637695},{"uid":"d21ef4122411eeeb","name":"HTML source","source":"d21ef4122411eeeb.html","type":"text/html","size":103012}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1703294291113,"stop":1703294291189,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1703295535589,"stop":1703295535589,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az1148-579"},{"name":"thread","value":"2985-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"e4bbffa1c4fabb28","reportUrl":"https://verafes.github.io/luma_project/166//#testresult/e4bbffa1c4fabb28","status":"passed","time":{"start":1703207694819,"stop":1703207696669,"duration":1850}},{"uid":"225ceb5e067b42f8","reportUrl":"https://verafes.github.io/luma_project/165//#testresult/225ceb5e067b42f8","status":"passed","time":{"start":1703121338913,"stop":1703121341142,"duration":2229}},{"uid":"77f3ca39d0878ac1","reportUrl":"https://verafes.github.io/luma_project/164//#testresult/77f3ca39d0878ac1","status":"passed","time":{"start":1703035008890,"stop":1703035031858,"duration":22968}},{"uid":"d8bee33fa611775","reportUrl":"https://verafes.github.io/luma_project/163//#testresult/d8bee33fa611775","status":"passed","time":{"start":1702948772909,"stop":1702948774900,"duration":1991}},{"uid":"dcd1af110f7caa64","reportUrl":"https://verafes.github.io/luma_project/162//#testresult/dcd1af110f7caa64","status":"passed","time":{"start":1702862499791,"stop":1702862505017,"duration":5226}},{"uid":"1c640c79cc9e26ec","reportUrl":"https://verafes.github.io/luma_project/161//#testresult/1c640c79cc9e26ec","status":"passed","time":{"start":1702776096226,"stop":1702776098167,"duration":1941}}]},"tags":[]},"source":"9aa460e6e82a9ca9.json","parameterValues":["'https://magento.softwaretestingboard.com/'"]}