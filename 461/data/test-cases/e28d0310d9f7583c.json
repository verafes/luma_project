{"uid":"e28d0310d9f7583c","name":"TC 10.03.03, 10.03.05 - Verify 2 links in Gear Deals open the correct pages","fullName":"tests.test_sale.TestSideMenuBarGear#test_tc_10_03_03__05","historyId":"796b66b95c8ca0864fd4fb8a7fc1e65d","time":{"start":1728698023543,"stop":1728698024748,"duration":1205},"description":"Check that two links in Gear Deals section lead to the correct pages after click","descriptionHtml":"<p>Check that two links in Gear Deals section lead to the correct pages after click</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/gear/bags.html\">...</a> is not clickable at point (337, 851). Other element would receive the click: <div id=\"aswift_1_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55b65f34002a <unknown>\n#1 0x55b65f0265e0 <unknown>\n#2 0x55b65f07c866 <unknown>\n#3 0x55b65f07a78d <unknown>\n#4 0x55b65f078237 <unknown>\n#5 0x55b65f077646 <unknown>\n#6 0x55b65f06aa98 <unknown>\n#7 0x55b65f09ab22 <unknown>\n#8 0x55b65f06a478 <unknown>\n#9 0x55b65f09acee <unknown>\n#10 0x55b65f0b9d7d <unknown>\n#11 0x55b65f09a8c3 <unknown>\n#12 0x55b65f0686b3 <unknown>\n#13 0x55b65f06968e <unknown>\n#14 0x55b65f30aa2b <unknown>\n#15 0x55b65f30e9b1 <unknown>\n#16 0x55b65f2f7225 <unknown>\n#17 0x55b65f30f532 <unknown>\n#18 0x55b65f2dc38f <unknown>\n#19 0x55b65f32ef28 <unknown>\n#20 0x55b65f32f0f3 <unknown>\n#21 0x55b65f33ee7c <unknown>\n#22 0x7fc6a2e94ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarGear object at 0x7f05eee901d0>\nsale_page = <pages.sale_page.SalePage object at 0x7f05f0668750>\nelement_locator = ('css selector', '.categories-menu > ul:nth-child(6) > li:nth-child(1) > a')\nexpected_title = 'Bags - Gear'\nexpected_url = 'https://magento.softwaretestingboard.com/gear/bags.html'\n\n    @allure.title(\"TC 10.03.03, 10.03.05 - \"\n                  \"Verify 2 links in Gear Deals open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            SideBarLocators.GEAR_DEALS_ELEMENTS.values(),\n            expected_titles_gear.values(),\n            expected_urls_gear.values(),\n        )\n    )\n    def test_tc_10_03_03__05(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that two links in Gear Deals section lead to the correct pages after click\"\"\"\n        element_in_gear_deals = sale_page.element_is_clickable(element_locator)\n>       element_in_gear_deals.click()\n\ntests/test_sale.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f05f0674110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55b65f32f0f3 \\\\u003Cunknown>\\\\n#21 0x55b65f33ee7c \\\\u003Cunknown>\\\\n#22 0x7fc6a2e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/gear/bags.html\">...</a> is not clickable at point (337, 851). Other element would receive the click: <div id=\"aswift_1_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x55b65f34002a <unknown>\nE       #1 0x55b65f0265e0 <unknown>\nE       #2 0x55b65f07c866 <unknown>\nE       #3 0x55b65f07a78d <unknown>\nE       #4 0x55b65f078237 <unknown>\nE       #5 0x55b65f077646 <unknown>\nE       #6 0x55b65f06aa98 <unknown>\nE       #7 0x55b65f09ab22 <unknown>\nE       #8 0x55b65f06a478 <unknown>\nE       #9 0x55b65f09acee <unknown>\nE       #10 0x55b65f0b9d7d <unknown>\nE       #11 0x55b65f09a8c3 <unknown>\nE       #12 0x55b65f0686b3 <unknown>\nE       #13 0x55b65f06968e <unknown>\nE       #14 0x55b65f30aa2b <unknown>\nE       #15 0x55b65f30e9b1 <unknown>\nE       #16 0x55b65f2f7225 <unknown>\nE       #17 0x55b65f30f532 <unknown>\nE       #18 0x55b65f2dc38f <unknown>\nE       #19 0x55b65f32ef28 <unknown>\nE       #20 0x55b65f32f0f3 <unknown>\nE       #21 0x55b65f33ee7c <unknown>\nE       #22 0x7fc6a2e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1728696886158,"stop":1728696886222,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1728696886222,"stop":1728696886222,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1728698020352,"stop":1728698021608,"duration":1256},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sale_page","time":{"start":1728698021608,"stop":1728698023542,"duration":1934},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1728698021608,"stop":1728698023542,"duration":1934},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Check that two links in Gear Deals section lead to the correct pages after click","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/gear/bags.html\">...</a> is not clickable at point (337, 851). Other element would receive the click: <div id=\"aswift_1_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55b65f34002a <unknown>\n#1 0x55b65f0265e0 <unknown>\n#2 0x55b65f07c866 <unknown>\n#3 0x55b65f07a78d <unknown>\n#4 0x55b65f078237 <unknown>\n#5 0x55b65f077646 <unknown>\n#6 0x55b65f06aa98 <unknown>\n#7 0x55b65f09ab22 <unknown>\n#8 0x55b65f06a478 <unknown>\n#9 0x55b65f09acee <unknown>\n#10 0x55b65f0b9d7d <unknown>\n#11 0x55b65f09a8c3 <unknown>\n#12 0x55b65f0686b3 <unknown>\n#13 0x55b65f06968e <unknown>\n#14 0x55b65f30aa2b <unknown>\n#15 0x55b65f30e9b1 <unknown>\n#16 0x55b65f2f7225 <unknown>\n#17 0x55b65f30f532 <unknown>\n#18 0x55b65f2dc38f <unknown>\n#19 0x55b65f32ef28 <unknown>\n#20 0x55b65f32f0f3 <unknown>\n#21 0x55b65f33ee7c <unknown>\n#22 0x7fc6a2e94ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarGear object at 0x7f05eee901d0>\nsale_page = <pages.sale_page.SalePage object at 0x7f05f0668750>\nelement_locator = ('css selector', '.categories-menu > ul:nth-child(6) > li:nth-child(1) > a')\nexpected_title = 'Bags - Gear'\nexpected_url = 'https://magento.softwaretestingboard.com/gear/bags.html'\n\n    @allure.title(\"TC 10.03.03, 10.03.05 - \"\n                  \"Verify 2 links in Gear Deals open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            SideBarLocators.GEAR_DEALS_ELEMENTS.values(),\n            expected_titles_gear.values(),\n            expected_urls_gear.values(),\n        )\n    )\n    def test_tc_10_03_03__05(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that two links in Gear Deals section lead to the correct pages after click\"\"\"\n        element_in_gear_deals = sale_page.element_is_clickable(element_locator)\n>       element_in_gear_deals.click()\n\ntests/test_sale.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f05f0674110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55b65f32f0f3 \\\\u003Cunknown>\\\\n#21 0x55b65f33ee7c \\\\u003Cunknown>\\\\n#22 0x7fc6a2e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/gear/bags.html\">...</a> is not clickable at point (337, 851). Other element would receive the click: <div id=\"aswift_1_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x55b65f34002a <unknown>\nE       #1 0x55b65f0265e0 <unknown>\nE       #2 0x55b65f07c866 <unknown>\nE       #3 0x55b65f07a78d <unknown>\nE       #4 0x55b65f078237 <unknown>\nE       #5 0x55b65f077646 <unknown>\nE       #6 0x55b65f06aa98 <unknown>\nE       #7 0x55b65f09ab22 <unknown>\nE       #8 0x55b65f06a478 <unknown>\nE       #9 0x55b65f09acee <unknown>\nE       #10 0x55b65f0b9d7d <unknown>\nE       #11 0x55b65f09a8c3 <unknown>\nE       #12 0x55b65f0686b3 <unknown>\nE       #13 0x55b65f06968e <unknown>\nE       #14 0x55b65f30aa2b <unknown>\nE       #15 0x55b65f30e9b1 <unknown>\nE       #16 0x55b65f2f7225 <unknown>\nE       #17 0x55b65f30f532 <unknown>\nE       #18 0x55b65f2dc38f <unknown>\nE       #19 0x55b65f32ef28 <unknown>\nE       #20 0x55b65f32f0f3 <unknown>\nE       #21 0x55b65f33ee7c <unknown>\nE       #22 0x7fc6a2e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Find clickable elements","time":{"start":1728698023543,"stop":1728698023579,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > ul:nth-child(6) > li:nth-child(1) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2141bc995794a448","name":"Screenshot","source":"2141bc995794a448.png","type":"image/png","size":358458},{"uid":"3935a0f47777ef78","name":"HTML source","source":"3935a0f47777ef78.html","type":"text/html","size":92518}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1728698024930,"stop":1728698025004,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1728698525640,"stop":1728698525640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Sale Page"},{"name":"feature","value":"Testing Side Menu Bar - Gear Deals Section"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az984-743"},{"name":"thread","value":"2902-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"element_locator","value":"('css selector', '.categories-menu > ul:nth-child(6) > li:nth-child(1) > a')"},{"name":"expected_title","value":"'Bags - Gear'"},{"name":"expected_url","value":"'https://magento.softwaretestingboard.com/gear/bags.html'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":4,"unknown":0,"total":7},"items":[{"uid":"ca25c11e527dbb80","reportUrl":"https://verafes.github.io/luma_project/460//#testresult/ca25c11e527dbb80","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/gear/bags.html\">...</a> is not clickable at point (337, 851). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 100px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x56424fe4d02a <unknown>\n#1 0x56424fb335e0 <unknown>\n#2 0x56424fb89866 <unknown>\n#3 0x56424fb8778d <unknown>\n#4 0x56424fb85237 <unknown>\n#5 0x56424fb84646 <unknown>\n#6 0x56424fb77a98 <unknown>\n#7 0x56424fba7b22 <unknown>\n#8 0x56424fb77478 <unknown>\n#9 0x56424fba7cee <unknown>\n#10 0x56424fbc6d7d <unknown>\n#11 0x56424fba78c3 <unknown>\n#12 0x56424fb756b3 <unknown>\n#13 0x56424fb7668e <unknown>\n#14 0x56424fe17a2b <unknown>\n#15 0x56424fe1b9b1 <unknown>\n#16 0x56424fe04225 <unknown>\n#17 0x56424fe1c532 <unknown>\n#18 0x56424fde938f <unknown>\n#19 0x56424fe3bf28 <unknown>\n#20 0x56424fe3c0f3 <unknown>\n#21 0x56424fe4be7c <unknown>\n#22 0x7f5822694ac3 <unknown>","time":{"start":1728612359111,"stop":1728612360374,"duration":1263}},{"uid":"2ae88f7f35ec58c7","reportUrl":"https://verafes.github.io/luma_project/459//#testresult/2ae88f7f35ec58c7","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/gear/bags.html\">...</a> is not clickable at point (337, 851). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55723858102a <unknown>\n#1 0x5572382675e0 <unknown>\n#2 0x5572382bd866 <unknown>\n#3 0x5572382bb78d <unknown>\n#4 0x5572382b9237 <unknown>\n#5 0x5572382b8646 <unknown>\n#6 0x5572382aba98 <unknown>\n#7 0x5572382dbb22 <unknown>\n#8 0x5572382ab478 <unknown>\n#9 0x5572382dbcee <unknown>\n#10 0x5572382fad7d <unknown>\n#11 0x5572382db8c3 <unknown>\n#12 0x5572382a96b3 <unknown>\n#13 0x5572382aa68e <unknown>\n#14 0x55723854ba2b <unknown>\n#15 0x55723854f9b1 <unknown>\n#16 0x557238538225 <unknown>\n#17 0x557238550532 <unknown>\n#18 0x55723851d38f <unknown>\n#19 0x55723856ff28 <unknown>\n#20 0x5572385700f3 <unknown>\n#21 0x55723857fe7c <unknown>\n#22 0x7f2d65294ac3 <unknown>","time":{"start":1728525494350,"stop":1728525495529,"duration":1179}},{"uid":"1ea3bd5359685785","reportUrl":"https://verafes.github.io/luma_project/458//#testresult/1ea3bd5359685785","status":"passed","time":{"start":1728438668114,"stop":1728438668990,"duration":876}},{"uid":"99f0f68ae56ce5c9","reportUrl":"https://verafes.github.io/luma_project/457//#testresult/99f0f68ae56ce5c9","status":"passed","time":{"start":1728352307519,"stop":1728352308441,"duration":922}},{"uid":"b333f5a5166adb9e","reportUrl":"https://verafes.github.io/luma_project/456//#testresult/b333f5a5166adb9e","status":"passed","time":{"start":1728265985096,"stop":1728265985808,"duration":712}},{"uid":"52587db9c4765ef","reportUrl":"https://verafes.github.io/luma_project/455//#testresult/52587db9c4765ef","status":"passed","time":{"start":1728179734904,"stop":1728179735425,"duration":521}}]},"tags":[]},"source":"e28d0310d9f7583c.json","parameterValues":["('css selector', '.categories-menu > ul:nth-child(6) > li:nth-child(1) > a')","'Bags - Gear'","'https://magento.softwaretestingboard.com/gear/bags.html'"]}