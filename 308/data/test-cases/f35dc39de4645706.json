{"uid":"f35dc39de4645706","name":"Check the transition to the page my wish after clicking on the button. User is not authorized","fullName":"tests.test_main_page.TestHotSellerSection#test_06_01_17_check_the_transition_to_the_page_my_wish_after_click_on_the_button","historyId":"0a4f97c306f2cceb030ba035cd56202a","time":{"start":1715477400140,"stop":1715477403253,"duration":3113},"description":"\n            This test will check that after clicking on the add to wishlist button,\n            you are redirected to the My Wishlist page\n            User is not authorized\n            ","descriptionHtml":"<pre><code>        This test will check that after clicking on the add to wishlist button,\n        you are redirected to the My Wishlist page\n        User is not authorized\n</code></pre>\n","status":"skipped","statusMessage":"XFAIL In CI, there is no transition to the user registration page, so the test fails\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" data-post=\"{&quot;action&quot;:&quot;https:\\/\\/magento.softwaretestingboard.com\\/wishlist\\/index\\/add\\/&quot;,&quot;data&quot;:{&quot;product&quot;:1556,&quot;uenc&quot;:&quot;aHR0cHM6Ly9tYWdlbnRvLnNvZnR3YXJldGVzdGluZ2JvYXJkLmNvbS8,&quot;}}\" class=\"action towishlist\" data-action=\"add-to-wishlist\" title=\"Add to Wish List\">...</a> is not clickable at point (0, 842). Other element would receive the click: <div class=\"page-wrapper\">...</div>\n  (Session info: chrome=124.0.6367.60)\nStacktrace:\n#0 0x55af90166e33 <unknown>\n#1 0x55af8fe56567 <unknown>\n#2 0x55af8fea7eb3 <unknown>\n#3 0x55af8fea5de8 <unknown>\n#4 0x55af8fea37a7 <unknown>\n#5 0x55af8fea2b74 <unknown>\n#6 0x55af8fe96139 <unknown>\n#7 0x55af8fec3362 <unknown>\n#8 0x55af8fe95ac8 <unknown>\n#9 0x55af8fec352e <unknown>\n#10 0x55af8fee1ae2 <unknown>\n#11 0x55af8fec3103 <unknown>\n#12 0x55af8fe941ba <unknown>\n#13 0x55af8fe94b8e <unknown>\n#14 0x55af9012b59b <unknown>\n#15 0x55af9012f34b <unknown>\n#16 0x55af90117681 <unknown>\n#17 0x55af9012feb2 <unknown>\n#18 0x55af900fc6af <unknown>\n#19 0x55af90156428 <unknown>\n#20 0x55af90156600 <unknown>\n#21 0x55af90165f84 <unknown>\n#22 0x7f4cbe494ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7fdad10f0810>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fd3e6ebd93a3d816df6e3f38ce85222a\")>\n\n    @pytest.mark.xfail(reason=\"In CI, there is no transition to the user registration page, so the test fails\")\n    @allure.title(\"Check the transition to the page my wish after clicking on the button. User is not authorized\")\n    def test_06_01_17_check_the_transition_to_the_page_my_wish_after_click_on_the_button(self, driver):\n        \"\"\"\n        This test will check that after clicking on the add to wishlist button,\n        you are redirected to the My Wishlist page\n        User is not authorized\n        \"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       error_message_text = page.check_the_transition_to_the_page_my_wish_after_click_on_the_button()\n\ntests/test_main_page.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:139: in check_the_transition_to_the_page_my_wish_after_click_on_the_button\n    button.click()\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdad2eaad90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55af90156600 \\\\u003Cunknown>\\\\n#21 0x55af90165f84 \\\\u003Cunknown>\\\\n#22 0x7f4cbe494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" data-post=\"{&quot;action&quot;:&quot;https:\\/\\/magento.softwaretestingboard.com\\/wishlist\\/index\\/add\\/&quot;,&quot;data&quot;:{&quot;product&quot;:1556,&quot;uenc&quot;:&quot;aHR0cHM6Ly9tYWdlbnRvLnNvZnR3YXJldGVzdGluZ2JvYXJkLmNvbS8,&quot;}}\" class=\"action towishlist\" data-action=\"add-to-wishlist\" title=\"Add to Wish List\">...</a> is not clickable at point (0, 842). Other element would receive the click: <div class=\"page-wrapper\">...</div>\nE         (Session info: chrome=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x55af90166e33 <unknown>\nE       #1 0x55af8fe56567 <unknown>\nE       #2 0x55af8fea7eb3 <unknown>\nE       #3 0x55af8fea5de8 <unknown>\nE       #4 0x55af8fea37a7 <unknown>\nE       #5 0x55af8fea2b74 <unknown>\nE       #6 0x55af8fe96139 <unknown>\nE       #7 0x55af8fec3362 <unknown>\nE       #8 0x55af8fe95ac8 <unknown>\nE       #9 0x55af8fec352e <unknown>\nE       #10 0x55af8fee1ae2 <unknown>\nE       #11 0x55af8fec3103 <unknown>\nE       #12 0x55af8fe941ba <unknown>\nE       #13 0x55af8fe94b8e <unknown>\nE       #14 0x55af9012b59b <unknown>\nE       #15 0x55af9012f34b <unknown>\nE       #16 0x55af90117681 <unknown>\nE       #17 0x55af9012feb2 <unknown>\nE       #18 0x55af900fc6af <unknown>\nE       #19 0x55af90156428 <unknown>\nE       #20 0x55af90156600 <unknown>\nE       #21 0x55af90165f84 <unknown>\nE       #22 0x7f4cbe494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1715476745730,"stop":1715476745791,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1715476745791,"stop":1715476745791,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1715477398872,"stop":1715477400139,"duration":1267},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n            This test will check that after clicking on the add to wishlist button,\n            you are redirected to the My Wishlist page\n            User is not authorized\n            ","status":"skipped","statusMessage":"XFAIL In CI, there is no transition to the user registration page, so the test fails\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" data-post=\"{&quot;action&quot;:&quot;https:\\/\\/magento.softwaretestingboard.com\\/wishlist\\/index\\/add\\/&quot;,&quot;data&quot;:{&quot;product&quot;:1556,&quot;uenc&quot;:&quot;aHR0cHM6Ly9tYWdlbnRvLnNvZnR3YXJldGVzdGluZ2JvYXJkLmNvbS8,&quot;}}\" class=\"action towishlist\" data-action=\"add-to-wishlist\" title=\"Add to Wish List\">...</a> is not clickable at point (0, 842). Other element would receive the click: <div class=\"page-wrapper\">...</div>\n  (Session info: chrome=124.0.6367.60)\nStacktrace:\n#0 0x55af90166e33 <unknown>\n#1 0x55af8fe56567 <unknown>\n#2 0x55af8fea7eb3 <unknown>\n#3 0x55af8fea5de8 <unknown>\n#4 0x55af8fea37a7 <unknown>\n#5 0x55af8fea2b74 <unknown>\n#6 0x55af8fe96139 <unknown>\n#7 0x55af8fec3362 <unknown>\n#8 0x55af8fe95ac8 <unknown>\n#9 0x55af8fec352e <unknown>\n#10 0x55af8fee1ae2 <unknown>\n#11 0x55af8fec3103 <unknown>\n#12 0x55af8fe941ba <unknown>\n#13 0x55af8fe94b8e <unknown>\n#14 0x55af9012b59b <unknown>\n#15 0x55af9012f34b <unknown>\n#16 0x55af90117681 <unknown>\n#17 0x55af9012feb2 <unknown>\n#18 0x55af900fc6af <unknown>\n#19 0x55af90156428 <unknown>\n#20 0x55af90156600 <unknown>\n#21 0x55af90165f84 <unknown>\n#22 0x7f4cbe494ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestHotSellerSection object at 0x7fdad10f0810>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fd3e6ebd93a3d816df6e3f38ce85222a\")>\n\n    @pytest.mark.xfail(reason=\"In CI, there is no transition to the user registration page, so the test fails\")\n    @allure.title(\"Check the transition to the page my wish after clicking on the button. User is not authorized\")\n    def test_06_01_17_check_the_transition_to_the_page_my_wish_after_click_on_the_button(self, driver):\n        \"\"\"\n        This test will check that after clicking on the add to wishlist button,\n        you are redirected to the My Wishlist page\n        User is not authorized\n        \"\"\"\n        page = MainPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       error_message_text = page.check_the_transition_to_the_page_my_wish_after_click_on_the_button()\n\ntests/test_main_page.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:139: in check_the_transition_to_the_page_my_wish_after_click_on_the_button\n    button.click()\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdad2eaad90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55af90156600 \\\\u003Cunknown>\\\\n#21 0x55af90165f84 \\\\u003Cunknown>\\\\n#22 0x7f4cbe494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" data-post=\"{&quot;action&quot;:&quot;https:\\/\\/magento.softwaretestingboard.com\\/wishlist\\/index\\/add\\/&quot;,&quot;data&quot;:{&quot;product&quot;:1556,&quot;uenc&quot;:&quot;aHR0cHM6Ly9tYWdlbnRvLnNvZnR3YXJldGVzdGluZ2JvYXJkLmNvbS8,&quot;}}\" class=\"action towishlist\" data-action=\"add-to-wishlist\" title=\"Add to Wish List\">...</a> is not clickable at point (0, 842). Other element would receive the click: <div class=\"page-wrapper\">...</div>\nE         (Session info: chrome=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x55af90166e33 <unknown>\nE       #1 0x55af8fe56567 <unknown>\nE       #2 0x55af8fea7eb3 <unknown>\nE       #3 0x55af8fea5de8 <unknown>\nE       #4 0x55af8fea37a7 <unknown>\nE       #5 0x55af8fea2b74 <unknown>\nE       #6 0x55af8fe96139 <unknown>\nE       #7 0x55af8fec3362 <unknown>\nE       #8 0x55af8fe95ac8 <unknown>\nE       #9 0x55af8fec352e <unknown>\nE       #10 0x55af8fee1ae2 <unknown>\nE       #11 0x55af8fec3103 <unknown>\nE       #12 0x55af8fe941ba <unknown>\nE       #13 0x55af8fe94b8e <unknown>\nE       #14 0x55af9012b59b <unknown>\nE       #15 0x55af9012f34b <unknown>\nE       #16 0x55af90117681 <unknown>\nE       #17 0x55af9012feb2 <unknown>\nE       #18 0x55af900fc6af <unknown>\nE       #19 0x55af90156428 <unknown>\nE       #20 0x55af90156600 <unknown>\nE       #21 0x55af90165f84 <unknown>\nE       #22 0x7f4cbe494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open a browser","time":{"start":1715477400140,"stop":1715477401582,"duration":1442},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check the transition to the page my desires when clicking on the button. User is not authorized","time":{"start":1715477401582,"stop":1715477403253,"duration":1671},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" data-post=\"{&quot;action&quot;:&quot;https:\\/\\/magento.softwaretestingboard.com\\/wishlist\\/index\\/add\\/&quot;,&quot;data&quot;:{&quot;product&quot;:1556,&quot;uenc&quot;:&quot;aHR0cHM6Ly9tYWdlbnRvLnNvZnR3YXJldGVzdGluZ2JvYXJkLmNvbS8,&quot;}}\" class=\"action towishlist\" data-action=\"add-to-wishlist\" title=\"Add to Wish List\">...</a> is not clickable at point (0, 842). Other element would receive the click: <div class=\"page-wrapper\">...</div>\n  (Session info: chrome=124.0.6367.60)\nStacktrace:\n#0 0x55af90166e33 <unknown>\n#1 0x55af8fe56567 <unknown>\n#2 0x55af8fea7eb3 <unknown>\n#3 0x55af8fea5de8 <unknown>\n#4 0x55af8fea37a7 <unknown>\n#5 0x55af8fea2b74 <unknown>\n#6 0x55af8fe96139 <unknown>\n#7 0x55af8fec3362 <unknown>\n#8 0x55af8fe95ac8 <unknown>\n#9 0x55af8fec352e <unknown>\n#10 0x55af8fee1ae2 <unknown>\n#11 0x55af8fec3103 <unknown>\n#12 0x55af8fe941ba <unknown>\n#13 0x55af8fe94b8e <unknown>\n#14 0x55af9012b59b <unknown>\n#15 0x55af9012f34b <unknown>\n#16 0x55af90117681 <unknown>\n#17 0x55af9012feb2 <unknown>\n#18 0x55af900fc6af <unknown>\n#19 0x55af90156428 <unknown>\n#20 0x55af90156600 <unknown>\n#21 0x55af90165f84 <unknown>\n#22 0x7f4cbe494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/main_page.py\", line 139, in check_the_transition_to_the_page_my_wish_after_click_on_the_button\n    button.click()\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1715477401582,"stop":1715477401612,"duration":30},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1715477401582,"stop":1715477401591,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(1) div[class='product-item-info']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1715477401591,"stop":1715477401596,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"fd3e6ebd93a3d816df6e3f38ce85222a\", element=\"f.BABC4CFA1FEE303F752D2BC2A54ED3B3.d.E7909F0A4BEF49C6C5517ED2BAB12B14.e.55\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(1) div[class='product-item-info']\")"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move cursor to element","time":{"start":1715477401612,"stop":1715477401880,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"fd3e6ebd93a3d816df6e3f38ce85222a\", element=\"f.BABC4CFA1FEE303F752D2BC2A54ED3B3.d.E7909F0A4BEF49C6C5517ED2BAB12B14.e.55\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Find a visible element","time":{"start":1715477401880,"stop":1715477401908,"duration":28},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1715477401880,"stop":1715477401888,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(1) a[data-action='add-to-wishlist']\")"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1715477401889,"stop":1715477401893,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"fd3e6ebd93a3d816df6e3f38ce85222a\", element=\"f.BABC4CFA1FEE303F752D2BC2A54ED3B3.d.E7909F0A4BEF49C6C5517ED2BAB12B14.e.58\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', \"li[class='product-item']:nth-child(1) a[data-action='add-to-wishlist']\")"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move cursor to element","time":{"start":1715477401908,"stop":1715477402177,"duration":269},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"fd3e6ebd93a3d816df6e3f38ce85222a\", element=\"f.BABC4CFA1FEE303F752D2BC2A54ED3B3.d.E7909F0A4BEF49C6C5517ED2BAB12B14.e.58\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cf9b1a5860562e32","name":"Screenshot","source":"cf9b1a5860562e32.png","type":"image/png","size":637707},{"uid":"2364145bf569afc","name":"HTML source","source":"2364145bf569afc.html","type":"text/html","size":138819}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":10,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1715477403500,"stop":1715477403573,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1715478325225,"stop":1715478325225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Testing Hot Seller Section"},{"name":"epic","value":"Main Page"},{"name":"tag","value":"@pytest.mark.xfail(reason='In CI, there is no transition to the user registration page, so the test fails')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az1118-100"},{"name":"thread","value":"3135-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail(reason='In CI, there is no transition to the user registration page, so the test fails')"]},"source":"f35dc39de4645706.json","parameterValues":[]}