{"uid":"c519380edbe323e3","name":"TC 01.03.34 correctly redirected the link \"Training Video Download\"","fullName":"tests.test_header.TestHeader#test_tc_01_03_34_correctly_redirected_the_link_training_video_download","historyId":"112d02372d5f1c097cf93e5643431a1a","time":{"start":1731981251829,"stop":1731981253687,"duration":1858},"description":"Verify 'Training - Video Download' link click redirected to the 'Video Download' page\n            and the 'Video Download' header is displayed","descriptionHtml":"<p>Verify 'Training - Video Download' link click redirected to the 'Video Download' page<br />\nand the 'Video Download' header is displayed</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x55ad3c9024ca <unknown>\n#1 0x55ad3c41547d <unknown>\n#2 0x55ad3c46546c <unknown>\n#3 0x55ad3c458ff5 <unknown>\n#4 0x55ad3c488372 <unknown>\n#5 0x55ad3c458938 <unknown>\n#6 0x55ad3c48853e <unknown>\n#7 0x55ad3c4a6de0 <unknown>\n#8 0x55ad3c488113 <unknown>\n#9 0x55ad3c456be0 <unknown>\n#10 0x55ad3c457bbe <unknown>\n#11 0x55ad3c8cee4b <unknown>\n#12 0x55ad3c8d2de2 <unknown>\n#13 0x55ad3c8bbd2c <unknown>\n#14 0x55ad3c8d3957 <unknown>\n#15 0x55ad3c8a14bf <unknown>\n#16 0x55ad3c8f1348 <unknown>\n#17 0x55ad3c8f1510 <unknown>\n#18 0x55ad3c901346 <unknown>\n#19 0x7f2aaac94ac3 <unknown>","statusTrace":"self = <test_header.TestHeader object at 0x7f23e6016050>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"821d8d1914ca902bbd84d8c8a64457c0\")>\n\n    @allure.title('TC 01.03.34 correctly redirected the link \"Training Video Download\"')\n    def test_tc_01_03_34_correctly_redirected_the_link_training_video_download(self, driver):\n        \"\"\"Verify 'Training - Video Download' link click redirected to the 'Video Download' page\n            and the 'Video Download' header is displayed\"\"\"\n        page = HeaderPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       current_page = page.redirected_the_link_training_video_download()\n\ntests/test_header.py:144: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/header_page.py:101: in redirected_the_link_training_video_download\n    element.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f23e6504490>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55ad3c8f1510 \\\\u003Cunknown>\\\\n#18 0x55ad3c901346 \\\\u003Cunknown>\\\\n#19 0x7f2aaac94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=131.0.6778.69)\nE       Stacktrace:\nE       #0 0x55ad3c9024ca <unknown>\nE       #1 0x55ad3c41547d <unknown>\nE       #2 0x55ad3c46546c <unknown>\nE       #3 0x55ad3c458ff5 <unknown>\nE       #4 0x55ad3c488372 <unknown>\nE       #5 0x55ad3c458938 <unknown>\nE       #6 0x55ad3c48853e <unknown>\nE       #7 0x55ad3c4a6de0 <unknown>\nE       #8 0x55ad3c488113 <unknown>\nE       #9 0x55ad3c456be0 <unknown>\nE       #10 0x55ad3c457bbe <unknown>\nE       #11 0x55ad3c8cee4b <unknown>\nE       #12 0x55ad3c8d2de2 <unknown>\nE       #13 0x55ad3c8bbd2c <unknown>\nE       #14 0x55ad3c8d3957 <unknown>\nE       #15 0x55ad3c8a14bf <unknown>\nE       #16 0x55ad3c8f1348 <unknown>\nE       #17 0x55ad3c8f1510 <unknown>\nE       #18 0x55ad3c901346 <unknown>\nE       #19 0x7f2aaac94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1731980584577,"stop":1731980584644,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1731980584644,"stop":1731980584644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1731981250534,"stop":1731981251828,"duration":1294},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify 'Training - Video Download' link click redirected to the 'Video Download' page\n            and the 'Video Download' header is displayed","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x55ad3c9024ca <unknown>\n#1 0x55ad3c41547d <unknown>\n#2 0x55ad3c46546c <unknown>\n#3 0x55ad3c458ff5 <unknown>\n#4 0x55ad3c488372 <unknown>\n#5 0x55ad3c458938 <unknown>\n#6 0x55ad3c48853e <unknown>\n#7 0x55ad3c4a6de0 <unknown>\n#8 0x55ad3c488113 <unknown>\n#9 0x55ad3c456be0 <unknown>\n#10 0x55ad3c457bbe <unknown>\n#11 0x55ad3c8cee4b <unknown>\n#12 0x55ad3c8d2de2 <unknown>\n#13 0x55ad3c8bbd2c <unknown>\n#14 0x55ad3c8d3957 <unknown>\n#15 0x55ad3c8a14bf <unknown>\n#16 0x55ad3c8f1348 <unknown>\n#17 0x55ad3c8f1510 <unknown>\n#18 0x55ad3c901346 <unknown>\n#19 0x7f2aaac94ac3 <unknown>","statusTrace":"self = <test_header.TestHeader object at 0x7f23e6016050>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"821d8d1914ca902bbd84d8c8a64457c0\")>\n\n    @allure.title('TC 01.03.34 correctly redirected the link \"Training Video Download\"')\n    def test_tc_01_03_34_correctly_redirected_the_link_training_video_download(self, driver):\n        \"\"\"Verify 'Training - Video Download' link click redirected to the 'Video Download' page\n            and the 'Video Download' header is displayed\"\"\"\n        page = HeaderPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       current_page = page.redirected_the_link_training_video_download()\n\ntests/test_header.py:144: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/header_page.py:101: in redirected_the_link_training_video_download\n    element.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f23e6504490>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55ad3c8f1510 \\\\u003Cunknown>\\\\n#18 0x55ad3c901346 \\\\u003Cunknown>\\\\n#19 0x7f2aaac94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=131.0.6778.69)\nE       Stacktrace:\nE       #0 0x55ad3c9024ca <unknown>\nE       #1 0x55ad3c41547d <unknown>\nE       #2 0x55ad3c46546c <unknown>\nE       #3 0x55ad3c458ff5 <unknown>\nE       #4 0x55ad3c488372 <unknown>\nE       #5 0x55ad3c458938 <unknown>\nE       #6 0x55ad3c48853e <unknown>\nE       #7 0x55ad3c4a6de0 <unknown>\nE       #8 0x55ad3c488113 <unknown>\nE       #9 0x55ad3c456be0 <unknown>\nE       #10 0x55ad3c457bbe <unknown>\nE       #11 0x55ad3c8cee4b <unknown>\nE       #12 0x55ad3c8d2de2 <unknown>\nE       #13 0x55ad3c8bbd2c <unknown>\nE       #14 0x55ad3c8d3957 <unknown>\nE       #15 0x55ad3c8a14bf <unknown>\nE       #16 0x55ad3c8f1348 <unknown>\nE       #17 0x55ad3c8f1510 <unknown>\nE       #18 0x55ad3c901346 <unknown>\nE       #19 0x7f2aaac94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Open a browser","time":{"start":1731981251829,"stop":1731981253287,"duration":1458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Redirected the link \"Training - Video Download\"","time":{"start":1731981253288,"stop":1731981253686,"duration":398},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x55ad3c9024ca <unknown>\n#1 0x55ad3c41547d <unknown>\n#2 0x55ad3c46546c <unknown>\n#3 0x55ad3c458ff5 <unknown>\n#4 0x55ad3c488372 <unknown>\n#5 0x55ad3c458938 <unknown>\n#6 0x55ad3c48853e <unknown>\n#7 0x55ad3c4a6de0 <unknown>\n#8 0x55ad3c488113 <unknown>\n#9 0x55ad3c456be0 <unknown>\n#10 0x55ad3c457bbe <unknown>\n#11 0x55ad3c8cee4b <unknown>\n#12 0x55ad3c8d2de2 <unknown>\n#13 0x55ad3c8bbd2c <unknown>\n#14 0x55ad3c8d3957 <unknown>\n#15 0x55ad3c8a14bf <unknown>\n#16 0x55ad3c8f1348 <unknown>\n#17 0x55ad3c8f1510 <unknown>\n#18 0x55ad3c901346 <unknown>\n#19 0x7f2aaac94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/header_page.py\", line 101, in redirected_the_link_training_video_download\n    element.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1731981253288,"stop":1731981253333,"duration":45},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1731981253288,"stop":1731981253310,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('id', 'ui-id-7')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1731981253310,"stop":1731981253314,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"821d8d1914ca902bbd84d8c8a64457c0\", element=\"f.994495F50FCE40BC228C0C1BA4EAD413.d.4CFFC1FD40F7044FA737297ED21ED7D1.e.23\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('id', 'ui-id-7')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check element hover style","time":{"start":1731981253334,"stop":1731981253647,"duration":313},"status":"passed","steps":[{"name":"Find a visible element","time":{"start":1731981253334,"stop":1731981253361,"duration":27},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1731981253334,"stop":1731981253340,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('id', 'ui-id-7')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1731981253340,"stop":1731981253345,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"821d8d1914ca902bbd84d8c8a64457c0\", element=\"f.994495F50FCE40BC228C0C1BA4EAD413.d.4CFFC1FD40F7044FA737297ED21ED7D1.e.23\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('id', 'ui-id-7')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Move cursor to element","time":{"start":1731981253361,"stop":1731981253636,"duration":275},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"821d8d1914ca902bbd84d8c8a64457c0\", element=\"f.994495F50FCE40BC228C0C1BA4EAD413.d.4CFFC1FD40F7044FA737297ED21ED7D1.e.23\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('id', 'ui-id-7')"},{"name":"css_property","value":"'pointer'"},{"name":"seconds","value":"1"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Find a present element","time":{"start":1731981253647,"stop":1731981253660,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('id', 'ui-id-28')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"556de56e4d15293f","name":"Screenshot","source":"556de56e4d15293f.png","type":"image/png","size":635517},{"uid":"afc6aae37b715ecc","name":"HTML source","source":"afc6aae37b715ecc.html","type":"text/html","size":193861}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1731981254026,"stop":1731981254103,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1731983827070,"stop":1731983827070,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Header"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_header"},{"name":"subSuite","value":"TestHeader"},{"name":"host","value":"fv-az695-395"},{"name":"thread","value":"2792-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_header"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"d59b5cd6113887dc","reportUrl":"https://verafes.github.io/luma_project/498//#testresult/d59b5cd6113887dc","status":"passed","time":{"start":1731894740986,"stop":1731894745409,"duration":4423}},{"uid":"a358834e54dc16a2","reportUrl":"https://verafes.github.io/luma_project/497//#testresult/a358834e54dc16a2","status":"passed","time":{"start":1731808420146,"stop":1731808423992,"duration":3846}}]},"tags":[]},"source":"c519380edbe323e3.json","parameterValues":[]}