{
  "uid" : "425f55e93cebcb10",
  "name" : "TC 01.03.21 correctness of the \"Tees\" link of the \"Men\" section",
  "fullName" : "tests.test_header.TestHeader#test_tc_01_03_21_correctness_of_tees_men_section_link",
  "historyId" : "89beedecd63b905f4862543af624d59e",
  "time" : {
    "start" : 1729994870039,
    "stop" : 1729995170057,
    "duration" : 300018
  },
  "description" : "Check 'Tees' subsection link click in 'Men' section redirects to the Tees-men page and         the 'Tees' header is displayed",
  "descriptionHtml" : "<p>Check 'Tees' subsection link click in 'Men' section redirects to the Tees-men page and         the 'Tees' header is displayed</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.793\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55bd3f6f60aa <unknown>\n#1 0x55bd3f20d1a0 <unknown>\n#2 0x55bd3f1f5840 <unknown>\n#3 0x55bd3f1f552d <unknown>\n#4 0x55bd3f1f35bc <unknown>\n#5 0x55bd3f1f3d6f <unknown>\n#6 0x55bd3f2031d7 <unknown>\n#7 0x55bd3f2191e4 <unknown>\n#8 0x55bd3f21e51b <unknown>\n#9 0x55bd3f1f447e <unknown>\n#10 0x55bd3f218fee <unknown>\n#11 0x55bd3f29cacb <unknown>\n#12 0x55bd3f27db23 <unknown>\n#13 0x55bd3f24c990 <unknown>\n#14 0x55bd3f24d96e <unknown>\n#15 0x55bd3f6c216b <unknown>\n#16 0x55bd3f6c5f68 <unknown>\n#17 0x55bd3f6af64c <unknown>\n#18 0x55bd3f6c6ae7 <unknown>\n#19 0x55bd3f6944af <unknown>\n#20 0x55bd3f6e44f8 <unknown>\n#21 0x55bd3f6e46c0 <unknown>\n#22 0x55bd3f6f4f26 <unknown>\n#23 0x7fbb2e494ac3 <unknown>",
  "statusTrace" : "self = <test_header.TestHeader object at 0x7fc6ec79bcd0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4617b47758a856a14e2daee0a85ad1e0\")>\n\n    @allure.title('TC 01.03.21 correctness of the \"Tees\" link of the \"Men\" section')\n    def test_tc_01_03_21_correctness_of_tees_men_section_link(self, driver):\n        \"\"\"Check 'Tees' subsection link click in 'Men' section redirects to the Tees-men page and \\\n        the 'Tees' header is displayed\"\"\"\n        page = HeaderPage(driver, MAIN_PAGE_URL)\n>       page.open()\n\ntests/test_header.py:372: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc6edeaeed0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x55bd3f6e46c0 \\\\u003Cunknown>\\\\n#22 0x55bd3f6f4f26 \\\\u003Cunknown>\\\\n#23 0x7fbb2e494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.793\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x55bd3f6f60aa <unknown>\nE       #1 0x55bd3f20d1a0 <unknown>\nE       #2 0x55bd3f1f5840 <unknown>\nE       #3 0x55bd3f1f552d <unknown>\nE       #4 0x55bd3f1f35bc <unknown>\nE       #5 0x55bd3f1f3d6f <unknown>\nE       #6 0x55bd3f2031d7 <unknown>\nE       #7 0x55bd3f2191e4 <unknown>\nE       #8 0x55bd3f21e51b <unknown>\nE       #9 0x55bd3f1f447e <unknown>\nE       #10 0x55bd3f218fee <unknown>\nE       #11 0x55bd3f29cacb <unknown>\nE       #12 0x55bd3f27db23 <unknown>\nE       #13 0x55bd3f24c990 <unknown>\nE       #14 0x55bd3f24d96e <unknown>\nE       #15 0x55bd3f6c216b <unknown>\nE       #16 0x55bd3f6c5f68 <unknown>\nE       #17 0x55bd3f6af64c <unknown>\nE       #18 0x55bd3f6c6ae7 <unknown>\nE       #19 0x55bd3f6944af <unknown>\nE       #20 0x55bd3f6e44f8 <unknown>\nE       #21 0x55bd3f6e46c0 <unknown>\nE       #22 0x55bd3f6f4f26 <unknown>\nE       #23 0x7fbb2e494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1729994868769,
      "stop" : 1729994870038,
      "duration" : 1269
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_result_folder",
    "time" : {
      "start" : 1729993092064,
      "stop" : 1729993092065,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1729993092000,
      "stop" : 1729993092064,
      "duration" : 64
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Check 'Tees' subsection link click in 'Men' section redirects to the Tees-men page and         the 'Tees' header is displayed",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.793\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55bd3f6f60aa <unknown>\n#1 0x55bd3f20d1a0 <unknown>\n#2 0x55bd3f1f5840 <unknown>\n#3 0x55bd3f1f552d <unknown>\n#4 0x55bd3f1f35bc <unknown>\n#5 0x55bd3f1f3d6f <unknown>\n#6 0x55bd3f2031d7 <unknown>\n#7 0x55bd3f2191e4 <unknown>\n#8 0x55bd3f21e51b <unknown>\n#9 0x55bd3f1f447e <unknown>\n#10 0x55bd3f218fee <unknown>\n#11 0x55bd3f29cacb <unknown>\n#12 0x55bd3f27db23 <unknown>\n#13 0x55bd3f24c990 <unknown>\n#14 0x55bd3f24d96e <unknown>\n#15 0x55bd3f6c216b <unknown>\n#16 0x55bd3f6c5f68 <unknown>\n#17 0x55bd3f6af64c <unknown>\n#18 0x55bd3f6c6ae7 <unknown>\n#19 0x55bd3f6944af <unknown>\n#20 0x55bd3f6e44f8 <unknown>\n#21 0x55bd3f6e46c0 <unknown>\n#22 0x55bd3f6f4f26 <unknown>\n#23 0x7fbb2e494ac3 <unknown>",
    "statusTrace" : "self = <test_header.TestHeader object at 0x7fc6ec79bcd0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4617b47758a856a14e2daee0a85ad1e0\")>\n\n    @allure.title('TC 01.03.21 correctness of the \"Tees\" link of the \"Men\" section')\n    def test_tc_01_03_21_correctness_of_tees_men_section_link(self, driver):\n        \"\"\"Check 'Tees' subsection link click in 'Men' section redirects to the Tees-men page and \\\n        the 'Tees' header is displayed\"\"\"\n        page = HeaderPage(driver, MAIN_PAGE_URL)\n>       page.open()\n\ntests/test_header.py:372: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc6edeaeed0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x55bd3f6e46c0 \\\\u003Cunknown>\\\\n#22 0x55bd3f6f4f26 \\\\u003Cunknown>\\\\n#23 0x7fbb2e494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.793\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x55bd3f6f60aa <unknown>\nE       #1 0x55bd3f20d1a0 <unknown>\nE       #2 0x55bd3f1f5840 <unknown>\nE       #3 0x55bd3f1f552d <unknown>\nE       #4 0x55bd3f1f35bc <unknown>\nE       #5 0x55bd3f1f3d6f <unknown>\nE       #6 0x55bd3f2031d7 <unknown>\nE       #7 0x55bd3f2191e4 <unknown>\nE       #8 0x55bd3f21e51b <unknown>\nE       #9 0x55bd3f1f447e <unknown>\nE       #10 0x55bd3f218fee <unknown>\nE       #11 0x55bd3f29cacb <unknown>\nE       #12 0x55bd3f27db23 <unknown>\nE       #13 0x55bd3f24c990 <unknown>\nE       #14 0x55bd3f24d96e <unknown>\nE       #15 0x55bd3f6c216b <unknown>\nE       #16 0x55bd3f6c5f68 <unknown>\nE       #17 0x55bd3f6af64c <unknown>\nE       #18 0x55bd3f6c6ae7 <unknown>\nE       #19 0x55bd3f6944af <unknown>\nE       #20 0x55bd3f6e44f8 <unknown>\nE       #21 0x55bd3f6e46c0 <unknown>\nE       #22 0x55bd3f6f4f26 <unknown>\nE       #23 0x7fbb2e494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException",
    "steps" : [ {
      "name" : "Open a browser",
      "time" : {
        "start" : 1729994870039,
        "stop" : 1729995170057,
        "duration" : 300018
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.793\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55bd3f6f60aa <unknown>\n#1 0x55bd3f20d1a0 <unknown>\n#2 0x55bd3f1f5840 <unknown>\n#3 0x55bd3f1f552d <unknown>\n#4 0x55bd3f1f35bc <unknown>\n#5 0x55bd3f1f3d6f <unknown>\n#6 0x55bd3f2031d7 <unknown>\n#7 0x55bd3f2191e4 <unknown>\n#8 0x55bd3f21e51b <unknown>\n#9 0x55bd3f1f447e <unknown>\n#10 0x55bd3f218fee <unknown>\n#11 0x55bd3f29cacb <unknown>\n#12 0x55bd3f27db23 <unknown>\n#13 0x55bd3f24c990 <unknown>\n#14 0x55bd3f24d96e <unknown>\n#15 0x55bd3f6c216b <unknown>\n#16 0x55bd3f6c5f68 <unknown>\n#17 0x55bd3f6af64c <unknown>\n#18 0x55bd3f6c6ae7 <unknown>\n#19 0x55bd3f6944af <unknown>\n#20 0x55bd3f6e44f8 <unknown>\n#21 0x55bd3f6e46c0 <unknown>\n#22 0x55bd3f6f4f26 <unknown>\n#23 0x7fbb2e494ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 19, in open\n    self.driver.get(self.url)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1729995470101,
      "stop" : 1729995470207,
      "duration" : 106
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_result_folder::0",
    "time" : {
      "start" : 1729999808072,
      "stop" : 1729999808072,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Header"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_header"
  }, {
    "name" : "subSuite",
    "value" : "TestHeader"
  }, {
    "name" : "host",
    "value" : "fv-az841-46"
  }, {
    "name" : "thread",
    "value" : "2812-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_header"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "425f55e93cebcb10.json",
  "parameterValues" : [ ]
}