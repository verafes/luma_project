{
  "uid" : "9dfd11c9b6fba6f9",
  "name" : "TC 01_15_01 Verify possibility to vote with 4 stars",
  "fullName" : "tests.test_reviews_page.TestReviews#test_tc_01_15_04_check_that_it_is_possible_to_vote_for_4_star",
  "historyId" : "35f5c2973e4c2aa675f5aa7de8684c7e",
  "time" : {
    "start" : 1737856312075,
    "stop" : 1737856317480,
    "duration" : 5405
  },
  "description" : "\n        The user is NOT logged in, located in the product card, section \"Reviews\"\n        1. All required fields are filled with correct data\n        2. Pressed 4 star\n        3.The \"Submit Review\" button is pressed\n        Result: Present in the DOM and visible on the page the message: \"You submitted your review for moderation.\n        This code works when run on Win, Mac, Ubuntu on a real laptop and has the features of working on GitHub Action.\n        When interacting with the GitHub Action, it checks not for the text of the \"Success\" message, but for the \"Success\" URL\"\n        ",
  "descriptionHtml" : "<pre><code>    The user is NOT logged in, located in the product card, section &quot;Reviews&quot;\n    1. All required fields are filled with correct data\n    2. Pressed 4 star\n    3.The &quot;Submit Review&quot; button is pressed\n    Result: Present in the DOM and visible on the page the message: &quot;You submitted your review for moderation.\n    This code works when run on Win, Mac, Ubuntu on a real laptop and has the features of working on GitHub Action.\n    When interacting with the GitHub Action, it checks not for the text of the &quot;Success&quot; message, but for the &quot;Success&quot; URL&quot;\n</code></pre>\n",
  "status" : "skipped",
  "statusMessage" : "XFAIL Flaky behavior on CI\n\nselenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d1ede267ca <unknown>\n#1 0x55d1ed91e2f0 <unknown>\n#2 0x55d1ed96e035 <unknown>\n#3 0x55d1ed96e251 <unknown>\n#4 0x55d1ed9b4054 <unknown>\n#5 0x55d1ed9929dd <unknown>\n#6 0x55d1ed9b13b3 <unknown>\n#7 0x55d1ed992753 <unknown>\n#8 0x55d1ed95fbaa <unknown>\n#9 0x55d1ed960dfe <unknown>\n#10 0x55d1eddf138b <unknown>\n#11 0x55d1eddf5307 <unknown>\n#12 0x55d1edddde7c <unknown>\n#13 0x55d1eddf5ec7 <unknown>\n#14 0x55d1eddc224f <unknown>\n#15 0x55d1ede152f8 <unknown>\n#16 0x55d1ede154c0 <unknown>\n#17 0x55d1ede25646 <unknown>\n#18 0x7f2adf49ca94 <unknown>\n#19 0x7f2adf529c3c <unknown>",
  "statusTrace" : "self = <test_reviews_page.TestReviews object at 0x7fc2e818c490>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"84abdf0be21eb6f7db9c521fff64ad06\")>\n\n    @pytest.mark.xfail(reason=\"Flaky behavior on CI\")\n    @allure.title('TC 01_15_01 Verify possibility to vote with 4 stars')\n    def test_tc_01_15_04_check_that_it_is_possible_to_vote_for_4_star(self, driver):\n        \"\"\"\n        The user is NOT logged in, located in the product card, section \"Reviews\"\n        1. All required fields are filled with correct data\n        2. Pressed 4 star\n        3.The \"Submit Review\" button is pressed\n        Result: Present in the DOM and visible on the page the message: \"You submitted your review for moderation.\n        This code works when run on Win, Mac, Ubuntu on a real laptop and has the features of working on GitHub Action.\n        When interacting with the GitHub Action, it checks not for the text of the \"Success\" message, but for the \"Success\" URL\"\n        \"\"\"\n    \n        \"\"\"Steps\"\"\"\n        page = ReviewsPage(driver, REVIEWS_URL_GENERAL)\n        page.open()\n    \n        \"\"\"Get the current URL and print it\"\"\"\n        page.get_the_current_URL_and_print_it()\n    \n        \"\"\"Steps\"\"\"\n>       page.open_review_menu()\n\ntests/test_reviews_page.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/reviews_page.py:14: in open_review_menu\n    review_menu = self.element_is_clickable(self.locators.REVIEW_MENU)\npages/base_page.py:80: in element_is_clickable\n    return wait(self.driver, timeout).until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"84abdf0be21eb6f7db9c521fff64ad06\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fc2e76e9580>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55d1ede267ca <unknown>\nE       #1 0x55d1ed91e2f0 <unknown>\nE       #2 0x55d1ed96e035 <unknown>\nE       #3 0x55d1ed96e251 <unknown>\nE       #4 0x55d1ed9b4054 <unknown>\nE       #5 0x55d1ed9929dd <unknown>\nE       #6 0x55d1ed9b13b3 <unknown>\nE       #7 0x55d1ed992753 <unknown>\nE       #8 0x55d1ed95fbaa <unknown>\nE       #9 0x55d1ed960dfe <unknown>\nE       #10 0x55d1eddf138b <unknown>\nE       #11 0x55d1eddf5307 <unknown>\nE       #12 0x55d1edddde7c <unknown>\nE       #13 0x55d1eddf5ec7 <unknown>\nE       #14 0x55d1eddc224f <unknown>\nE       #15 0x55d1ede152f8 <unknown>\nE       #16 0x55d1ede154c0 <unknown>\nE       #17 0x55d1ede25646 <unknown>\nE       #18 0x7f2adf49ca94 <unknown>\nE       #19 0x7f2adf529c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_result_folder",
    "time" : {
      "start" : 1737854757354,
      "stop" : 1737854757354,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1737854757290,
      "stop" : 1737854757353,
      "duration" : 63
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1737856310894,
      "stop" : 1737856312074,
      "duration" : 1180
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        The user is NOT logged in, located in the product card, section \"Reviews\"\n        1. All required fields are filled with correct data\n        2. Pressed 4 star\n        3.The \"Submit Review\" button is pressed\n        Result: Present in the DOM and visible on the page the message: \"You submitted your review for moderation.\n        This code works when run on Win, Mac, Ubuntu on a real laptop and has the features of working on GitHub Action.\n        When interacting with the GitHub Action, it checks not for the text of the \"Success\" message, but for the \"Success\" URL\"\n        ",
    "status" : "skipped",
    "statusMessage" : "XFAIL Flaky behavior on CI\n\nselenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d1ede267ca <unknown>\n#1 0x55d1ed91e2f0 <unknown>\n#2 0x55d1ed96e035 <unknown>\n#3 0x55d1ed96e251 <unknown>\n#4 0x55d1ed9b4054 <unknown>\n#5 0x55d1ed9929dd <unknown>\n#6 0x55d1ed9b13b3 <unknown>\n#7 0x55d1ed992753 <unknown>\n#8 0x55d1ed95fbaa <unknown>\n#9 0x55d1ed960dfe <unknown>\n#10 0x55d1eddf138b <unknown>\n#11 0x55d1eddf5307 <unknown>\n#12 0x55d1edddde7c <unknown>\n#13 0x55d1eddf5ec7 <unknown>\n#14 0x55d1eddc224f <unknown>\n#15 0x55d1ede152f8 <unknown>\n#16 0x55d1ede154c0 <unknown>\n#17 0x55d1ede25646 <unknown>\n#18 0x7f2adf49ca94 <unknown>\n#19 0x7f2adf529c3c <unknown>",
    "statusTrace" : "self = <test_reviews_page.TestReviews object at 0x7fc2e818c490>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"84abdf0be21eb6f7db9c521fff64ad06\")>\n\n    @pytest.mark.xfail(reason=\"Flaky behavior on CI\")\n    @allure.title('TC 01_15_01 Verify possibility to vote with 4 stars')\n    def test_tc_01_15_04_check_that_it_is_possible_to_vote_for_4_star(self, driver):\n        \"\"\"\n        The user is NOT logged in, located in the product card, section \"Reviews\"\n        1. All required fields are filled with correct data\n        2. Pressed 4 star\n        3.The \"Submit Review\" button is pressed\n        Result: Present in the DOM and visible on the page the message: \"You submitted your review for moderation.\n        This code works when run on Win, Mac, Ubuntu on a real laptop and has the features of working on GitHub Action.\n        When interacting with the GitHub Action, it checks not for the text of the \"Success\" message, but for the \"Success\" URL\"\n        \"\"\"\n    \n        \"\"\"Steps\"\"\"\n        page = ReviewsPage(driver, REVIEWS_URL_GENERAL)\n        page.open()\n    \n        \"\"\"Get the current URL and print it\"\"\"\n        page.get_the_current_URL_and_print_it()\n    \n        \"\"\"Steps\"\"\"\n>       page.open_review_menu()\n\ntests/test_reviews_page.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/reviews_page.py:14: in open_review_menu\n    review_menu = self.element_is_clickable(self.locators.REVIEW_MENU)\npages/base_page.py:80: in element_is_clickable\n    return wait(self.driver, timeout).until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"84abdf0be21eb6f7db9c521fff64ad06\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fc2e76e9580>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55d1ede267ca <unknown>\nE       #1 0x55d1ed91e2f0 <unknown>\nE       #2 0x55d1ed96e035 <unknown>\nE       #3 0x55d1ed96e251 <unknown>\nE       #4 0x55d1ed9b4054 <unknown>\nE       #5 0x55d1ed9929dd <unknown>\nE       #6 0x55d1ed9b13b3 <unknown>\nE       #7 0x55d1ed992753 <unknown>\nE       #8 0x55d1ed95fbaa <unknown>\nE       #9 0x55d1ed960dfe <unknown>\nE       #10 0x55d1eddf138b <unknown>\nE       #11 0x55d1eddf5307 <unknown>\nE       #12 0x55d1edddde7c <unknown>\nE       #13 0x55d1eddf5ec7 <unknown>\nE       #14 0x55d1eddc224f <unknown>\nE       #15 0x55d1ede152f8 <unknown>\nE       #16 0x55d1ede154c0 <unknown>\nE       #17 0x55d1ede25646 <unknown>\nE       #18 0x7f2adf49ca94 <unknown>\nE       #19 0x7f2adf529c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
    "steps" : [ {
      "name" : "Open a browser",
      "time" : {
        "start" : 1737856312075,
        "stop" : 1737856312354,
        "duration" : 279
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Find clickable elements",
      "time" : {
        "start" : 1737856312362,
        "stop" : 1737856317480,
        "duration" : 5118
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d1ede267ca <unknown>\n#1 0x55d1ed91e2f0 <unknown>\n#2 0x55d1ed96e035 <unknown>\n#3 0x55d1ed96e251 <unknown>\n#4 0x55d1ed9b4054 <unknown>\n#5 0x55d1ed9929dd <unknown>\n#6 0x55d1ed9b13b3 <unknown>\n#7 0x55d1ed992753 <unknown>\n#8 0x55d1ed95fbaa <unknown>\n#9 0x55d1ed960dfe <unknown>\n#10 0x55d1eddf138b <unknown>\n#11 0x55d1eddf5307 <unknown>\n#12 0x55d1edddde7c <unknown>\n#13 0x55d1eddf5ec7 <unknown>\n#14 0x55d1eddc224f <unknown>\n#15 0x55d1ede152f8 <unknown>\n#16 0x55d1ede154c0 <unknown>\n#17 0x55d1ede25646 <unknown>\n#18 0x7f2adf49ca94 <unknown>\n#19 0x7f2adf529c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 80, in element_is_clickable\n    return wait(self.driver, timeout).until(EC.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "locator",
        "value" : "('css selector', '#tab-label-reviews-title')"
      }, {
        "name" : "timeout",
        "value" : "5"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "67dc097cc82e069e",
      "name" : "Screenshot",
      "source" : "67dc097cc82e069e.png",
      "type" : "image/png",
      "size" : 25650
    }, {
      "uid" : "a4e7a5dbcd59da55",
      "name" : "HTML source",
      "source" : "a4e7a5dbcd59da55.html",
      "type" : "text/html",
      "size" : 258795
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "clear_allure_result_folder::0",
    "time" : {
      "start" : 1737857182853,
      "stop" : 1737857182853,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver::0",
    "time" : {
      "start" : 1737856317596,
      "stop" : 1737856317660,
      "duration" : 64
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Review Page"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='Flaky behavior on CI')"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_reviews_page"
  }, {
    "name" : "subSuite",
    "value" : "TestReviews"
  }, {
    "name" : "host",
    "value" : "fv-az1922-652"
  }, {
    "name" : "thread",
    "value" : "2797-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_reviews_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail(reason='Flaky behavior on CI')" ]
  },
  "source" : "9dfd11c9b6fba6f9.json",
  "parameterValues" : [ ]
}