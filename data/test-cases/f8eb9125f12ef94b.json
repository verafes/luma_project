{
  "uid" : "f8eb9125f12ef94b",
  "name" : "TC 02.03.01 - Check correct transfers by clicking on links in the footer",
  "fullName" : "tests.test_footer.TestFooter#test_tc_02_03_01_check_correct_transfers_by_clicking_on_links_in_the_footer",
  "historyId" : "d14653777b50b2939baad14d15279ecb",
  "time" : {
    "start" : 1707614115857,
    "stop" : 1707614116850,
    "duration" : 993
  },
  "description" : "Check that transfers between pages by clicking on links in the footer are correct",
  "descriptionHtml" : "<p>Check that transfers between pages by clicking on links in the footer are correct</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x558114aa7d93 <unknown>\n#1 0x55811478b337 <unknown>\n#2 0x5581147d81b9 <unknown>\n#3 0x5581147cb6b7 <unknown>\n#4 0x5581147f9442 <unknown>\n#5 0x5581147cb028 <unknown>\n#6 0x5581147f960e <unknown>\n#7 0x55811481812d <unknown>\n#8 0x5581147f91e3 <unknown>\n#9 0x5581147c9135 <unknown>\n#10 0x5581147ca13e <unknown>\n#11 0x558114a6be4b <unknown>\n#12 0x558114a6fdfa <unknown>\n#13 0x558114a586d5 <unknown>\n#14 0x558114a70a6f <unknown>\n#15 0x558114a3c69f <unknown>\n#16 0x558114a95098 <unknown>\n#17 0x558114a95262 <unknown>\n#18 0x558114aa6f34 <unknown>\n#19 0x7f0a58294ac3 <unknown>",
  "statusTrace" : "self = <test_footer.TestFooter object at 0x7f4e6057c690>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"128992d5b3bfe627d4acf98cee2b0e5c\")>\n\n    @allure.title(\"TC 02.03.01 - Check correct transfers by clicking on links in the footer\")\n    def test_tc_02_03_01_check_correct_transfers_by_clicking_on_links_in_the_footer(self, driver):\n        \"\"\"Check that transfers between pages by clicking on links in the footer are correct\"\"\"\n        page = FooterPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:592: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4e5edf8750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x558114a95262 \\\\u003Cunknown>\\\\n#18 0x558114aa6f34 \\\\u003Cunknown>\\\\n#19 0x7f0a58294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.139)\nE       Stacktrace:\nE       #0 0x558114aa7d93 <unknown>\nE       #1 0x55811478b337 <unknown>\nE       #2 0x5581147d81b9 <unknown>\nE       #3 0x5581147cb6b7 <unknown>\nE       #4 0x5581147f9442 <unknown>\nE       #5 0x5581147cb028 <unknown>\nE       #6 0x5581147f960e <unknown>\nE       #7 0x55811481812d <unknown>\nE       #8 0x5581147f91e3 <unknown>\nE       #9 0x5581147c9135 <unknown>\nE       #10 0x5581147ca13e <unknown>\nE       #11 0x558114a6be4b <unknown>\nE       #12 0x558114a6fdfa <unknown>\nE       #13 0x558114a586d5 <unknown>\nE       #14 0x558114a70a6f <unknown>\nE       #15 0x558114a3c69f <unknown>\nE       #16 0x558114a95098 <unknown>\nE       #17 0x558114a95262 <unknown>\nE       #18 0x558114aa6f34 <unknown>\nE       #19 0x7f0a58294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707613764728,
      "stop" : 1707613764790,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_result_folder",
    "time" : {
      "start" : 1707613764790,
      "stop" : 1707613764791,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1707614114904,
      "stop" : 1707614115856,
      "duration" : 952
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Check that transfers between pages by clicking on links in the footer are correct",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x558114aa7d93 <unknown>\n#1 0x55811478b337 <unknown>\n#2 0x5581147d81b9 <unknown>\n#3 0x5581147cb6b7 <unknown>\n#4 0x5581147f9442 <unknown>\n#5 0x5581147cb028 <unknown>\n#6 0x5581147f960e <unknown>\n#7 0x55811481812d <unknown>\n#8 0x5581147f91e3 <unknown>\n#9 0x5581147c9135 <unknown>\n#10 0x5581147ca13e <unknown>\n#11 0x558114a6be4b <unknown>\n#12 0x558114a6fdfa <unknown>\n#13 0x558114a586d5 <unknown>\n#14 0x558114a70a6f <unknown>\n#15 0x558114a3c69f <unknown>\n#16 0x558114a95098 <unknown>\n#17 0x558114a95262 <unknown>\n#18 0x558114aa6f34 <unknown>\n#19 0x7f0a58294ac3 <unknown>",
    "statusTrace" : "self = <test_footer.TestFooter object at 0x7f4e6057c690>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"128992d5b3bfe627d4acf98cee2b0e5c\")>\n\n    @allure.title(\"TC 02.03.01 - Check correct transfers by clicking on links in the footer\")\n    def test_tc_02_03_01_check_correct_transfers_by_clicking_on_links_in_the_footer(self, driver):\n        \"\"\"Check that transfers between pages by clicking on links in the footer are correct\"\"\"\n        page = FooterPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:592: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4e5edf8750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x558114a95262 \\\\u003Cunknown>\\\\n#18 0x558114aa6f34 \\\\u003Cunknown>\\\\n#19 0x7f0a58294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.139)\nE       Stacktrace:\nE       #0 0x558114aa7d93 <unknown>\nE       #1 0x55811478b337 <unknown>\nE       #2 0x5581147d81b9 <unknown>\nE       #3 0x5581147cb6b7 <unknown>\nE       #4 0x5581147f9442 <unknown>\nE       #5 0x5581147cb028 <unknown>\nE       #6 0x5581147f960e <unknown>\nE       #7 0x55811481812d <unknown>\nE       #8 0x5581147f91e3 <unknown>\nE       #9 0x5581147c9135 <unknown>\nE       #10 0x5581147ca13e <unknown>\nE       #11 0x558114a6be4b <unknown>\nE       #12 0x558114a6fdfa <unknown>\nE       #13 0x558114a586d5 <unknown>\nE       #14 0x558114a70a6f <unknown>\nE       #15 0x558114a3c69f <unknown>\nE       #16 0x558114a95098 <unknown>\nE       #17 0x558114a95262 <unknown>\nE       #18 0x558114aa6f34 <unknown>\nE       #19 0x7f0a58294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException",
    "steps" : [ {
      "name" : "Open a browser",
      "time" : {
        "start" : 1707614115857,
        "stop" : 1707614116695,
        "duration" : 838
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Check Search Terms link leads to the correct page",
      "time" : {
        "start" : 1707614116696,
        "stop" : 1707614116850,
        "duration" : 154
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x558114aa7d93 <unknown>\n#1 0x55811478b337 <unknown>\n#2 0x5581147d81b9 <unknown>\n#3 0x5581147cb6b7 <unknown>\n#4 0x5581147f9442 <unknown>\n#5 0x5581147cb028 <unknown>\n#6 0x5581147f960e <unknown>\n#7 0x55811481812d <unknown>\n#8 0x5581147f91e3 <unknown>\n#9 0x5581147c9135 <unknown>\n#10 0x5581147ca13e <unknown>\n#11 0x558114a6be4b <unknown>\n#12 0x558114a6fdfa <unknown>\n#13 0x558114a586d5 <unknown>\n#14 0x558114a70a6f <unknown>\n#15 0x558114a3c69f <unknown>\n#16 0x558114a95098 <unknown>\n#17 0x558114a95262 <unknown>\n#18 0x558114aa6f34 <unknown>\n#19 0x7f0a58294ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/footer_page.py\", line 279, in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "Find a visible element",
        "time" : {
          "start" : 1707614116696,
          "stop" : 1707614116764,
          "duration" : 68
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Find a present element",
          "time" : {
            "start" : 1707614116696,
            "stop" : 1707614116722,
            "duration" : 26
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('css selector', '.footer > :nth-child(1) > a')"
          }, {
            "name" : "timeout",
            "value" : "5"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "Go to specified element",
          "time" : {
            "start" : 1707614116722,
            "stop" : 1707614116727,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "element",
            "value" : "<selenium.webdriver.remote.webelement.WebElement (session=\"128992d5b3bfe627d4acf98cee2b0e5c\", element=\"A7F9DB7B2708DB599428F72F82D5B994_element_15\")>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "locator",
          "value" : "('css selector', '.footer > :nth-child(1) > a')"
        }, {
          "name" : "timeout",
          "value" : "10"
        } ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "492ac17539b294ba",
      "name" : "Screenshot",
      "source" : "492ac17539b294ba.png",
      "type" : "image/png",
      "size" : 131690
    }, {
      "uid" : "a59ebbab1d339264",
      "name" : "HTML source",
      "source" : "a59ebbab1d339264.html",
      "type" : "text/html",
      "size" : 110847
    } ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "clear_allure_result_folder::0",
    "time" : {
      "start" : 1707615033978,
      "stop" : 1707615033978,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver::0",
    "time" : {
      "start" : 1707614117049,
      "stop" : 1707614117116,
      "duration" : 67
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Footer"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_footer"
  }, {
    "name" : "subSuite",
    "value" : "TestFooter"
  }, {
    "name" : "host",
    "value" : "fv-az1118-65"
  }, {
    "name" : "thread",
    "value" : "3041-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_footer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f8eb9125f12ef94b.json",
  "parameterValues" : [ ]
}