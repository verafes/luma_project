{
  "uid" : "f00bdee867d67fa4",
  "name" : "TC 03.02.02 to 03_02_10 Verify Error on Failed Login with invalid credentials",
  "fullName" : "tests.test_sign_in.TestFailedLogin#test_03_02_02_to_10_error_if_login_with_invalid_credentials",
  "historyId" : "696b047bb5f6298fa4c944ee92db30be",
  "time" : {
    "start" : 1729389908637,
    "stop" : 1729389910059,
    "duration" : 1422
  },
  "description" : "Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces",
  "descriptionHtml" : "<p>Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x562170c420aa <unknown>\n#1 0x5621707591a0 <unknown>\n#2 0x5621707ac896 <unknown>\n#3 0x5621707aa82d <unknown>\n#4 0x5621707a82d7 <unknown>\n#5 0x5621707a76f1 <unknown>\n#6 0x56217079acf8 <unknown>\n#7 0x5621707c9d82 <unknown>\n#8 0x56217079a6d8 <unknown>\n#9 0x5621707c9f4e <unknown>\n#10 0x5621707e8866 <unknown>\n#11 0x5621707c9b23 <unknown>\n#12 0x562170798990 <unknown>\n#13 0x56217079996e <unknown>\n#14 0x562170c0e16b <unknown>\n#15 0x562170c11f68 <unknown>\n#16 0x562170bfb64c <unknown>\n#17 0x562170c12ae7 <unknown>\n#18 0x562170be04af <unknown>\n#19 0x562170c304f8 <unknown>\n#20 0x562170c306c0 <unknown>\n#21 0x562170c40f26 <unknown>\n#22 0x7f29a1c94ac3 <unknown>",
  "statusTrace" : "self = <test_sign_in.TestFailedLogin object at 0x7f974a01b4d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8b089bc8c2aa3f56f36a33c7c9a1f4e9\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f9749edaa50>\nemail = 'teston120@mailinator.com', password = 'Test#12p@ssword '\n\n    @allure.title('TC 03.02.02 to 03_02_10 Verify Error on Failed Login with invalid credentials')\n    @pytest.mark.parametrize('email, password', [LOGIN[i] for i in [1, 2, 6, 8, 9]])\n    def test_03_02_02_to_10_error_if_login_with_invalid_credentials(self, driver, sign_in_page, email, password):\n        \"\"\"Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces\"\"\"\n        sign_in_page.fill_in_email_field(email)\n>       sign_in_page.fill_in_password_field(password)\n\ntests/test_sign_in.py:272: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:88: in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9749eda950>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x562170c306c0 \\\\u003Cunknown>\\\\n#21 0x562170c40f26 \\\\u003Cunknown>\\\\n#22 0x7f29a1c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x562170c420aa <unknown>\nE       #1 0x5621707591a0 <unknown>\nE       #2 0x5621707ac896 <unknown>\nE       #3 0x5621707aa82d <unknown>\nE       #4 0x5621707a82d7 <unknown>\nE       #5 0x5621707a76f1 <unknown>\nE       #6 0x56217079acf8 <unknown>\nE       #7 0x5621707c9d82 <unknown>\nE       #8 0x56217079a6d8 <unknown>\nE       #9 0x5621707c9f4e <unknown>\nE       #10 0x5621707e8866 <unknown>\nE       #11 0x5621707c9b23 <unknown>\nE       #12 0x562170798990 <unknown>\nE       #13 0x56217079996e <unknown>\nE       #14 0x562170c0e16b <unknown>\nE       #15 0x562170c11f68 <unknown>\nE       #16 0x562170bfb64c <unknown>\nE       #17 0x562170c12ae7 <unknown>\nE       #18 0x562170be04af <unknown>\nE       #19 0x562170c304f8 <unknown>\nE       #20 0x562170c306c0 <unknown>\nE       #21 0x562170c40f26 <unknown>\nE       #22 0x7f29a1c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_result_folder",
    "time" : {
      "start" : 1729388330700,
      "stop" : 1729388330701,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "sign_in_page",
    "time" : {
      "start" : 1729389906746,
      "stop" : 1729389908637,
      "duration" : 1891
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open a browser",
      "time" : {
        "start" : 1729389906746,
        "stop" : 1729389908636,
        "duration" : 1890
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 1
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1729389905489,
      "stop" : 1729389906746,
      "duration" : 1257
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1729388330640,
      "stop" : 1729388330700,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x562170c420aa <unknown>\n#1 0x5621707591a0 <unknown>\n#2 0x5621707ac896 <unknown>\n#3 0x5621707aa82d <unknown>\n#4 0x5621707a82d7 <unknown>\n#5 0x5621707a76f1 <unknown>\n#6 0x56217079acf8 <unknown>\n#7 0x5621707c9d82 <unknown>\n#8 0x56217079a6d8 <unknown>\n#9 0x5621707c9f4e <unknown>\n#10 0x5621707e8866 <unknown>\n#11 0x5621707c9b23 <unknown>\n#12 0x562170798990 <unknown>\n#13 0x56217079996e <unknown>\n#14 0x562170c0e16b <unknown>\n#15 0x562170c11f68 <unknown>\n#16 0x562170bfb64c <unknown>\n#17 0x562170c12ae7 <unknown>\n#18 0x562170be04af <unknown>\n#19 0x562170c304f8 <unknown>\n#20 0x562170c306c0 <unknown>\n#21 0x562170c40f26 <unknown>\n#22 0x7f29a1c94ac3 <unknown>",
    "statusTrace" : "self = <test_sign_in.TestFailedLogin object at 0x7f974a01b4d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8b089bc8c2aa3f56f36a33c7c9a1f4e9\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f9749edaa50>\nemail = 'teston120@mailinator.com', password = 'Test#12p@ssword '\n\n    @allure.title('TC 03.02.02 to 03_02_10 Verify Error on Failed Login with invalid credentials')\n    @pytest.mark.parametrize('email, password', [LOGIN[i] for i in [1, 2, 6, 8, 9]])\n    def test_03_02_02_to_10_error_if_login_with_invalid_credentials(self, driver, sign_in_page, email, password):\n        \"\"\"Check error on Failed Login with invalid credentials, case-sensitive password and password with spaces\"\"\"\n        sign_in_page.fill_in_email_field(email)\n>       sign_in_page.fill_in_password_field(password)\n\ntests/test_sign_in.py:272: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:88: in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9749eda950>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x562170c306c0 \\\\u003Cunknown>\\\\n#21 0x562170c40f26 \\\\u003Cunknown>\\\\n#22 0x7f29a1c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x562170c420aa <unknown>\nE       #1 0x5621707591a0 <unknown>\nE       #2 0x5621707ac896 <unknown>\nE       #3 0x5621707aa82d <unknown>\nE       #4 0x5621707a82d7 <unknown>\nE       #5 0x5621707a76f1 <unknown>\nE       #6 0x56217079acf8 <unknown>\nE       #7 0x5621707c9d82 <unknown>\nE       #8 0x56217079a6d8 <unknown>\nE       #9 0x5621707c9f4e <unknown>\nE       #10 0x5621707e8866 <unknown>\nE       #11 0x5621707c9b23 <unknown>\nE       #12 0x562170798990 <unknown>\nE       #13 0x56217079996e <unknown>\nE       #14 0x562170c0e16b <unknown>\nE       #15 0x562170c11f68 <unknown>\nE       #16 0x562170bfb64c <unknown>\nE       #17 0x562170c12ae7 <unknown>\nE       #18 0x562170be04af <unknown>\nE       #19 0x562170c304f8 <unknown>\nE       #20 0x562170c306c0 <unknown>\nE       #21 0x562170c40f26 <unknown>\nE       #22 0x7f29a1c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException",
    "steps" : [ {
      "name" : "Fill in Email field",
      "time" : {
        "start" : 1729389908638,
        "stop" : 1729389908934,
        "duration" : 296
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check Email field is clickable",
        "time" : {
          "start" : 1729389908638,
          "stop" : 1729389908691,
          "duration" : 53
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Find clickable elements",
          "time" : {
            "start" : 1729389908638,
            "stop" : 1729389908691,
            "duration" : 53
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('css selector', '#email')"
          }, {
            "name" : "timeout",
            "value" : "5"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 1
      }, {
        "name" : "Fill in a field",
        "time" : {
          "start" : 1729389908691,
          "stop" : 1729389908934,
          "duration" : 243
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Find clickable elements",
          "time" : {
            "start" : 1729389908691,
            "stop" : 1729389908711,
            "duration" : 20
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "<selenium.webdriver.remote.webelement.WebElement (session=\"8b089bc8c2aa3f56f36a33c7c9a1f4e9\", element=\"f.A299AB2AA10B7051B666673F2A1D80DC.d.29273F67C03933F0EE073C9C4BDF53CF.e.3\")>"
          }, {
            "name" : "timeout",
            "value" : "5"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "locator",
          "value" : "<selenium.webdriver.remote.webelement.WebElement (session=\"8b089bc8c2aa3f56f36a33c7c9a1f4e9\", element=\"f.A299AB2AA10B7051B666673F2A1D80DC.d.29273F67C03933F0EE073C9C4BDF53CF.e.3\")>"
        }, {
          "name" : "value",
          "value" : "'teston120@mailinator.com'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 1
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "email",
        "value" : "'teston120@mailinator.com'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 4
    }, {
      "name" : "Fill in Password field",
      "time" : {
        "start" : 1729389908934,
        "stop" : 1729389910058,
        "duration" : 1124
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x562170c420aa <unknown>\n#1 0x5621707591a0 <unknown>\n#2 0x5621707ac896 <unknown>\n#3 0x5621707aa82d <unknown>\n#4 0x5621707a82d7 <unknown>\n#5 0x5621707a76f1 <unknown>\n#6 0x56217079acf8 <unknown>\n#7 0x5621707c9d82 <unknown>\n#8 0x56217079a6d8 <unknown>\n#9 0x5621707c9f4e <unknown>\n#10 0x5621707e8866 <unknown>\n#11 0x5621707c9b23 <unknown>\n#12 0x562170798990 <unknown>\n#13 0x56217079996e <unknown>\n#14 0x562170c0e16b <unknown>\n#15 0x562170c11f68 <unknown>\n#16 0x562170bfb64c <unknown>\n#17 0x562170c12ae7 <unknown>\n#18 0x562170be04af <unknown>\n#19 0x562170c304f8 <unknown>\n#20 0x562170c306c0 <unknown>\n#21 0x562170c40f26 <unknown>\n#22 0x7f29a1c94ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 88, in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "Check Password field is clickable",
        "time" : {
          "start" : 1729389908934,
          "stop" : 1729389908955,
          "duration" : 21
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Find clickable elements",
          "time" : {
            "start" : 1729389908934,
            "stop" : 1729389908955,
            "duration" : 21
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('css selector', '#pass')"
          }, {
            "name" : "timeout",
            "value" : "5"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 1
      }, {
        "name" : "Fill in a field",
        "time" : {
          "start" : 1729389908955,
          "stop" : 1729389910058,
          "duration" : 1103
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x562170c420aa <unknown>\n#1 0x5621707591a0 <unknown>\n#2 0x5621707ac896 <unknown>\n#3 0x5621707aa82d <unknown>\n#4 0x5621707a82d7 <unknown>\n#5 0x5621707a76f1 <unknown>\n#6 0x56217079acf8 <unknown>\n#7 0x5621707c9d82 <unknown>\n#8 0x56217079a6d8 <unknown>\n#9 0x5621707c9f4e <unknown>\n#10 0x5621707e8866 <unknown>\n#11 0x5621707c9b23 <unknown>\n#12 0x562170798990 <unknown>\n#13 0x56217079996e <unknown>\n#14 0x562170c0e16b <unknown>\n#15 0x562170c11f68 <unknown>\n#16 0x562170bfb64c <unknown>\n#17 0x562170c12ae7 <unknown>\n#18 0x562170be04af <unknown>\n#19 0x562170c304f8 <unknown>\n#20 0x562170c306c0 <unknown>\n#21 0x562170c40f26 <unknown>\n#22 0x7f29a1c94ac3 <unknown>\n\n",
        "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
        "steps" : [ {
          "name" : "Find clickable elements",
          "time" : {
            "start" : 1729389908955,
            "stop" : 1729389908966,
            "duration" : 11
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "<selenium.webdriver.remote.webelement.WebElement (session=\"8b089bc8c2aa3f56f36a33c7c9a1f4e9\", element=\"f.A299AB2AA10B7051B666673F2A1D80DC.d.29273F67C03933F0EE073C9C4BDF53CF.e.4\")>"
          }, {
            "name" : "timeout",
            "value" : "5"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "locator",
          "value" : "<selenium.webdriver.remote.webelement.WebElement (session=\"8b089bc8c2aa3f56f36a33c7c9a1f4e9\", element=\"f.A299AB2AA10B7051B666673F2A1D80DC.d.29273F67C03933F0EE073C9C4BDF53CF.e.4\")>"
        }, {
          "name" : "value",
          "value" : "'Test#12p@ssword '"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true,
        "stepsCount" : 1
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "password",
        "value" : "'Test#12p@ssword '"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 4
    } ],
    "attachments" : [ {
      "uid" : "81cc2c8ae5f7b777",
      "name" : "Screenshot",
      "source" : "81cc2c8ae5f7b777.png",
      "type" : "image/png",
      "size" : 102458
    }, {
      "uid" : "52cb070c52392cf2",
      "name" : "HTML source",
      "source" : "52cb070c52392cf2.html",
      "type" : "text/html",
      "size" : 101904
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 10
  },
  "afterStages" : [ {
    "name" : "clear_allure_result_folder::0",
    "time" : {
      "start" : 1729389971625,
      "stop" : 1729389971625,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "driver::0",
    "time" : {
      "start" : 1729389910201,
      "stop" : 1729389910275,
      "duration" : 74
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Failed Login Functionality"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_sign_in"
  }, {
    "name" : "subSuite",
    "value" : "TestFailedLogin"
  }, {
    "name" : "host",
    "value" : "fv-az1118-588"
  }, {
    "name" : "thread",
    "value" : "2830-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_sign_in"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "email",
    "value" : "'teston120@mailinator.com'"
  }, {
    "name" : "password",
    "value" : "'Test#12p@ssword '"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f00bdee867d67fa4.json",
  "parameterValues" : [ "'teston120@mailinator.com'", "'Test#12p@ssword '" ]
}