{"uid":"84c07a2bc0e2f249","name":"TC 02.02.01 - Check Search Terms link in footer leads to the correct page from each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_02_01_check_search_terms_link_functionality","historyId":"6772a7bee679b0c9152ac6f360d80238","time":{"start":1708132381712,"stop":1708132383138,"duration":1426},"description":"Check that Search Terms link in footer is correct","descriptionHtml":"<p>Check that Search Terms link in footer is correct</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x5558d6dc6d93 <unknown>\n#1 0x5558d6aaa337 <unknown>\n#2 0x5558d6af71b9 <unknown>\n#3 0x5558d6aea6b7 <unknown>\n#4 0x5558d6b18442 <unknown>\n#5 0x5558d6aea028 <unknown>\n#6 0x5558d6b1860e <unknown>\n#7 0x5558d6b3712d <unknown>\n#8 0x5558d6b181e3 <unknown>\n#9 0x5558d6ae8135 <unknown>\n#10 0x5558d6ae913e <unknown>\n#11 0x5558d6d8ae4b <unknown>\n#12 0x5558d6d8edfa <unknown>\n#13 0x5558d6d776d5 <unknown>\n#14 0x5558d6d8fa6f <unknown>\n#15 0x5558d6d5b69f <unknown>\n#16 0x5558d6db4098 <unknown>\n#17 0x5558d6db4262 <unknown>\n#18 0x5558d6dc5f34 <unknown>\n#19 0x7fbe00894ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f88924e4c90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d44da14a16677e964d89e539251dd60c\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.02.01 - Check Search Terms link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_01_check_search_terms_link_functionality(self, driver, URL):\n        \"\"\"Check that Search Terms link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f88914a5fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x5558d6db4262 \\\\u003Cunknown>\\\\n#18 0x5558d6dc5f34 \\\\u003Cunknown>\\\\n#19 0x7fbe00894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.160)\nE       Stacktrace:\nE       #0 0x5558d6dc6d93 <unknown>\nE       #1 0x5558d6aaa337 <unknown>\nE       #2 0x5558d6af71b9 <unknown>\nE       #3 0x5558d6aea6b7 <unknown>\nE       #4 0x5558d6b18442 <unknown>\nE       #5 0x5558d6aea028 <unknown>\nE       #6 0x5558d6b1860e <unknown>\nE       #7 0x5558d6b3712d <unknown>\nE       #8 0x5558d6b181e3 <unknown>\nE       #9 0x5558d6ae8135 <unknown>\nE       #10 0x5558d6ae913e <unknown>\nE       #11 0x5558d6d8ae4b <unknown>\nE       #12 0x5558d6d8edfa <unknown>\nE       #13 0x5558d6d776d5 <unknown>\nE       #14 0x5558d6d8fa6f <unknown>\nE       #15 0x5558d6d5b69f <unknown>\nE       #16 0x5558d6db4098 <unknown>\nE       #17 0x5558d6db4262 <unknown>\nE       #18 0x5558d6dc5f34 <unknown>\nE       #19 0x7fbe00894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1708132072547,"stop":1708132072612,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1708132072612,"stop":1708132072612,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1708132380747,"stop":1708132381712,"duration":965},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check that Search Terms link in footer is correct","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x5558d6dc6d93 <unknown>\n#1 0x5558d6aaa337 <unknown>\n#2 0x5558d6af71b9 <unknown>\n#3 0x5558d6aea6b7 <unknown>\n#4 0x5558d6b18442 <unknown>\n#5 0x5558d6aea028 <unknown>\n#6 0x5558d6b1860e <unknown>\n#7 0x5558d6b3712d <unknown>\n#8 0x5558d6b181e3 <unknown>\n#9 0x5558d6ae8135 <unknown>\n#10 0x5558d6ae913e <unknown>\n#11 0x5558d6d8ae4b <unknown>\n#12 0x5558d6d8edfa <unknown>\n#13 0x5558d6d776d5 <unknown>\n#14 0x5558d6d8fa6f <unknown>\n#15 0x5558d6d5b69f <unknown>\n#16 0x5558d6db4098 <unknown>\n#17 0x5558d6db4262 <unknown>\n#18 0x5558d6dc5f34 <unknown>\n#19 0x7fbe00894ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f88924e4c90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d44da14a16677e964d89e539251dd60c\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.02.01 - Check Search Terms link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_01_check_search_terms_link_functionality(self, driver, URL):\n        \"\"\"Check that Search Terms link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f88914a5fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x5558d6db4262 \\\\u003Cunknown>\\\\n#18 0x5558d6dc5f34 \\\\u003Cunknown>\\\\n#19 0x7fbe00894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.160)\nE       Stacktrace:\nE       #0 0x5558d6dc6d93 <unknown>\nE       #1 0x5558d6aaa337 <unknown>\nE       #2 0x5558d6af71b9 <unknown>\nE       #3 0x5558d6aea6b7 <unknown>\nE       #4 0x5558d6b18442 <unknown>\nE       #5 0x5558d6aea028 <unknown>\nE       #6 0x5558d6b1860e <unknown>\nE       #7 0x5558d6b3712d <unknown>\nE       #8 0x5558d6b181e3 <unknown>\nE       #9 0x5558d6ae8135 <unknown>\nE       #10 0x5558d6ae913e <unknown>\nE       #11 0x5558d6d8ae4b <unknown>\nE       #12 0x5558d6d8edfa <unknown>\nE       #13 0x5558d6d776d5 <unknown>\nE       #14 0x5558d6d8fa6f <unknown>\nE       #15 0x5558d6d5b69f <unknown>\nE       #16 0x5558d6db4098 <unknown>\nE       #17 0x5558d6db4262 <unknown>\nE       #18 0x5558d6dc5f34 <unknown>\nE       #19 0x7fbe00894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Open a browser","time":{"start":1708132381712,"stop":1708132382949,"duration":1237},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check Search Terms link leads to the correct page","time":{"start":1708132382950,"stop":1708132383138,"duration":188},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x5558d6dc6d93 <unknown>\n#1 0x5558d6aaa337 <unknown>\n#2 0x5558d6af71b9 <unknown>\n#3 0x5558d6aea6b7 <unknown>\n#4 0x5558d6b18442 <unknown>\n#5 0x5558d6aea028 <unknown>\n#6 0x5558d6b1860e <unknown>\n#7 0x5558d6b3712d <unknown>\n#8 0x5558d6b181e3 <unknown>\n#9 0x5558d6ae8135 <unknown>\n#10 0x5558d6ae913e <unknown>\n#11 0x5558d6d8ae4b <unknown>\n#12 0x5558d6d8edfa <unknown>\n#13 0x5558d6d776d5 <unknown>\n#14 0x5558d6d8fa6f <unknown>\n#15 0x5558d6d5b69f <unknown>\n#16 0x5558d6db4098 <unknown>\n#17 0x5558d6db4262 <unknown>\n#18 0x5558d6dc5f34 <unknown>\n#19 0x7fbe00894ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/footer_page.py\", line 279, in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1708132382950,"stop":1708132383052,"duration":102},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1708132382950,"stop":1708132382969,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1708132382969,"stop":1708132382987,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"d44da14a16677e964d89e539251dd60c\", element=\"A62EA67B5E5128AEEB59FF50270FCF87_element_15\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b321dcea9bf6732e","name":"Screenshot","source":"b321dcea9bf6732e.png","type":"image/png","size":120037},{"uid":"ca581bb5338630cb","name":"HTML source","source":"ca581bb5338630cb.html","type":"text/html","size":117752}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1708132383339,"stop":1708132383407,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1708133520715,"stop":1708133520715,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az1206-859"},{"name":"thread","value":"2983-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"87e765d199d9537a","reportUrl":"https://verafes.github.io/luma_project/222//#testresult/87e765d199d9537a","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x56035dbb8d93 <unknown>\n#1 0x56035d89c337 <unknown>\n#2 0x56035d8e91b9 <unknown>\n#3 0x56035d8dc6b7 <unknown>\n#4 0x56035d90a442 <unknown>\n#5 0x56035d8dc028 <unknown>\n#6 0x56035d90a60e <unknown>\n#7 0x56035d92912d <unknown>\n#8 0x56035d90a1e3 <unknown>\n#9 0x56035d8da135 <unknown>\n#10 0x56035d8db13e <unknown>\n#11 0x56035db7ce4b <unknown>\n#12 0x56035db80dfa <unknown>\n#13 0x56035db696d5 <unknown>\n#14 0x56035db81a6f <unknown>\n#15 0x56035db4d69f <unknown>\n#16 0x56035dba6098 <unknown>\n#17 0x56035dba6262 <unknown>\n#18 0x56035dbb7f34 <unknown>\n#19 0x7f9c6a094ac3 <unknown>","time":{"start":1708046014039,"stop":1708046015128,"duration":1089}},{"uid":"a14e811b2d8e828a","reportUrl":"https://verafes.github.io/luma_project/221//#testresult/a14e811b2d8e828a","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x56443a69ed93 <unknown>\n#1 0x56443a382337 <unknown>\n#2 0x56443a3cf1b9 <unknown>\n#3 0x56443a3c26b7 <unknown>\n#4 0x56443a3f0442 <unknown>\n#5 0x56443a3c2028 <unknown>\n#6 0x56443a3f060e <unknown>\n#7 0x56443a40f12d <unknown>\n#8 0x56443a3f01e3 <unknown>\n#9 0x56443a3c0135 <unknown>\n#10 0x56443a3c113e <unknown>\n#11 0x56443a662e4b <unknown>\n#12 0x56443a666dfa <unknown>\n#13 0x56443a64f6d5 <unknown>\n#14 0x56443a667a6f <unknown>\n#15 0x56443a63369f <unknown>\n#16 0x56443a68c098 <unknown>\n#17 0x56443a68c262 <unknown>\n#18 0x56443a69df34 <unknown>\n#19 0x7fa2ed694ac3 <unknown>","time":{"start":1707959605864,"stop":1707959606909,"duration":1045}},{"uid":"2987d4e0dfd0752","reportUrl":"https://verafes.github.io/luma_project/220//#testresult/2987d4e0dfd0752","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x563e39830d93 <unknown>\n#1 0x563e39514337 <unknown>\n#2 0x563e395611b9 <unknown>\n#3 0x563e395546b7 <unknown>\n#4 0x563e39582442 <unknown>\n#5 0x563e39554028 <unknown>\n#6 0x563e3958260e <unknown>\n#7 0x563e395a112d <unknown>\n#8 0x563e395821e3 <unknown>\n#9 0x563e39552135 <unknown>\n#10 0x563e3955313e <unknown>\n#11 0x563e397f4e4b <unknown>\n#12 0x563e397f8dfa <unknown>\n#13 0x563e397e16d5 <unknown>\n#14 0x563e397f9a6f <unknown>\n#15 0x563e397c569f <unknown>\n#16 0x563e3981e098 <unknown>\n#17 0x563e3981e262 <unknown>\n#18 0x563e3982ff34 <unknown>\n#19 0x7f0642094ac3 <unknown>","time":{"start":1707873210286,"stop":1707873211186,"duration":900}},{"uid":"69773bb49a50aff3","reportUrl":"https://verafes.github.io/luma_project/219//#testresult/69773bb49a50aff3","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x55cfc3b07d93 <unknown>\n#1 0x55cfc37eb337 <unknown>\n#2 0x55cfc38381b9 <unknown>\n#3 0x55cfc382b6b7 <unknown>\n#4 0x55cfc3859442 <unknown>\n#5 0x55cfc382b028 <unknown>\n#6 0x55cfc385960e <unknown>\n#7 0x55cfc387812d <unknown>\n#8 0x55cfc38591e3 <unknown>\n#9 0x55cfc3829135 <unknown>\n#10 0x55cfc382a13e <unknown>\n#11 0x55cfc3acbe4b <unknown>\n#12 0x55cfc3acfdfa <unknown>\n#13 0x55cfc3ab86d5 <unknown>\n#14 0x55cfc3ad0a6f <unknown>\n#15 0x55cfc3a9c69f <unknown>\n#16 0x55cfc3af5098 <unknown>\n#17 0x55cfc3af5262 <unknown>\n#18 0x55cfc3b06f34 <unknown>\n#19 0x7f813b894ac3 <unknown>","time":{"start":1707786860035,"stop":1707786861036,"duration":1001}},{"uid":"12c93d4c33d0f2a7","reportUrl":"https://verafes.github.io/luma_project/218//#testresult/12c93d4c33d0f2a7","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x5571217acd93 <unknown>\n#1 0x557121490337 <unknown>\n#2 0x5571214dd1b9 <unknown>\n#3 0x5571214d06b7 <unknown>\n#4 0x5571214fe442 <unknown>\n#5 0x5571214d0028 <unknown>\n#6 0x5571214fe60e <unknown>\n#7 0x55712151d12d <unknown>\n#8 0x5571214fe1e3 <unknown>\n#9 0x5571214ce135 <unknown>\n#10 0x5571214cf13e <unknown>\n#11 0x557121770e4b <unknown>\n#12 0x557121774dfa <unknown>\n#13 0x55712175d6d5 <unknown>\n#14 0x557121775a6f <unknown>\n#15 0x55712174169f <unknown>\n#16 0x55712179a098 <unknown>\n#17 0x55712179a262 <unknown>\n#18 0x5571217abf34 <unknown>\n#19 0x7fcad6694ac3 <unknown>","time":{"start":1707700406333,"stop":1707700407347,"duration":1014}},{"uid":"9a3e38e7e8ee0bb1","reportUrl":"https://verafes.github.io/luma_project/217//#testresult/9a3e38e7e8ee0bb1","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x563161538d93 <unknown>\n#1 0x56316121c337 <unknown>\n#2 0x5631612691b9 <unknown>\n#3 0x56316125c6b7 <unknown>\n#4 0x56316128a442 <unknown>\n#5 0x56316125c028 <unknown>\n#6 0x56316128a60e <unknown>\n#7 0x5631612a912d <unknown>\n#8 0x56316128a1e3 <unknown>\n#9 0x56316125a135 <unknown>\n#10 0x56316125b13e <unknown>\n#11 0x5631614fce4b <unknown>\n#12 0x563161500dfa <unknown>\n#13 0x5631614e96d5 <unknown>\n#14 0x563161501a6f <unknown>\n#15 0x5631614cd69f <unknown>\n#16 0x563161526098 <unknown>\n#17 0x563161526262 <unknown>\n#18 0x563161537f34 <unknown>\n#19 0x7f67fe094ac3 <unknown>","time":{"start":1707614292636,"stop":1707614293569,"duration":933}}]},"tags":[]},"source":"84c07a2bc0e2f249.json","parameterValues":["'https://magento.softwaretestingboard.com/'"]}