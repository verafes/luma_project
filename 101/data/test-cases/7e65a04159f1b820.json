{"uid":"7e65a04159f1b820","name":"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct","fullName":"tests.test_sale.TestSideMenuBarMen#test_tc_10_02_01","historyId":"7d9cc06b830a248f9ded0f57b7152948","time":{"start":1697592685472,"stop":1697592685857,"duration":385},"description":"Check title of Men's Deals section","descriptionHtml":"<p>Check title of Men's Deals section</p>\n","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7f3a34164050>\nsale_page = <pages.sale_page.SalePage object at 0x7f3a34e57b10>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1697591395901,"stop":1697591395995,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_result_folder","time":{"start":1697591395996,"stop":1697591395996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1697592683276,"stop":1697592684556,"duration":1280},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"sale_page","time":{"start":1697592684556,"stop":1697592685471,"duration":915},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1697592684556,"stop":1697592685471,"duration":915},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"testStage":{"description":"Check title of Men's Deals section","status":"skipped","statusMessage":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarMen object at 0x7f3a34164050>\nsale_page = <pages.sale_page.SalePage object at 0x7f3a34e57b10>\n\n    @allure.title(\"TC 10.02.01 - Verify 'MEN'S DEALS' title is correct\")\n    @pytest.mark.xfail(reason=\"This test is expecting failure == Assertion Error \"\n                              \"because of error in spelling Men's\")\n    def test_tc_10_02_01(self, sale_page):\n        \"\"\"Check title of Men's Deals section\"\"\"\n        title = sale_page.check_text_in_men_deals_title()\n>       assert title == \"MEN'S DEALS\", f\"Expected title: 'MEN'S DEALS', Actual title: {title}\"\nE       AssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nE       assert \"MENS'S DEALS\" == \"MEN'S DEALS\"\nE         - MEN'S DEALS\nE         + MENS'S DEALS\nE         ?    +\n\ntests/test_sale.py:66: AssertionError","steps":[{"name":"Check text in Men's deals title","time":{"start":1697592685472,"stop":1697592685857,"duration":385},"status":"passed","steps":[{"name":"Find a visible element","time":{"start":1697592685472,"stop":1697592685812,"duration":340},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1697592685472,"stop":1697592685524,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Go to specified element","time":{"start":1697592685524,"stop":1697592685615,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"005319f35359b6cb160e27820e9abf98\", element=\"5BE337E6009D69F5F1D74CE5711894C1_element_7\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > strong:nth-child(3) > span')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"9194ea62103becd6","name":"Screenshot","source":"9194ea62103becd6.png","type":"image/png","size":682681},{"uid":"7ecfb05ed601e2a6","name":"HTML source","source":"7ecfb05ed601e2a6.html","type":"text/html","size":85496}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1697592686273,"stop":1697592686339,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_result_folder::0","time":{"start":1697593099967,"stop":1697593099967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Sale Page"},{"name":"feature","value":"Testing Side Menu Bar - Men's Deals Section"},{"name":"tag","value":"@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az1233-60"},{"name":"thread","value":"2983-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":3,"passed":0,"unknown":0,"total":3},"items":[{"uid":"6f9b8e97ddb6c7d2","reportUrl":"https://verafes.github.io/luma_project/100//#testresult/6f9b8e97ddb6c7d2","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1697506181072,"stop":1697506181127,"duration":55}},{"uid":"5df973cc001b5d07","reportUrl":"https://verafes.github.io/luma_project/99//#testresult/5df973cc001b5d07","status":"skipped","statusDetails":"XFAIL This test is expecting failure == Assertion Error because of error in spelling Men's\n\nAssertionError: Expected title: 'MEN'S DEALS', Actual title: MENS'S DEALS\nassert \"MENS'S DEALS\" == \"MEN'S DEALS\"\n  - MEN'S DEALS\n  + MENS'S DEALS\n  ?    +","time":{"start":1697419951193,"stop":1697419951518,"duration":325}}]},"tags":["@pytest.mark.xfail(reason='This test is expecting failure == Assertion Error because of error in spelling Men's')"]},"source":"7e65a04159f1b820.json","parameterValues":[]}