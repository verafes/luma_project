{"uid":"418b34f528b140e6","name":"TC 02.03.01 - Check correct transfers by clicking on links in the footer","fullName":"tests.test_footer.TestFooter#test_tc_02_03_01_check_correct_transfers_by_clicking_on_links_in_the_footer","historyId":"d14653777b50b2939baad14d15279ecb","time":{"start":1709256005981,"stop":1709256007271,"duration":1290},"description":"Check that transfers between pages by clicking on links in the footer are correct","descriptionHtml":"<p>Check that transfers between pages by clicking on links in the footer are correct</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=122.0.6261.69)\nStacktrace:\n#0 0x56492346b793 <unknown>\n#1 0x56492315f1c6 <unknown>\n#2 0x5649231ab67f <unknown>\n#3 0x56492319f247 <unknown>\n#4 0x5649231cc3d2 <unknown>\n#5 0x56492319ebd8 <unknown>\n#6 0x5649231cc59e <unknown>\n#7 0x5649231eadd9 <unknown>\n#8 0x5649231cc173 <unknown>\n#9 0x56492319d2d3 <unknown>\n#10 0x56492319dc9e <unknown>\n#11 0x56492342f8cb <unknown>\n#12 0x564923433745 <unknown>\n#13 0x56492341c2e1 <unknown>\n#14 0x5649234342d2 <unknown>\n#15 0x56492340017f <unknown>\n#16 0x564923459dc8 <unknown>\n#17 0x564923459fc3 <unknown>\n#18 0x56492346a944 <unknown>\n#19 0x7fbc0d494ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f714079de50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"663c5ffef29b065f1404711861435b34\")>\n\n    @allure.title(\"TC 02.03.01 - Check correct transfers by clicking on links in the footer\")\n    def test_tc_02_03_01_check_correct_transfers_by_clicking_on_links_in_the_footer(self, driver):\n        \"\"\"Check that transfers between pages by clicking on links in the footer are correct\"\"\"\n        page = FooterPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:592: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7140d77950>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x564923459fc3 \\\\u003Cunknown>\\\\n#18 0x56492346a944 \\\\u003Cunknown>\\\\n#19 0x7fbc0d494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=122.0.6261.69)\nE       Stacktrace:\nE       #0 0x56492346b793 <unknown>\nE       #1 0x56492315f1c6 <unknown>\nE       #2 0x5649231ab67f <unknown>\nE       #3 0x56492319f247 <unknown>\nE       #4 0x5649231cc3d2 <unknown>\nE       #5 0x56492319ebd8 <unknown>\nE       #6 0x5649231cc59e <unknown>\nE       #7 0x5649231eadd9 <unknown>\nE       #8 0x5649231cc173 <unknown>\nE       #9 0x56492319d2d3 <unknown>\nE       #10 0x56492319dc9e <unknown>\nE       #11 0x56492342f8cb <unknown>\nE       #12 0x564923433745 <unknown>\nE       #13 0x56492341c2e1 <unknown>\nE       #14 0x5649234342d2 <unknown>\nE       #15 0x56492340017f <unknown>\nE       #16 0x564923459dc8 <unknown>\nE       #17 0x564923459fc3 <unknown>\nE       #18 0x56492346a944 <unknown>\nE       #19 0x7fbc0d494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1709255633816,"stop":1709255633879,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1709255633879,"stop":1709255633879,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1709256004952,"stop":1709256005981,"duration":1029},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check that transfers between pages by clicking on links in the footer are correct","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=122.0.6261.69)\nStacktrace:\n#0 0x56492346b793 <unknown>\n#1 0x56492315f1c6 <unknown>\n#2 0x5649231ab67f <unknown>\n#3 0x56492319f247 <unknown>\n#4 0x5649231cc3d2 <unknown>\n#5 0x56492319ebd8 <unknown>\n#6 0x5649231cc59e <unknown>\n#7 0x5649231eadd9 <unknown>\n#8 0x5649231cc173 <unknown>\n#9 0x56492319d2d3 <unknown>\n#10 0x56492319dc9e <unknown>\n#11 0x56492342f8cb <unknown>\n#12 0x564923433745 <unknown>\n#13 0x56492341c2e1 <unknown>\n#14 0x5649234342d2 <unknown>\n#15 0x56492340017f <unknown>\n#16 0x564923459dc8 <unknown>\n#17 0x564923459fc3 <unknown>\n#18 0x56492346a944 <unknown>\n#19 0x7fbc0d494ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f714079de50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"663c5ffef29b065f1404711861435b34\")>\n\n    @allure.title(\"TC 02.03.01 - Check correct transfers by clicking on links in the footer\")\n    def test_tc_02_03_01_check_correct_transfers_by_clicking_on_links_in_the_footer(self, driver):\n        \"\"\"Check that transfers between pages by clicking on links in the footer are correct\"\"\"\n        page = FooterPage(driver, MAIN_PAGE_URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:592: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7140d77950>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x564923459fc3 \\\\u003Cunknown>\\\\n#18 0x56492346a944 \\\\u003Cunknown>\\\\n#19 0x7fbc0d494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=122.0.6261.69)\nE       Stacktrace:\nE       #0 0x56492346b793 <unknown>\nE       #1 0x56492315f1c6 <unknown>\nE       #2 0x5649231ab67f <unknown>\nE       #3 0x56492319f247 <unknown>\nE       #4 0x5649231cc3d2 <unknown>\nE       #5 0x56492319ebd8 <unknown>\nE       #6 0x5649231cc59e <unknown>\nE       #7 0x5649231eadd9 <unknown>\nE       #8 0x5649231cc173 <unknown>\nE       #9 0x56492319d2d3 <unknown>\nE       #10 0x56492319dc9e <unknown>\nE       #11 0x56492342f8cb <unknown>\nE       #12 0x564923433745 <unknown>\nE       #13 0x56492341c2e1 <unknown>\nE       #14 0x5649234342d2 <unknown>\nE       #15 0x56492340017f <unknown>\nE       #16 0x564923459dc8 <unknown>\nE       #17 0x564923459fc3 <unknown>\nE       #18 0x56492346a944 <unknown>\nE       #19 0x7fbc0d494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Open a browser","time":{"start":1709256005981,"stop":1709256007218,"duration":1237},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check Search Terms link leads to the correct page","time":{"start":1709256007218,"stop":1709256007270,"duration":52},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=122.0.6261.69)\nStacktrace:\n#0 0x56492346b793 <unknown>\n#1 0x56492315f1c6 <unknown>\n#2 0x5649231ab67f <unknown>\n#3 0x56492319f247 <unknown>\n#4 0x5649231cc3d2 <unknown>\n#5 0x56492319ebd8 <unknown>\n#6 0x5649231cc59e <unknown>\n#7 0x5649231eadd9 <unknown>\n#8 0x5649231cc173 <unknown>\n#9 0x56492319d2d3 <unknown>\n#10 0x56492319dc9e <unknown>\n#11 0x56492342f8cb <unknown>\n#12 0x564923433745 <unknown>\n#13 0x56492341c2e1 <unknown>\n#14 0x5649234342d2 <unknown>\n#15 0x56492340017f <unknown>\n#16 0x564923459dc8 <unknown>\n#17 0x564923459fc3 <unknown>\n#18 0x56492346a944 <unknown>\n#19 0x7fbc0d494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/footer_page.py\", line 279, in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1709256007218,"stop":1709256007251,"duration":33},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1709256007218,"stop":1709256007227,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1709256007227,"stop":1709256007232,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"663c5ffef29b065f1404711861435b34\", element=\"f.FEACB36D69271E7391A83A34970628B1.d.6B951FED7F32EC331AE6954FCE28C08F.e.18\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8ab14816c15029c5","name":"Screenshot","source":"8ab14816c15029c5.png","type":"image/png","size":131690},{"uid":"f2b907ef1693da89","name":"HTML source","source":"f2b907ef1693da89.html","type":"text/html","size":79651}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1709256007496,"stop":1709256007562,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1709256956405,"stop":1709256956405,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az736-570"},{"name":"thread","value":"2956-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"c555e676b8324570","reportUrl":"https://verafes.github.io/luma_project/235//#testresult/c555e676b8324570","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=122.0.6261.69)\nStacktrace:\n#0 0x55826624b793 <unknown>\n#1 0x558265f3f1c6 <unknown>\n#2 0x558265f8b67f <unknown>\n#3 0x558265f7f247 <unknown>\n#4 0x558265fac3d2 <unknown>\n#5 0x558265f7ebd8 <unknown>\n#6 0x558265fac59e <unknown>\n#7 0x558265fcadd9 <unknown>\n#8 0x558265fac173 <unknown>\n#9 0x558265f7d2d3 <unknown>\n#10 0x558265f7dc9e <unknown>\n#11 0x55826620f8cb <unknown>\n#12 0x558266213745 <unknown>\n#13 0x5582661fc2e1 <unknown>\n#14 0x5582662142d2 <unknown>\n#15 0x5582661e017f <unknown>\n#16 0x558266239dc8 <unknown>\n#17 0x558266239fc3 <unknown>\n#18 0x55826624a944 <unknown>\n#19 0x7f524d294ac3 <unknown>","time":{"start":1709169209362,"stop":1709169210504,"duration":1142}},{"uid":"b013a54f3561f9da","reportUrl":"https://verafes.github.io/luma_project/234//#testresult/b013a54f3561f9da","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x56406d27e303 <unknown>\n#1 0x56406cf632b7 <unknown>\n#2 0x56406cfb0118 <unknown>\n#3 0x56406cfa3617 <unknown>\n#4 0x56406cfd1382 <unknown>\n#5 0x56406cfa2f88 <unknown>\n#6 0x56406cfd154e <unknown>\n#7 0x56406cff007c <unknown>\n#8 0x56406cfd1123 <unknown>\n#9 0x56406cfa1095 <unknown>\n#10 0x56406cfa209e <unknown>\n#11 0x56406d2426ab <unknown>\n#12 0x56406d2464ba <unknown>\n#13 0x56406d22ef85 <unknown>\n#14 0x56406d24712f <unknown>\n#15 0x56406d212e6f <unknown>\n#16 0x56406d26b5f8 <unknown>\n#17 0x56406d26b7c2 <unknown>\n#18 0x56406d27d4a4 <unknown>\n#19 0x7f61d8294ac3 <unknown>","time":{"start":1709082794064,"stop":1709082795463,"duration":1399}},{"uid":"b5639ad05d30c80a","reportUrl":"https://verafes.github.io/luma_project/233//#testresult/b5639ad05d30c80a","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x5589d0e85303 <unknown>\n#1 0x5589d0b6a2b7 <unknown>\n#2 0x5589d0bb7118 <unknown>\n#3 0x5589d0baa617 <unknown>\n#4 0x5589d0bd8382 <unknown>\n#5 0x5589d0ba9f88 <unknown>\n#6 0x5589d0bd854e <unknown>\n#7 0x5589d0bf707c <unknown>\n#8 0x5589d0bd8123 <unknown>\n#9 0x5589d0ba8095 <unknown>\n#10 0x5589d0ba909e <unknown>\n#11 0x5589d0e496ab <unknown>\n#12 0x5589d0e4d4ba <unknown>\n#13 0x5589d0e35f85 <unknown>\n#14 0x5589d0e4e12f <unknown>\n#15 0x5589d0e19e6f <unknown>\n#16 0x5589d0e725f8 <unknown>\n#17 0x5589d0e727c2 <unknown>\n#18 0x5589d0e844a4 <unknown>\n#19 0x7ff1a0c94ac3 <unknown>","time":{"start":1708996378356,"stop":1708996379302,"duration":946}},{"uid":"201b0d470bf78972","reportUrl":"https://verafes.github.io/luma_project/232//#testresult/201b0d470bf78972","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x561059e11303 <unknown>\n#1 0x561059af62b7 <unknown>\n#2 0x561059b43118 <unknown>\n#3 0x561059b36617 <unknown>\n#4 0x561059b64382 <unknown>\n#5 0x561059b35f88 <unknown>\n#6 0x561059b6454e <unknown>\n#7 0x561059b8307c <unknown>\n#8 0x561059b64123 <unknown>\n#9 0x561059b34095 <unknown>\n#10 0x561059b3509e <unknown>\n#11 0x561059dd56ab <unknown>\n#12 0x561059dd94ba <unknown>\n#13 0x561059dc1f85 <unknown>\n#14 0x561059dda12f <unknown>\n#15 0x561059da5e6f <unknown>\n#16 0x561059dfe5f8 <unknown>\n#17 0x561059dfe7c2 <unknown>\n#18 0x561059e104a4 <unknown>\n#19 0x7f30ca494ac3 <unknown>","time":{"start":1708910184989,"stop":1708910186246,"duration":1257}},{"uid":"fd24468ad0a491dd","reportUrl":"https://verafes.github.io/luma_project/231//#testresult/fd24468ad0a491dd","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x559b09fd5303 <unknown>\n#1 0x559b09cba2b7 <unknown>\n#2 0x559b09d07118 <unknown>\n#3 0x559b09cfa617 <unknown>\n#4 0x559b09d28382 <unknown>\n#5 0x559b09cf9f88 <unknown>\n#6 0x559b09d2854e <unknown>\n#7 0x559b09d4707c <unknown>\n#8 0x559b09d28123 <unknown>\n#9 0x559b09cf8095 <unknown>\n#10 0x559b09cf909e <unknown>\n#11 0x559b09f996ab <unknown>\n#12 0x559b09f9d4ba <unknown>\n#13 0x559b09f85f85 <unknown>\n#14 0x559b09f9e12f <unknown>\n#15 0x559b09f69e6f <unknown>\n#16 0x559b09fc25f8 <unknown>\n#17 0x559b09fc27c2 <unknown>\n#18 0x559b09fd44a4 <unknown>\n#19 0x7f5173094ac3 <unknown>","time":{"start":1708823926655,"stop":1708823927769,"duration":1114}}]},"tags":[]},"source":"418b34f528b140e6.json","parameterValues":[]}