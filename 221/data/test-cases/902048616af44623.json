{"uid":"902048616af44623","name":"TC 02.02.01 - Check Search Terms link in footer leads to the correct page from each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_02_01_check_search_terms_link_functionality","historyId":"ea03f5d2a5cc823dd58a43009716b412","time":{"start":1707959608137,"stop":1707959609117,"duration":980},"description":"Check that Search Terms link in footer is correct","descriptionHtml":"<p>Check that Search Terms link in footer is correct</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x55608acebd93 <unknown>\n#1 0x55608a9cf337 <unknown>\n#2 0x55608aa1c1b9 <unknown>\n#3 0x55608aa0f6b7 <unknown>\n#4 0x55608aa3d442 <unknown>\n#5 0x55608aa0f028 <unknown>\n#6 0x55608aa3d60e <unknown>\n#7 0x55608aa5c12d <unknown>\n#8 0x55608aa3d1e3 <unknown>\n#9 0x55608aa0d135 <unknown>\n#10 0x55608aa0e13e <unknown>\n#11 0x55608acafe4b <unknown>\n#12 0x55608acb3dfa <unknown>\n#13 0x55608ac9c6d5 <unknown>\n#14 0x55608acb4a6f <unknown>\n#15 0x55608ac8069f <unknown>\n#16 0x55608acd9098 <unknown>\n#17 0x55608acd9262 <unknown>\n#18 0x55608aceaf34 <unknown>\n#19 0x7fc237494ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f20a822e4d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"89d2462b217794a185c701487b23bb4b\")>\nURL = 'https://magento.softwaretestingboard.com/what-is-new.html'\n\n    @allure.title(\"TC 02.02.01 - Check Search Terms link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_01_check_search_terms_link_functionality(self, driver, URL):\n        \"\"\"Check that Search Terms link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f20a8f05a90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x55608acd9262 \\\\u003Cunknown>\\\\n#18 0x55608aceaf34 \\\\u003Cunknown>\\\\n#19 0x7fc237494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.160)\nE       Stacktrace:\nE       #0 0x55608acebd93 <unknown>\nE       #1 0x55608a9cf337 <unknown>\nE       #2 0x55608aa1c1b9 <unknown>\nE       #3 0x55608aa0f6b7 <unknown>\nE       #4 0x55608aa3d442 <unknown>\nE       #5 0x55608aa0f028 <unknown>\nE       #6 0x55608aa3d60e <unknown>\nE       #7 0x55608aa5c12d <unknown>\nE       #8 0x55608aa3d1e3 <unknown>\nE       #9 0x55608aa0d135 <unknown>\nE       #10 0x55608aa0e13e <unknown>\nE       #11 0x55608acafe4b <unknown>\nE       #12 0x55608acb3dfa <unknown>\nE       #13 0x55608ac9c6d5 <unknown>\nE       #14 0x55608acb4a6f <unknown>\nE       #15 0x55608ac8069f <unknown>\nE       #16 0x55608acd9098 <unknown>\nE       #17 0x55608acd9262 <unknown>\nE       #18 0x55608aceaf34 <unknown>\nE       #19 0x7fc237494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1707959318033,"stop":1707959318097,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1707959318098,"stop":1707959318098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1707959607157,"stop":1707959608136,"duration":979},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check that Search Terms link in footer is correct","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x55608acebd93 <unknown>\n#1 0x55608a9cf337 <unknown>\n#2 0x55608aa1c1b9 <unknown>\n#3 0x55608aa0f6b7 <unknown>\n#4 0x55608aa3d442 <unknown>\n#5 0x55608aa0f028 <unknown>\n#6 0x55608aa3d60e <unknown>\n#7 0x55608aa5c12d <unknown>\n#8 0x55608aa3d1e3 <unknown>\n#9 0x55608aa0d135 <unknown>\n#10 0x55608aa0e13e <unknown>\n#11 0x55608acafe4b <unknown>\n#12 0x55608acb3dfa <unknown>\n#13 0x55608ac9c6d5 <unknown>\n#14 0x55608acb4a6f <unknown>\n#15 0x55608ac8069f <unknown>\n#16 0x55608acd9098 <unknown>\n#17 0x55608acd9262 <unknown>\n#18 0x55608aceaf34 <unknown>\n#19 0x7fc237494ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f20a822e4d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"89d2462b217794a185c701487b23bb4b\")>\nURL = 'https://magento.softwaretestingboard.com/what-is-new.html'\n\n    @allure.title(\"TC 02.02.01 - Check Search Terms link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_01_check_search_terms_link_functionality(self, driver, URL):\n        \"\"\"Check that Search Terms link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f20a8f05a90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x55608acd9262 \\\\u003Cunknown>\\\\n#18 0x55608aceaf34 \\\\u003Cunknown>\\\\n#19 0x7fc237494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.160)\nE       Stacktrace:\nE       #0 0x55608acebd93 <unknown>\nE       #1 0x55608a9cf337 <unknown>\nE       #2 0x55608aa1c1b9 <unknown>\nE       #3 0x55608aa0f6b7 <unknown>\nE       #4 0x55608aa3d442 <unknown>\nE       #5 0x55608aa0f028 <unknown>\nE       #6 0x55608aa3d60e <unknown>\nE       #7 0x55608aa5c12d <unknown>\nE       #8 0x55608aa3d1e3 <unknown>\nE       #9 0x55608aa0d135 <unknown>\nE       #10 0x55608aa0e13e <unknown>\nE       #11 0x55608acafe4b <unknown>\nE       #12 0x55608acb3dfa <unknown>\nE       #13 0x55608ac9c6d5 <unknown>\nE       #14 0x55608acb4a6f <unknown>\nE       #15 0x55608ac8069f <unknown>\nE       #16 0x55608acd9098 <unknown>\nE       #17 0x55608acd9262 <unknown>\nE       #18 0x55608aceaf34 <unknown>\nE       #19 0x7fc237494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Open a browser","time":{"start":1707959608137,"stop":1707959608931,"duration":794},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check Search Terms link leads to the correct page","time":{"start":1707959608931,"stop":1707959609116,"duration":185},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x55608acebd93 <unknown>\n#1 0x55608a9cf337 <unknown>\n#2 0x55608aa1c1b9 <unknown>\n#3 0x55608aa0f6b7 <unknown>\n#4 0x55608aa3d442 <unknown>\n#5 0x55608aa0f028 <unknown>\n#6 0x55608aa3d60e <unknown>\n#7 0x55608aa5c12d <unknown>\n#8 0x55608aa3d1e3 <unknown>\n#9 0x55608aa0d135 <unknown>\n#10 0x55608aa0e13e <unknown>\n#11 0x55608acafe4b <unknown>\n#12 0x55608acb3dfa <unknown>\n#13 0x55608ac9c6d5 <unknown>\n#14 0x55608acb4a6f <unknown>\n#15 0x55608ac8069f <unknown>\n#16 0x55608acd9098 <unknown>\n#17 0x55608acd9262 <unknown>\n#18 0x55608aceaf34 <unknown>\n#19 0x7fc237494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/footer_page.py\", line 279, in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1707959608931,"stop":1707959609025,"duration":94},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1707959608931,"stop":1707959608953,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1707959608953,"stop":1707959608967,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"89d2462b217794a185c701487b23bb4b\", element=\"B68E6EC0CB58B5702581913CF5BC79B3_element_12\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e354a49cbfccc135","name":"Screenshot","source":"e354a49cbfccc135.png","type":"image/png","size":346247},{"uid":"dfe6f726c679de8","name":"HTML source","source":"dfe6f726c679de8.html","type":"text/html","size":114685}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1707959609386,"stop":1707959609455,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1707960624098,"stop":1707960624098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az837-195"},{"name":"thread","value":"3057-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/what-is-new.html'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"d50bf03b7160ac67","reportUrl":"https://verafes.github.io/luma_project/220//#testresult/d50bf03b7160ac67","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.160)\nStacktrace:\n#0 0x55cc93182d93 <unknown>\n#1 0x55cc92e66337 <unknown>\n#2 0x55cc92eb31b9 <unknown>\n#3 0x55cc92ea66b7 <unknown>\n#4 0x55cc92ed4442 <unknown>\n#5 0x55cc92ea6028 <unknown>\n#6 0x55cc92ed460e <unknown>\n#7 0x55cc92ef312d <unknown>\n#8 0x55cc92ed41e3 <unknown>\n#9 0x55cc92ea4135 <unknown>\n#10 0x55cc92ea513e <unknown>\n#11 0x55cc93146e4b <unknown>\n#12 0x55cc9314adfa <unknown>\n#13 0x55cc931336d5 <unknown>\n#14 0x55cc9314ba6f <unknown>\n#15 0x55cc9311769f <unknown>\n#16 0x55cc93170098 <unknown>\n#17 0x55cc93170262 <unknown>\n#18 0x55cc93181f34 <unknown>\n#19 0x7f2ec0894ac3 <unknown>","time":{"start":1707873212509,"stop":1707873213411,"duration":902}},{"uid":"ebd5c3cfea4ed937","reportUrl":"https://verafes.github.io/luma_project/219//#testresult/ebd5c3cfea4ed937","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x55fb853bed93 <unknown>\n#1 0x55fb850a2337 <unknown>\n#2 0x55fb850ef1b9 <unknown>\n#3 0x55fb850e26b7 <unknown>\n#4 0x55fb85110442 <unknown>\n#5 0x55fb850e2028 <unknown>\n#6 0x55fb8511060e <unknown>\n#7 0x55fb8512f12d <unknown>\n#8 0x55fb851101e3 <unknown>\n#9 0x55fb850e0135 <unknown>\n#10 0x55fb850e113e <unknown>\n#11 0x55fb85382e4b <unknown>\n#12 0x55fb85386dfa <unknown>\n#13 0x55fb8536f6d5 <unknown>\n#14 0x55fb85387a6f <unknown>\n#15 0x55fb8535369f <unknown>\n#16 0x55fb853ac098 <unknown>\n#17 0x55fb853ac262 <unknown>\n#18 0x55fb853bdf34 <unknown>\n#19 0x7f75a0894ac3 <unknown>","time":{"start":1707786862227,"stop":1707786863808,"duration":1581}},{"uid":"9ef6dd916a77eb84","reportUrl":"https://verafes.github.io/luma_project/218//#testresult/9ef6dd916a77eb84","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x5607b5d04d93 <unknown>\n#1 0x5607b59e8337 <unknown>\n#2 0x5607b5a351b9 <unknown>\n#3 0x5607b5a286b7 <unknown>\n#4 0x5607b5a56442 <unknown>\n#5 0x5607b5a28028 <unknown>\n#6 0x5607b5a5660e <unknown>\n#7 0x5607b5a7512d <unknown>\n#8 0x5607b5a561e3 <unknown>\n#9 0x5607b5a26135 <unknown>\n#10 0x5607b5a2713e <unknown>\n#11 0x5607b5cc8e4b <unknown>\n#12 0x5607b5cccdfa <unknown>\n#13 0x5607b5cb56d5 <unknown>\n#14 0x5607b5ccda6f <unknown>\n#15 0x5607b5c9969f <unknown>\n#16 0x5607b5cf2098 <unknown>\n#17 0x5607b5cf2262 <unknown>\n#18 0x5607b5d03f34 <unknown>\n#19 0x7fb270094ac3 <unknown>","time":{"start":1707700408543,"stop":1707700409460,"duration":917}},{"uid":"1e136314a80e99eb","reportUrl":"https://verafes.github.io/luma_project/217//#testresult/1e136314a80e99eb","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.139)\nStacktrace:\n#0 0x55a896779d93 <unknown>\n#1 0x55a89645d337 <unknown>\n#2 0x55a8964aa1b9 <unknown>\n#3 0x55a89649d6b7 <unknown>\n#4 0x55a8964cb442 <unknown>\n#5 0x55a89649d028 <unknown>\n#6 0x55a8964cb60e <unknown>\n#7 0x55a8964ea12d <unknown>\n#8 0x55a8964cb1e3 <unknown>\n#9 0x55a89649b135 <unknown>\n#10 0x55a89649c13e <unknown>\n#11 0x55a89673de4b <unknown>\n#12 0x55a896741dfa <unknown>\n#13 0x55a89672a6d5 <unknown>\n#14 0x55a896742a6f <unknown>\n#15 0x55a89670e69f <unknown>\n#16 0x55a896767098 <unknown>\n#17 0x55a896767262 <unknown>\n#18 0x55a896778f34 <unknown>\n#19 0x7fbb53094ac3 <unknown>","time":{"start":1707614294800,"stop":1707614295709,"duration":909}}]},"tags":[]},"source":"902048616af44623.json","parameterValues":["'https://magento.softwaretestingboard.com/what-is-new.html'"]}