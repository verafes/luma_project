{"uid":"686303ce1a662ac","name":"TC 02.02.01 - Check Search Terms link in footer leads to the correct page from each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_02_01_check_search_terms_link_functionality","historyId":"ea03f5d2a5cc823dd58a43009716b412","time":{"start":1708996317489,"stop":1708996318333,"duration":844},"description":"Check that Search Terms link in footer is correct","descriptionHtml":"<p>Check that Search Terms link in footer is correct</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55ca73f3f303 <unknown>\n#1 0x55ca73c242b7 <unknown>\n#2 0x55ca73c71118 <unknown>\n#3 0x55ca73c64617 <unknown>\n#4 0x55ca73c92382 <unknown>\n#5 0x55ca73c63f88 <unknown>\n#6 0x55ca73c9254e <unknown>\n#7 0x55ca73cb107c <unknown>\n#8 0x55ca73c92123 <unknown>\n#9 0x55ca73c62095 <unknown>\n#10 0x55ca73c6309e <unknown>\n#11 0x55ca73f036ab <unknown>\n#12 0x55ca73f074ba <unknown>\n#13 0x55ca73eeff85 <unknown>\n#14 0x55ca73f0812f <unknown>\n#15 0x55ca73ed3e6f <unknown>\n#16 0x55ca73f2c5f8 <unknown>\n#17 0x55ca73f2c7c2 <unknown>\n#18 0x55ca73f3e4a4 <unknown>\n#19 0x7fc228e94ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f22cabdc490>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"02e6195c5d40bcbc37134bcfe326332e\")>\nURL = 'https://magento.softwaretestingboard.com/what-is-new.html'\n\n    @allure.title(\"TC 02.02.01 - Check Search Terms link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_01_check_search_terms_link_functionality(self, driver, URL):\n        \"\"\"Check that Search Terms link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f22cabdff50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x55ca73f2c7c2 \\\\u003Cunknown>\\\\n#18 0x55ca73f3e4a4 \\\\u003Cunknown>\\\\n#19 0x7fc228e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.184)\nE       Stacktrace:\nE       #0 0x55ca73f3f303 <unknown>\nE       #1 0x55ca73c242b7 <unknown>\nE       #2 0x55ca73c71118 <unknown>\nE       #3 0x55ca73c64617 <unknown>\nE       #4 0x55ca73c92382 <unknown>\nE       #5 0x55ca73c63f88 <unknown>\nE       #6 0x55ca73c9254e <unknown>\nE       #7 0x55ca73cb107c <unknown>\nE       #8 0x55ca73c92123 <unknown>\nE       #9 0x55ca73c62095 <unknown>\nE       #10 0x55ca73c6309e <unknown>\nE       #11 0x55ca73f036ab <unknown>\nE       #12 0x55ca73f074ba <unknown>\nE       #13 0x55ca73eeff85 <unknown>\nE       #14 0x55ca73f0812f <unknown>\nE       #15 0x55ca73ed3e6f <unknown>\nE       #16 0x55ca73f2c5f8 <unknown>\nE       #17 0x55ca73f2c7c2 <unknown>\nE       #18 0x55ca73f3e4a4 <unknown>\nE       #19 0x7fc228e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1708996045616,"stop":1708996045681,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1708996045681,"stop":1708996045681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1708996316532,"stop":1708996317488,"duration":956},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check that Search Terms link in footer is correct","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55ca73f3f303 <unknown>\n#1 0x55ca73c242b7 <unknown>\n#2 0x55ca73c71118 <unknown>\n#3 0x55ca73c64617 <unknown>\n#4 0x55ca73c92382 <unknown>\n#5 0x55ca73c63f88 <unknown>\n#6 0x55ca73c9254e <unknown>\n#7 0x55ca73cb107c <unknown>\n#8 0x55ca73c92123 <unknown>\n#9 0x55ca73c62095 <unknown>\n#10 0x55ca73c6309e <unknown>\n#11 0x55ca73f036ab <unknown>\n#12 0x55ca73f074ba <unknown>\n#13 0x55ca73eeff85 <unknown>\n#14 0x55ca73f0812f <unknown>\n#15 0x55ca73ed3e6f <unknown>\n#16 0x55ca73f2c5f8 <unknown>\n#17 0x55ca73f2c7c2 <unknown>\n#18 0x55ca73f3e4a4 <unknown>\n#19 0x7fc228e94ac3 <unknown>","statusTrace":"self = <test_footer.TestFooter object at 0x7f22cabdc490>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"02e6195c5d40bcbc37134bcfe326332e\")>\nURL = 'https://magento.softwaretestingboard.com/what-is-new.html'\n\n    @allure.title(\"TC 02.02.01 - Check Search Terms link in footer leads to the correct page \"\n                  \"from each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_02_01_check_search_terms_link_functionality(self, driver, URL):\n        \"\"\"Check that Search Terms link in footer is correct\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n>       page.check_search_terms_link_functionality()\n\ntests/test_footer.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer_page.py:279: in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f22cabdff50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable: element ha...\\\\n#17 0x55ca73f2c7c2 \\\\u003Cunknown>\\\\n#18 0x55ca73f3e4a4 \\\\u003Cunknown>\\\\n#19 0x7fc228e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\nE         (Session info: chrome=121.0.6167.184)\nE       Stacktrace:\nE       #0 0x55ca73f3f303 <unknown>\nE       #1 0x55ca73c242b7 <unknown>\nE       #2 0x55ca73c71118 <unknown>\nE       #3 0x55ca73c64617 <unknown>\nE       #4 0x55ca73c92382 <unknown>\nE       #5 0x55ca73c63f88 <unknown>\nE       #6 0x55ca73c9254e <unknown>\nE       #7 0x55ca73cb107c <unknown>\nE       #8 0x55ca73c92123 <unknown>\nE       #9 0x55ca73c62095 <unknown>\nE       #10 0x55ca73c6309e <unknown>\nE       #11 0x55ca73f036ab <unknown>\nE       #12 0x55ca73f074ba <unknown>\nE       #13 0x55ca73eeff85 <unknown>\nE       #14 0x55ca73f0812f <unknown>\nE       #15 0x55ca73ed3e6f <unknown>\nE       #16 0x55ca73f2c5f8 <unknown>\nE       #17 0x55ca73f2c7c2 <unknown>\nE       #18 0x55ca73f3e4a4 <unknown>\nE       #19 0x7fc228e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Open a browser","time":{"start":1708996317489,"stop":1708996318149,"duration":660},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check Search Terms link leads to the correct page","time":{"start":1708996318149,"stop":1708996318332,"duration":183},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55ca73f3f303 <unknown>\n#1 0x55ca73c242b7 <unknown>\n#2 0x55ca73c71118 <unknown>\n#3 0x55ca73c64617 <unknown>\n#4 0x55ca73c92382 <unknown>\n#5 0x55ca73c63f88 <unknown>\n#6 0x55ca73c9254e <unknown>\n#7 0x55ca73cb107c <unknown>\n#8 0x55ca73c92123 <unknown>\n#9 0x55ca73c62095 <unknown>\n#10 0x55ca73c6309e <unknown>\n#11 0x55ca73f036ab <unknown>\n#12 0x55ca73f074ba <unknown>\n#13 0x55ca73eeff85 <unknown>\n#14 0x55ca73f0812f <unknown>\n#15 0x55ca73ed3e6f <unknown>\n#16 0x55ca73f2c5f8 <unknown>\n#17 0x55ca73f2c7c2 <unknown>\n#18 0x55ca73f3e4a4 <unknown>\n#19 0x7fc228e94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/footer_page.py\", line 279, in check_search_terms_link_functionality\n    link_functionality = search_terms_link.click()\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.8/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find a visible element","time":{"start":1708996318149,"stop":1708996318252,"duration":103},"status":"passed","steps":[{"name":"Find a present element","time":{"start":1708996318149,"stop":1708996318172,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Go to specified element","time":{"start":1708996318173,"stop":1708996318189,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"02e6195c5d40bcbc37134bcfe326332e\", element=\"23E171FBA00E0CD309CE35E999133651_element_12\")>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.footer > :nth-child(1) > a')"},{"name":"timeout","value":"10"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"80c5b6a34cf74017","name":"Screenshot","source":"80c5b6a34cf74017.png","type":"image/png","size":346247},{"uid":"8060ad79647643ea","name":"HTML source","source":"8060ad79647643ea.html","type":"text/html","size":114685}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1708996318564,"stop":1708996318635,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1708997274762,"stop":1708997274762,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az568-368"},{"name":"thread","value":"2959-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/what-is-new.html'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"4e8249cf8880f1c8","reportUrl":"https://verafes.github.io/luma_project/232//#testresult/4e8249cf8880f1c8","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55ad1b961303 <unknown>\n#1 0x55ad1b6462b7 <unknown>\n#2 0x55ad1b693118 <unknown>\n#3 0x55ad1b686617 <unknown>\n#4 0x55ad1b6b4382 <unknown>\n#5 0x55ad1b685f88 <unknown>\n#6 0x55ad1b6b454e <unknown>\n#7 0x55ad1b6d307c <unknown>\n#8 0x55ad1b6b4123 <unknown>\n#9 0x55ad1b684095 <unknown>\n#10 0x55ad1b68509e <unknown>\n#11 0x55ad1b9256ab <unknown>\n#12 0x55ad1b9294ba <unknown>\n#13 0x55ad1b911f85 <unknown>\n#14 0x55ad1b92a12f <unknown>\n#15 0x55ad1b8f5e6f <unknown>\n#16 0x55ad1b94e5f8 <unknown>\n#17 0x55ad1b94e7c2 <unknown>\n#18 0x55ad1b9604a4 <unknown>\n#19 0x7f830e294ac3 <unknown>","time":{"start":1708910120694,"stop":1708910121979,"duration":1285}},{"uid":"5cbc1a26f7eab4b3","reportUrl":"https://verafes.github.io/luma_project/231//#testresult/5cbc1a26f7eab4b3","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: chrome=121.0.6167.184)\nStacktrace:\n#0 0x55a9d38b2303 <unknown>\n#1 0x55a9d35972b7 <unknown>\n#2 0x55a9d35e4118 <unknown>\n#3 0x55a9d35d7617 <unknown>\n#4 0x55a9d3605382 <unknown>\n#5 0x55a9d35d6f88 <unknown>\n#6 0x55a9d360554e <unknown>\n#7 0x55a9d362407c <unknown>\n#8 0x55a9d3605123 <unknown>\n#9 0x55a9d35d5095 <unknown>\n#10 0x55a9d35d609e <unknown>\n#11 0x55a9d38766ab <unknown>\n#12 0x55a9d387a4ba <unknown>\n#13 0x55a9d3862f85 <unknown>\n#14 0x55a9d387b12f <unknown>\n#15 0x55a9d3846e6f <unknown>\n#16 0x55a9d389f5f8 <unknown>\n#17 0x55a9d389f7c2 <unknown>\n#18 0x55a9d38b14a4 <unknown>\n#19 0x7f7842294ac3 <unknown>","time":{"start":1708823857847,"stop":1708823858822,"duration":975}}]},"tags":[]},"source":"686303ce1a662ac.json","parameterValues":["'https://magento.softwaretestingboard.com/what-is-new.html'"]}