{"uid":"43f1f71a2863e44d","name":"TC 14.04.04 Verify the link 'Shorts' is visible and clickable.","fullName":"tests.test_men.TestMenPage#test_tc_14_04_04","historyId":"ba331ee3e13ba0e93ebd4d810013f400","time":{"start":1726882629994,"stop":1726882930011,"duration":300017},"description":"Verify that the link 'Shorts' is displayed and clickable","descriptionHtml":"<p>Verify that the link 'Shorts' is displayed and clickable</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.712\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x559e5725b2da <unknown>\n#1 0x559e56f29200 <unknown>\n#2 0x559e56f111c0 <unknown>\n#3 0x559e56f10ead <unknown>\n#4 0x559e56f0eeb8 <unknown>\n#5 0x559e56f0f6bf <unknown>\n#6 0x559e56f1f1eb <unknown>\n#7 0x559e56f355e4 <unknown>\n#8 0x559e56f3ab1b <unknown>\n#9 0x559e56f0fdce <unknown>\n#10 0x559e56f3543f <unknown>\n#11 0x559e56fbc062 <unknown>\n#12 0x559e56f9d673 <unknown>\n#13 0x559e56f6b473 <unknown>\n#14 0x559e56f6c47e <unknown>\n#15 0x559e572220db <unknown>\n#16 0x559e57226071 <unknown>\n#17 0x559e5720e9d5 <unknown>\n#18 0x559e57226bf2 <unknown>\n#19 0x559e571f3b6f <unknown>\n#20 0x559e5724a248 <unknown>\n#21 0x559e5724a417 <unknown>\n#22 0x559e5725a0cc <unknown>\n#23 0x7fb666494ac3 <unknown>","statusTrace":"self = <test_men.TestMenPage object at 0x7fb686945a90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e4663d5b487302df752077909df49522\")>\n\n    @allure.title(\"TC 14.04.04 Verify the link 'Shorts' is visible and clickable.\")\n    def test_tc_14_04_04(self, driver):\n        \"\"\"Verify that the link 'Shorts' is displayed and clickable\"\"\"\n        page = MenPage(driver, MEN_PAGE_URL)\n>       page.open()\n\ntests/test_men.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb6867898d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x559e5724a417 \\\\u003Cunknown>\\\\n#22 0x559e5725a0cc \\\\u003Cunknown>\\\\n#23 0x7fb666494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.712\nE         (Session info: chrome=128.0.6613.137)\nE       Stacktrace:\nE       #0 0x559e5725b2da <unknown>\nE       #1 0x559e56f29200 <unknown>\nE       #2 0x559e56f111c0 <unknown>\nE       #3 0x559e56f10ead <unknown>\nE       #4 0x559e56f0eeb8 <unknown>\nE       #5 0x559e56f0f6bf <unknown>\nE       #6 0x559e56f1f1eb <unknown>\nE       #7 0x559e56f355e4 <unknown>\nE       #8 0x559e56f3ab1b <unknown>\nE       #9 0x559e56f0fdce <unknown>\nE       #10 0x559e56f3543f <unknown>\nE       #11 0x559e56fbc062 <unknown>\nE       #12 0x559e56f9d673 <unknown>\nE       #13 0x559e56f6b473 <unknown>\nE       #14 0x559e56f6c47e <unknown>\nE       #15 0x559e572220db <unknown>\nE       #16 0x559e57226071 <unknown>\nE       #17 0x559e5720e9d5 <unknown>\nE       #18 0x559e57226bf2 <unknown>\nE       #19 0x559e571f3b6f <unknown>\nE       #20 0x559e5724a248 <unknown>\nE       #21 0x559e5724a417 <unknown>\nE       #22 0x559e5725a0cc <unknown>\nE       #23 0x7fb666494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1726881971013,"stop":1726881971075,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1726881971075,"stop":1726881971075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1726882628817,"stop":1726882629993,"duration":1176},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify that the link 'Shorts' is displayed and clickable","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.712\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x559e5725b2da <unknown>\n#1 0x559e56f29200 <unknown>\n#2 0x559e56f111c0 <unknown>\n#3 0x559e56f10ead <unknown>\n#4 0x559e56f0eeb8 <unknown>\n#5 0x559e56f0f6bf <unknown>\n#6 0x559e56f1f1eb <unknown>\n#7 0x559e56f355e4 <unknown>\n#8 0x559e56f3ab1b <unknown>\n#9 0x559e56f0fdce <unknown>\n#10 0x559e56f3543f <unknown>\n#11 0x559e56fbc062 <unknown>\n#12 0x559e56f9d673 <unknown>\n#13 0x559e56f6b473 <unknown>\n#14 0x559e56f6c47e <unknown>\n#15 0x559e572220db <unknown>\n#16 0x559e57226071 <unknown>\n#17 0x559e5720e9d5 <unknown>\n#18 0x559e57226bf2 <unknown>\n#19 0x559e571f3b6f <unknown>\n#20 0x559e5724a248 <unknown>\n#21 0x559e5724a417 <unknown>\n#22 0x559e5725a0cc <unknown>\n#23 0x7fb666494ac3 <unknown>","statusTrace":"self = <test_men.TestMenPage object at 0x7fb686945a90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e4663d5b487302df752077909df49522\")>\n\n    @allure.title(\"TC 14.04.04 Verify the link 'Shorts' is visible and clickable.\")\n    def test_tc_14_04_04(self, driver):\n        \"\"\"Verify that the link 'Shorts' is displayed and clickable\"\"\"\n        page = MenPage(driver, MEN_PAGE_URL)\n>       page.open()\n\ntests/test_men.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb6867898d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x559e5724a417 \\\\u003Cunknown>\\\\n#22 0x559e5725a0cc \\\\u003Cunknown>\\\\n#23 0x7fb666494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.712\nE         (Session info: chrome=128.0.6613.137)\nE       Stacktrace:\nE       #0 0x559e5725b2da <unknown>\nE       #1 0x559e56f29200 <unknown>\nE       #2 0x559e56f111c0 <unknown>\nE       #3 0x559e56f10ead <unknown>\nE       #4 0x559e56f0eeb8 <unknown>\nE       #5 0x559e56f0f6bf <unknown>\nE       #6 0x559e56f1f1eb <unknown>\nE       #7 0x559e56f355e4 <unknown>\nE       #8 0x559e56f3ab1b <unknown>\nE       #9 0x559e56f0fdce <unknown>\nE       #10 0x559e56f3543f <unknown>\nE       #11 0x559e56fbc062 <unknown>\nE       #12 0x559e56f9d673 <unknown>\nE       #13 0x559e56f6b473 <unknown>\nE       #14 0x559e56f6c47e <unknown>\nE       #15 0x559e572220db <unknown>\nE       #16 0x559e57226071 <unknown>\nE       #17 0x559e5720e9d5 <unknown>\nE       #18 0x559e57226bf2 <unknown>\nE       #19 0x559e571f3b6f <unknown>\nE       #20 0x559e5724a248 <unknown>\nE       #21 0x559e5724a417 <unknown>\nE       #22 0x559e5725a0cc <unknown>\nE       #23 0x7fb666494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Open a browser","time":{"start":1726882629994,"stop":1726882930010,"duration":300016},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.712\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n#0 0x559e5725b2da <unknown>\n#1 0x559e56f29200 <unknown>\n#2 0x559e56f111c0 <unknown>\n#3 0x559e56f10ead <unknown>\n#4 0x559e56f0eeb8 <unknown>\n#5 0x559e56f0f6bf <unknown>\n#6 0x559e56f1f1eb <unknown>\n#7 0x559e56f355e4 <unknown>\n#8 0x559e56f3ab1b <unknown>\n#9 0x559e56f0fdce <unknown>\n#10 0x559e56f3543f <unknown>\n#11 0x559e56fbc062 <unknown>\n#12 0x559e56f9d673 <unknown>\n#13 0x559e56f6b473 <unknown>\n#14 0x559e56f6c47e <unknown>\n#15 0x559e572220db <unknown>\n#16 0x559e57226071 <unknown>\n#17 0x559e5720e9d5 <unknown>\n#18 0x559e57226bf2 <unknown>\n#19 0x559e571f3b6f <unknown>\n#20 0x559e5724a248 <unknown>\n#21 0x559e5724a417 <unknown>\n#22 0x559e5725a0cc <unknown>\n#23 0x7fb666494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 19, in open\n    self.driver.get(self.url)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"220bce8cd99d7e85","name":"Screenshot","source":"220bce8cd99d7e85.png","type":"image/png","size":366268},{"uid":"c97e708e946a7e8","name":"HTML source","source":"c97e708e946a7e8.html","type":"text/html","size":104945}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1726882930198,"stop":1726882930288,"duration":90},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1726883420600,"stop":1726883420600,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"MenPage"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_men"},{"name":"subSuite","value":"TestMenPage"},{"name":"host","value":"fv-az570-594"},{"name":"thread","value":"2867-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_men"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"413ed6bc3a7234d5","reportUrl":"https://verafes.github.io/luma_project/439//#testresult/413ed6bc3a7234d5","status":"passed","time":{"start":1726796775601,"stop":1726796776648,"duration":1047}},{"uid":"b6461f3d684e7ffe","reportUrl":"https://verafes.github.io/luma_project/438//#testresult/b6461f3d684e7ffe","status":"passed","time":{"start":1726710440340,"stop":1726710441398,"duration":1058}},{"uid":"96dd93b3707dfbd5","reportUrl":"https://verafes.github.io/luma_project/437//#testresult/96dd93b3707dfbd5","status":"passed","time":{"start":1726623437845,"stop":1726623439348,"duration":1503}},{"uid":"a894090616bea3be","reportUrl":"https://verafes.github.io/luma_project/436//#testresult/a894090616bea3be","status":"passed","time":{"start":1726536214479,"stop":1726536215524,"duration":1045}},{"uid":"6d1d55a9bf93eab2","reportUrl":"https://verafes.github.io/luma_project/435//#testresult/6d1d55a9bf93eab2","status":"passed","time":{"start":1726451437863,"stop":1726451438823,"duration":960}},{"uid":"8dad1048798e7f4b","reportUrl":"https://verafes.github.io/luma_project/434//#testresult/8dad1048798e7f4b","status":"passed","time":{"start":1726365161993,"stop":1726365163222,"duration":1229}}]},"tags":[]},"source":"43f1f71a2863e44d.json","parameterValues":[]}