{"uid":"c003300ecaa53b77","name":"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_01_32_check_text_of_write_for_us_link_on_pages","historyId":"27d4644d484c5fead378278f7d4af6ee","time":{"start":1709082654492,"stop":1709082655621,"duration":1129},"description":"Checks if text of Write for us link is correct on each page in DATA_1","descriptionHtml":"<p>Checks if text of Write for us link is correct on each page in DATA_1</p>\n","status":"failed","statusMessage":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7fc248da4610>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1599c9693f148f09e585a44116bd7495\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes ' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1709082423127,"stop":1709082423190,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1709082423190,"stop":1709082423190,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1709082653533,"stop":1709082654492,"duration":959},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Checks if text of Write for us link is correct on each page in DATA_1","status":"failed","statusMessage":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7fc248da4610>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1599c9693f148f09e585a44116bd7495\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes ' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","steps":[{"name":"Open a browser","time":{"start":1709082654492,"stop":1709082655601,"duration":1109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check the text of Write for us link","time":{"start":1709082655601,"stop":1709082655620,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"5254c347ba015d92","name":"Screenshot","source":"5254c347ba015d92.png","type":"image/png","size":622476},{"uid":"82d7e6125e068bfe","name":"HTML source","source":"82d7e6125e068bfe.html","type":"text/html","size":117705}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1709082655896,"stop":1709082655962,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1709083760120,"stop":1709083760121,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az1249-883"},{"name":"thread","value":"2999-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"89d3d963d01f5f50","reportUrl":"https://verafes.github.io/luma_project/233//#testresult/89d3d963d01f5f50","status":"failed","statusDetails":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1708996249199,"stop":1708996249902,"duration":703}},{"uid":"895184772477ea46","reportUrl":"https://verafes.github.io/luma_project/232//#testresult/895184772477ea46","status":"failed","statusDetails":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1708910047171,"stop":1708910048178,"duration":1007}},{"uid":"926aaa1c8d1d0a1d","reportUrl":"https://verafes.github.io/luma_project/231//#testresult/926aaa1c8d1d0a1d","status":"failed","statusDetails":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1708823784994,"stop":1708823786179,"duration":1185}}]},"tags":[]},"source":"c003300ecaa53b77.json","parameterValues":["'https://magento.softwaretestingboard.com/'"]}