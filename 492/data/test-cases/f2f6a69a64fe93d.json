{"uid":"f2f6a69a64fe93d","name":"TC 10.04.03, 10.04.06, 10.04.09 - Verify that links in Main block, 2 columns block open the correct pages","fullName":"tests.test_sale.TestPromoBlocks#test_tc_10_04_03__06__09","historyId":"91047b8fceab69a5879c0752836ce37d","time":{"start":1731376533857,"stop":1731376535047,"duration":1190},"description":"Check that two links in Gear Deals section lead to the correct pages after click","descriptionHtml":"<p>Check that two links in Gear Deals section lead to the correct pages after click</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"more icon\">...</span> is not clickable at point (1199, 850). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241107/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CM7qy5nY1YkDFe0paAgdcpgI8Q\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=130.0.6723.91)\nStacktrace:\n#0 0x563e7c75d13a <unknown>\n#1 0x563e7c278460 <unknown>\n#2 0x563e7c2cbb26 <unknown>\n#3 0x563e7c2c9aad <unknown>\n#4 0x563e7c2c7557 <unknown>\n#5 0x563e7c2c6971 <unknown>\n#6 0x563e7c2b9f78 <unknown>\n#7 0x563e7c2e9012 <unknown>\n#8 0x563e7c2b9958 <unknown>\n#9 0x563e7c2e91de <unknown>\n#10 0x563e7c307af6 <unknown>\n#11 0x563e7c2e8db3 <unknown>\n#12 0x563e7c2b7c10 <unknown>\n#13 0x563e7c2b8bee <unknown>\n#14 0x563e7c7293cb <unknown>\n#15 0x563e7c72d368 <unknown>\n#16 0x563e7c716eec <unknown>\n#17 0x563e7c72dee7 <unknown>\n#18 0x563e7c6fc13f <unknown>\n#19 0x563e7c74b858 <unknown>\n#20 0x563e7c74ba20 <unknown>\n#21 0x563e7c75bfb6 <unknown>\n#22 0x7f8f5da94ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestPromoBlocks object at 0x7fc0f2db1550>\nsale_page = <pages.sale_page.SalePage object at 0x7fc0f2cc2910>\nelement_locator = ('css selector', '.sale-women .more'), expected_title = 'Gear'\nexpected_url = 'https://magento.softwaretestingboard.com/gear.html'\n\n    @allure.title(\"TC 10.04.03, 10.04.06, 10.04.09 - \"\n                  \"Verify that links in Main block, 2 columns block open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            MainContentPromoBlocks.MAIN_AND_2COLUMNS_BLOCKS_BUTTONS.values(),\n            expected_titles_promo_blocks.values(),\n            expected_urls_promo_blocks.values(),\n        )\n    )\n    def test_tc_10_04_03__06__09(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that two links in Gear Deals section lead to the correct pages after click\"\"\"\n        element_in_promo_block = sale_page.element_is_clickable(element_locator)\n>       element_in_promo_block.click()\n\ntests/test_sale.py:188: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc0f26d3190>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563e7c74ba20 \\\\u003Cunknown>\\\\n#21 0x563e7c75bfb6 \\\\u003Cunknown>\\\\n#22 0x7f8f5da94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"more icon\">...</span> is not clickable at point (1199, 850). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241107/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CM7qy5nY1YkDFe0paAgdcpgI8Q\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=130.0.6723.91)\nE       Stacktrace:\nE       #0 0x563e7c75d13a <unknown>\nE       #1 0x563e7c278460 <unknown>\nE       #2 0x563e7c2cbb26 <unknown>\nE       #3 0x563e7c2c9aad <unknown>\nE       #4 0x563e7c2c7557 <unknown>\nE       #5 0x563e7c2c6971 <unknown>\nE       #6 0x563e7c2b9f78 <unknown>\nE       #7 0x563e7c2e9012 <unknown>\nE       #8 0x563e7c2b9958 <unknown>\nE       #9 0x563e7c2e91de <unknown>\nE       #10 0x563e7c307af6 <unknown>\nE       #11 0x563e7c2e8db3 <unknown>\nE       #12 0x563e7c2b7c10 <unknown>\nE       #13 0x563e7c2b8bee <unknown>\nE       #14 0x563e7c7293cb <unknown>\nE       #15 0x563e7c72d368 <unknown>\nE       #16 0x563e7c716eec <unknown>\nE       #17 0x563e7c72dee7 <unknown>\nE       #18 0x563e7c6fc13f <unknown>\nE       #19 0x563e7c74b858 <unknown>\nE       #20 0x563e7c74ba20 <unknown>\nE       #21 0x563e7c75bfb6 <unknown>\nE       #22 0x7f8f5da94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1731375310573,"stop":1731375310638,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1731375310638,"stop":1731375310638,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1731376530777,"stop":1731376531977,"duration":1200},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sale_page","time":{"start":1731376531977,"stop":1731376533856,"duration":1879},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1731376531978,"stop":1731376533856,"duration":1878},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Check that two links in Gear Deals section lead to the correct pages after click","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"more icon\">...</span> is not clickable at point (1199, 850). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241107/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CM7qy5nY1YkDFe0paAgdcpgI8Q\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=130.0.6723.91)\nStacktrace:\n#0 0x563e7c75d13a <unknown>\n#1 0x563e7c278460 <unknown>\n#2 0x563e7c2cbb26 <unknown>\n#3 0x563e7c2c9aad <unknown>\n#4 0x563e7c2c7557 <unknown>\n#5 0x563e7c2c6971 <unknown>\n#6 0x563e7c2b9f78 <unknown>\n#7 0x563e7c2e9012 <unknown>\n#8 0x563e7c2b9958 <unknown>\n#9 0x563e7c2e91de <unknown>\n#10 0x563e7c307af6 <unknown>\n#11 0x563e7c2e8db3 <unknown>\n#12 0x563e7c2b7c10 <unknown>\n#13 0x563e7c2b8bee <unknown>\n#14 0x563e7c7293cb <unknown>\n#15 0x563e7c72d368 <unknown>\n#16 0x563e7c716eec <unknown>\n#17 0x563e7c72dee7 <unknown>\n#18 0x563e7c6fc13f <unknown>\n#19 0x563e7c74b858 <unknown>\n#20 0x563e7c74ba20 <unknown>\n#21 0x563e7c75bfb6 <unknown>\n#22 0x7f8f5da94ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestPromoBlocks object at 0x7fc0f2db1550>\nsale_page = <pages.sale_page.SalePage object at 0x7fc0f2cc2910>\nelement_locator = ('css selector', '.sale-women .more'), expected_title = 'Gear'\nexpected_url = 'https://magento.softwaretestingboard.com/gear.html'\n\n    @allure.title(\"TC 10.04.03, 10.04.06, 10.04.09 - \"\n                  \"Verify that links in Main block, 2 columns block open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            MainContentPromoBlocks.MAIN_AND_2COLUMNS_BLOCKS_BUTTONS.values(),\n            expected_titles_promo_blocks.values(),\n            expected_urls_promo_blocks.values(),\n        )\n    )\n    def test_tc_10_04_03__06__09(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that two links in Gear Deals section lead to the correct pages after click\"\"\"\n        element_in_promo_block = sale_page.element_is_clickable(element_locator)\n>       element_in_promo_block.click()\n\ntests/test_sale.py:188: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc0f26d3190>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563e7c74ba20 \\\\u003Cunknown>\\\\n#21 0x563e7c75bfb6 \\\\u003Cunknown>\\\\n#22 0x7f8f5da94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"more icon\">...</span> is not clickable at point (1199, 850). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241107/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=3\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CM7qy5nY1YkDFe0paAgdcpgI8Q\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=130.0.6723.91)\nE       Stacktrace:\nE       #0 0x563e7c75d13a <unknown>\nE       #1 0x563e7c278460 <unknown>\nE       #2 0x563e7c2cbb26 <unknown>\nE       #3 0x563e7c2c9aad <unknown>\nE       #4 0x563e7c2c7557 <unknown>\nE       #5 0x563e7c2c6971 <unknown>\nE       #6 0x563e7c2b9f78 <unknown>\nE       #7 0x563e7c2e9012 <unknown>\nE       #8 0x563e7c2b9958 <unknown>\nE       #9 0x563e7c2e91de <unknown>\nE       #10 0x563e7c307af6 <unknown>\nE       #11 0x563e7c2e8db3 <unknown>\nE       #12 0x563e7c2b7c10 <unknown>\nE       #13 0x563e7c2b8bee <unknown>\nE       #14 0x563e7c7293cb <unknown>\nE       #15 0x563e7c72d368 <unknown>\nE       #16 0x563e7c716eec <unknown>\nE       #17 0x563e7c72dee7 <unknown>\nE       #18 0x563e7c6fc13f <unknown>\nE       #19 0x563e7c74b858 <unknown>\nE       #20 0x563e7c74ba20 <unknown>\nE       #21 0x563e7c75bfb6 <unknown>\nE       #22 0x7f8f5da94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Find clickable elements","time":{"start":1731376533858,"stop":1731376533888,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.sale-women .more')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f185dc648de1729b","name":"Screenshot","source":"f185dc648de1729b.png","type":"image/png","size":581215},{"uid":"9ed4e1fa82fb6e3d","name":"HTML source","source":"9ed4e1fa82fb6e3d.html","type":"text/html","size":211220}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1731376535269,"stop":1731376535343,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1731377096886,"stop":1731377096886,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Testing Promo Blocks, Main Block (Women's Deals) and 2 columns block - Men's Bargain, Gear Steals"},{"name":"epic","value":"Sale Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az738-41"},{"name":"thread","value":"2809-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"element_locator","value":"('css selector', '.sale-women .more')"},{"name":"expected_title","value":"'Gear'"},{"name":"expected_url","value":"'https://magento.softwaretestingboard.com/gear.html'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"e590854d6c7d5bb9","reportUrl":"https://verafes.github.io/luma_project/491//#testresult/e590854d6c7d5bb9","status":"passed","time":{"start":1731290174590,"stop":1731290175593,"duration":1003}},{"uid":"5f3d7e149cdbca71","reportUrl":"https://verafes.github.io/luma_project/490//#testresult/5f3d7e149cdbca71","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"more icon\">...</span> is not clickable at point (1199, 850). Other element would receive the click: <iframe id=\"aswift_2\" name=\"aswift_2\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241106/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=3&amp;uci=a!3&amp;btvi=2\" data-google-container-id=\"a!3\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CODS0LzV0IkDFWiZfwQd2Dcs8g\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=130.0.6723.91)\nStacktrace:\n#0 0x55d00b96d13a <unknown>\n#1 0x55d00b488460 <unknown>\n#2 0x55d00b4dbb26 <unknown>\n#3 0x55d00b4d9aad <unknown>\n#4 0x55d00b4d7557 <unknown>\n#5 0x55d00b4d6971 <unknown>\n#6 0x55d00b4c9f78 <unknown>\n#7 0x55d00b4f9012 <unknown>\n#8 0x55d00b4c9958 <unknown>\n#9 0x55d00b4f91de <unknown>\n#10 0x55d00b517af6 <unknown>\n#11 0x55d00b4f8db3 <unknown>\n#12 0x55d00b4c7c10 <unknown>\n#13 0x55d00b4c8bee <unknown>\n#14 0x55d00b9393cb <unknown>\n#15 0x55d00b93d368 <unknown>\n#16 0x55d00b926eec <unknown>\n#17 0x55d00b93dee7 <unknown>\n#18 0x55d00b90c13f <unknown>\n#19 0x55d00b95b858 <unknown>\n#20 0x55d00b95ba20 <unknown>\n#21 0x55d00b96bfb6 <unknown>\n#22 0x7f2857094ac3 <unknown>","time":{"start":1731204003464,"stop":1731204004743,"duration":1279}}]},"tags":[]},"source":"f2f6a69a64fe93d.json","parameterValues":["('css selector', '.sale-women .more')","'Gear'","'https://magento.softwaretestingboard.com/gear.html'"]}