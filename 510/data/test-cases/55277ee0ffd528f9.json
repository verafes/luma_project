{"uid":"55277ee0ffd528f9","name":"TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation","fullName":"tests.test_sign_in.TestFailedLogin#test_03_02_01_to_03_02_10_login","historyId":"13d92d3fc34ad3cd8390ae027b651bbc","time":{"start":1732933741260,"stop":1732933744854,"duration":3594},"description":"Check Success and Failed Login, no error validation","descriptionHtml":"<p>Check Success and Failed Login, no error validation</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 772). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x5632177b031a <unknown>\n#1 0x5632172c66e0 <unknown>\n#2 0x56321731c0f6 <unknown>\n#3 0x56321731a05d <unknown>\n#4 0x563217317775 <unknown>\n#5 0x56321731692f <unknown>\n#6 0x56321730a0d5 <unknown>\n#7 0x563217339462 <unknown>\n#8 0x563217309a18 <unknown>\n#9 0x56321733962e <unknown>\n#10 0x563217357ed7 <unknown>\n#11 0x563217339203 <unknown>\n#12 0x563217307cc0 <unknown>\n#13 0x563217308c9e <unknown>\n#14 0x56321777dd0b <unknown>\n#15 0x563217781c92 <unknown>\n#16 0x56321776ab3c <unknown>\n#17 0x563217782807 <unknown>\n#18 0x5632177500df <unknown>\n#19 0x56321779f578 <unknown>\n#20 0x56321779f740 <unknown>\n#21 0x5632177af196 <unknown>\n#22 0x7eff64494ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7f89cde9fe10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d3b7a59b18411c24cdff6d9f3003255\")>\nemail = 'teston110@mailinator.com', password = 'Test#12p@ssword'\n\n    @allure.title('TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation')\n    @pytest.mark.parametrize('email, password', LOGIN)\n    def test_03_02_01_to_03_02_10_login(self, driver, email, password):\n        \"\"\"Check Success and Failed Login, no error validation\"\"\"\n        sign_in_page = SignInPage(driver, SIGN_IN_URL)\n        sign_in_page.open()\n>       sign_in_page.fill_in_email_field(email)\n\ntests/test_sign_in.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:54: in fill_in_email_field\n    self.fill_in_field(self.check_customer_email_field_is_clickable(), email)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f89cf5d7750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56321779f740 \\\\u003Cunknown>\\\\n#21 0x5632177af196 \\\\u003Cunknown>\\\\n#22 0x7eff64494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 772). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x5632177b031a <unknown>\nE       #1 0x5632172c66e0 <unknown>\nE       #2 0x56321731c0f6 <unknown>\nE       #3 0x56321731a05d <unknown>\nE       #4 0x563217317775 <unknown>\nE       #5 0x56321731692f <unknown>\nE       #6 0x56321730a0d5 <unknown>\nE       #7 0x563217339462 <unknown>\nE       #8 0x563217309a18 <unknown>\nE       #9 0x56321733962e <unknown>\nE       #10 0x563217357ed7 <unknown>\nE       #11 0x563217339203 <unknown>\nE       #12 0x563217307cc0 <unknown>\nE       #13 0x563217308c9e <unknown>\nE       #14 0x56321777dd0b <unknown>\nE       #15 0x563217781c92 <unknown>\nE       #16 0x56321776ab3c <unknown>\nE       #17 0x563217782807 <unknown>\nE       #18 0x5632177500df <unknown>\nE       #19 0x56321779f578 <unknown>\nE       #20 0x56321779f740 <unknown>\nE       #21 0x5632177af196 <unknown>\nE       #22 0x7eff64494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732930915917,"stop":1732930915981,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1732930915981,"stop":1732930915981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732933740066,"stop":1732933741259,"duration":1193},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check Success and Failed Login, no error validation","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 772). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x5632177b031a <unknown>\n#1 0x5632172c66e0 <unknown>\n#2 0x56321731c0f6 <unknown>\n#3 0x56321731a05d <unknown>\n#4 0x563217317775 <unknown>\n#5 0x56321731692f <unknown>\n#6 0x56321730a0d5 <unknown>\n#7 0x563217339462 <unknown>\n#8 0x563217309a18 <unknown>\n#9 0x56321733962e <unknown>\n#10 0x563217357ed7 <unknown>\n#11 0x563217339203 <unknown>\n#12 0x563217307cc0 <unknown>\n#13 0x563217308c9e <unknown>\n#14 0x56321777dd0b <unknown>\n#15 0x563217781c92 <unknown>\n#16 0x56321776ab3c <unknown>\n#17 0x563217782807 <unknown>\n#18 0x5632177500df <unknown>\n#19 0x56321779f578 <unknown>\n#20 0x56321779f740 <unknown>\n#21 0x5632177af196 <unknown>\n#22 0x7eff64494ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7f89cde9fe10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d3b7a59b18411c24cdff6d9f3003255\")>\nemail = 'teston110@mailinator.com', password = 'Test#12p@ssword'\n\n    @allure.title('TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation')\n    @pytest.mark.parametrize('email, password', LOGIN)\n    def test_03_02_01_to_03_02_10_login(self, driver, email, password):\n        \"\"\"Check Success and Failed Login, no error validation\"\"\"\n        sign_in_page = SignInPage(driver, SIGN_IN_URL)\n        sign_in_page.open()\n>       sign_in_page.fill_in_email_field(email)\n\ntests/test_sign_in.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:54: in fill_in_email_field\n    self.fill_in_field(self.check_customer_email_field_is_clickable(), email)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f89cf5d7750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56321779f740 \\\\u003Cunknown>\\\\n#21 0x5632177af196 \\\\u003Cunknown>\\\\n#22 0x7eff64494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 772). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x5632177b031a <unknown>\nE       #1 0x5632172c66e0 <unknown>\nE       #2 0x56321731c0f6 <unknown>\nE       #3 0x56321731a05d <unknown>\nE       #4 0x563217317775 <unknown>\nE       #5 0x56321731692f <unknown>\nE       #6 0x56321730a0d5 <unknown>\nE       #7 0x563217339462 <unknown>\nE       #8 0x563217309a18 <unknown>\nE       #9 0x56321733962e <unknown>\nE       #10 0x563217357ed7 <unknown>\nE       #11 0x563217339203 <unknown>\nE       #12 0x563217307cc0 <unknown>\nE       #13 0x563217308c9e <unknown>\nE       #14 0x56321777dd0b <unknown>\nE       #15 0x563217781c92 <unknown>\nE       #16 0x56321776ab3c <unknown>\nE       #17 0x563217782807 <unknown>\nE       #18 0x5632177500df <unknown>\nE       #19 0x56321779f578 <unknown>\nE       #20 0x56321779f740 <unknown>\nE       #21 0x5632177af196 <unknown>\nE       #22 0x7eff64494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open a browser","time":{"start":1732933741260,"stop":1732933743533,"duration":2273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Fill in Email field","time":{"start":1732933743533,"stop":1732933744854,"duration":1321},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 772). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x5632177b031a <unknown>\n#1 0x5632172c66e0 <unknown>\n#2 0x56321731c0f6 <unknown>\n#3 0x56321731a05d <unknown>\n#4 0x563217317775 <unknown>\n#5 0x56321731692f <unknown>\n#6 0x56321730a0d5 <unknown>\n#7 0x563217339462 <unknown>\n#8 0x563217309a18 <unknown>\n#9 0x56321733962e <unknown>\n#10 0x563217357ed7 <unknown>\n#11 0x563217339203 <unknown>\n#12 0x563217307cc0 <unknown>\n#13 0x563217308c9e <unknown>\n#14 0x56321777dd0b <unknown>\n#15 0x563217781c92 <unknown>\n#16 0x56321776ab3c <unknown>\n#17 0x563217782807 <unknown>\n#18 0x5632177500df <unknown>\n#19 0x56321779f578 <unknown>\n#20 0x56321779f740 <unknown>\n#21 0x5632177af196 <unknown>\n#22 0x7eff64494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 54, in fill_in_email_field\n    self.fill_in_field(self.check_customer_email_field_is_clickable(), email)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check Email field is clickable","time":{"start":1732933743533,"stop":1732933743746,"duration":213},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1732933743533,"stop":1732933743746,"duration":213},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#email')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1732933743746,"stop":1732933744853,"duration":1107},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 772). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x5632177b031a <unknown>\n#1 0x5632172c66e0 <unknown>\n#2 0x56321731c0f6 <unknown>\n#3 0x56321731a05d <unknown>\n#4 0x563217317775 <unknown>\n#5 0x56321731692f <unknown>\n#6 0x56321730a0d5 <unknown>\n#7 0x563217339462 <unknown>\n#8 0x563217309a18 <unknown>\n#9 0x56321733962e <unknown>\n#10 0x563217357ed7 <unknown>\n#11 0x563217339203 <unknown>\n#12 0x563217307cc0 <unknown>\n#13 0x563217308c9e <unknown>\n#14 0x56321777dd0b <unknown>\n#15 0x563217781c92 <unknown>\n#16 0x56321776ab3c <unknown>\n#17 0x563217782807 <unknown>\n#18 0x5632177500df <unknown>\n#19 0x56321779f578 <unknown>\n#20 0x56321779f740 <unknown>\n#21 0x5632177af196 <unknown>\n#22 0x7eff64494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1732933743746,"stop":1732933743775,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"8d3b7a59b18411c24cdff6d9f3003255\", element=\"f.584964BF53437F1C3721CD008F9999D8.d.E3B31FB75F5ACAAB32DB86600D9C77FF.e.3\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"8d3b7a59b18411c24cdff6d9f3003255\", element=\"f.584964BF53437F1C3721CD008F9999D8.d.E3B31FB75F5ACAAB32DB86600D9C77FF.e.3\")>"},{"name":"value","value":"'teston110@mailinator.com'"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"email","value":"'teston110@mailinator.com'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"37133677a4e13df3","name":"Screenshot","source":"37133677a4e13df3.png","type":"image/png","size":164857},{"uid":"cc2704cf26bd3685","name":"HTML source","source":"cc2704cf26bd3685.html","type":"text/html","size":168159}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732933744988,"stop":1732933745066,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1732933874895,"stop":1732933874895,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Failed Login Functionality"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sign_in"},{"name":"subSuite","value":"TestFailedLogin"},{"name":"host","value":"fv-az1780-276"},{"name":"thread","value":"2836-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'teston110@mailinator.com'"},{"name":"password","value":"'Test#12p@ssword'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":3,"unknown":0,"total":7},"items":[{"uid":"29aa96acb39c1a79","reportUrl":"https://verafes.github.io/luma_project/509//#testresult/29aa96acb39c1a79","status":"passed","time":{"start":1732846332624,"stop":1732846336822,"duration":4198}},{"uid":"555d2d552a30f077","reportUrl":"https://verafes.github.io/luma_project/508//#testresult/555d2d552a30f077","status":"passed","time":{"start":1732759744120,"stop":1732759748233,"duration":4113}},{"uid":"c93aedebe4e7a530","reportUrl":"https://verafes.github.io/luma_project/507//#testresult/c93aedebe4e7a530","status":"passed","time":{"start":1732673441493,"stop":1732673445282,"duration":3789}},{"uid":"caf1231c2809ece4","reportUrl":"https://verafes.github.io/luma_project/506//#testresult/caf1231c2809ece4","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CIfetqz9-IkDFWoZaAgdYT8isg\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x562602ec94ca <unknown>\n#1 0x5626029dc620 <unknown>\n#2 0x562602a31ff6 <unknown>\n#3 0x562602a2ff66 <unknown>\n#4 0x562602a2d685 <unknown>\n#5 0x562602a2c848 <unknown>\n#6 0x562602a1fff5 <unknown>\n#7 0x562602a4f372 <unknown>\n#8 0x562602a1f938 <unknown>\n#9 0x562602a4f53e <unknown>\n#10 0x562602a6dde0 <unknown>\n#11 0x562602a4f113 <unknown>\n#12 0x562602a1dbe0 <unknown>\n#13 0x562602a1ebbe <unknown>\n#14 0x562602e95e4b <unknown>\n#15 0x562602e99de2 <unknown>\n#16 0x562602e82d2c <unknown>\n#17 0x562602e9a957 <unknown>\n#18 0x562602e684bf <unknown>\n#19 0x562602eb8348 <unknown>\n#20 0x562602eb8510 <unknown>\n#21 0x562602ec8346 <unknown>\n#22 0x7fed84094ac3 <unknown>","time":{"start":1732589094169,"stop":1732589098120,"duration":3951}},{"uid":"4c9b0759aac9f6b1","reportUrl":"https://verafes.github.io/luma_project/505//#testresult/4c9b0759aac9f6b1","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 772). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CPjZw8y49okDFQoCdgYdsBcb6Q\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x55e526e674ca <unknown>\n#1 0x55e52697a620 <unknown>\n#2 0x55e5269cfff6 <unknown>\n#3 0x55e5269cdf66 <unknown>\n#4 0x55e5269cb685 <unknown>\n#5 0x55e5269ca848 <unknown>\n#6 0x55e5269be1ba <unknown>\n#7 0x55e5269ed372 <unknown>\n#8 0x55e5269bd938 <unknown>\n#9 0x55e5269ed53e <unknown>\n#10 0x55e526a0bde0 <unknown>\n#11 0x55e5269ed113 <unknown>\n#12 0x55e5269bbbe0 <unknown>\n#13 0x55e5269bcbbe <unknown>\n#14 0x55e526e33e4b <unknown>\n#15 0x55e526e37de2 <unknown>\n#16 0x55e526e20d2c <unknown>\n#17 0x55e526e38957 <unknown>\n#18 0x55e526e064bf <unknown>\n#19 0x55e526e56348 <unknown>\n#20 0x55e526e56510 <unknown>\n#21 0x55e526e66346 <unknown>\n#22 0x7fc6dfc94ac3 <unknown>","time":{"start":1732501919962,"stop":1732501923765,"duration":3803}},{"uid":"de7f7bcd69ab3beb","reportUrl":"https://verafes.github.io/luma_project/504//#testresult/de7f7bcd69ab3beb","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x5564284b34ca <unknown>\n#1 0x556427fc6620 <unknown>\n#2 0x55642801bff6 <unknown>\n#3 0x556428019f66 <unknown>\n#4 0x556428017685 <unknown>\n#5 0x556428016848 <unknown>\n#6 0x556428009ff5 <unknown>\n#7 0x556428039372 <unknown>\n#8 0x556428009938 <unknown>\n#9 0x55642803953e <unknown>\n#10 0x556428057de0 <unknown>\n#11 0x556428039113 <unknown>\n#12 0x556428007be0 <unknown>\n#13 0x556428008bbe <unknown>\n#14 0x55642847fe4b <unknown>\n#15 0x556428483de2 <unknown>\n#16 0x55642846cd2c <unknown>\n#17 0x556428484957 <unknown>\n#18 0x5564284524bf <unknown>\n#19 0x5564284a2348 <unknown>\n#20 0x5564284a2510 <unknown>\n#21 0x5564284b2346 <unknown>\n#22 0x7fa0f8894ac3 <unknown>","time":{"start":1732414800699,"stop":1732414804269,"duration":3570}}]},"tags":[]},"source":"55277ee0ffd528f9.json","parameterValues":["'teston110@mailinator.com'","'Test#12p@ssword'"]}