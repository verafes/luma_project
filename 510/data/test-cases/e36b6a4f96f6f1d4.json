{"uid":"e36b6a4f96f6f1d4","name":"TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation","fullName":"tests.test_sign_in.TestFailedLogin#test_03_02_01_to_03_02_10_login","historyId":"d76dca757560c211c096f0b7a1769d43","time":{"start":1732933736447,"stop":1732933739866,"duration":3419},"description":"Check Success and Failed Login, no error validation","descriptionHtml":"<p>Check Success and Failed Login, no error validation</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <div class=\"grippy-host\"></div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x5645787dc31a <unknown>\n#1 0x5645782f26e0 <unknown>\n#2 0x5645783480f6 <unknown>\n#3 0x56457834605d <unknown>\n#4 0x564578343775 <unknown>\n#5 0x56457834292f <unknown>\n#6 0x5645783360d5 <unknown>\n#7 0x564578365462 <unknown>\n#8 0x564578335a18 <unknown>\n#9 0x56457836562e <unknown>\n#10 0x564578383ed7 <unknown>\n#11 0x564578365203 <unknown>\n#12 0x564578333cc0 <unknown>\n#13 0x564578334c9e <unknown>\n#14 0x5645787a9d0b <unknown>\n#15 0x5645787adc92 <unknown>\n#16 0x564578796b3c <unknown>\n#17 0x5645787ae807 <unknown>\n#18 0x56457877c0df <unknown>\n#19 0x5645787cb578 <unknown>\n#20 0x5645787cb740 <unknown>\n#21 0x5645787db196 <unknown>\n#22 0x7f8e9ce94ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7f89cde808d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b0fe3408cafd3ab382a11ba4b13f2d5\")>\nemail = 'teston120@mailinator.com', password = 'Test#12p@ssword'\n\n    @allure.title('TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation')\n    @pytest.mark.parametrize('email, password', LOGIN)\n    def test_03_02_01_to_03_02_10_login(self, driver, email, password):\n        \"\"\"Check Success and Failed Login, no error validation\"\"\"\n        sign_in_page = SignInPage(driver, SIGN_IN_URL)\n        sign_in_page.open()\n>       sign_in_page.fill_in_email_field(email)\n\ntests/test_sign_in.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:54: in fill_in_email_field\n    self.fill_in_field(self.check_customer_email_field_is_clickable(), email)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f89cf636a90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5645787cb740 \\\\u003Cunknown>\\\\n#21 0x5645787db196 \\\\u003Cunknown>\\\\n#22 0x7f8e9ce94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <div class=\"grippy-host\"></div>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x5645787dc31a <unknown>\nE       #1 0x5645782f26e0 <unknown>\nE       #2 0x5645783480f6 <unknown>\nE       #3 0x56457834605d <unknown>\nE       #4 0x564578343775 <unknown>\nE       #5 0x56457834292f <unknown>\nE       #6 0x5645783360d5 <unknown>\nE       #7 0x564578365462 <unknown>\nE       #8 0x564578335a18 <unknown>\nE       #9 0x56457836562e <unknown>\nE       #10 0x564578383ed7 <unknown>\nE       #11 0x564578365203 <unknown>\nE       #12 0x564578333cc0 <unknown>\nE       #13 0x564578334c9e <unknown>\nE       #14 0x5645787a9d0b <unknown>\nE       #15 0x5645787adc92 <unknown>\nE       #16 0x564578796b3c <unknown>\nE       #17 0x5645787ae807 <unknown>\nE       #18 0x56457877c0df <unknown>\nE       #19 0x5645787cb578 <unknown>\nE       #20 0x5645787cb740 <unknown>\nE       #21 0x5645787db196 <unknown>\nE       #22 0x7f8e9ce94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732930915917,"stop":1732930915981,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1732930915981,"stop":1732930915981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732933735237,"stop":1732933736446,"duration":1209},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check Success and Failed Login, no error validation","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <div class=\"grippy-host\"></div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x5645787dc31a <unknown>\n#1 0x5645782f26e0 <unknown>\n#2 0x5645783480f6 <unknown>\n#3 0x56457834605d <unknown>\n#4 0x564578343775 <unknown>\n#5 0x56457834292f <unknown>\n#6 0x5645783360d5 <unknown>\n#7 0x564578365462 <unknown>\n#8 0x564578335a18 <unknown>\n#9 0x56457836562e <unknown>\n#10 0x564578383ed7 <unknown>\n#11 0x564578365203 <unknown>\n#12 0x564578333cc0 <unknown>\n#13 0x564578334c9e <unknown>\n#14 0x5645787a9d0b <unknown>\n#15 0x5645787adc92 <unknown>\n#16 0x564578796b3c <unknown>\n#17 0x5645787ae807 <unknown>\n#18 0x56457877c0df <unknown>\n#19 0x5645787cb578 <unknown>\n#20 0x5645787cb740 <unknown>\n#21 0x5645787db196 <unknown>\n#22 0x7f8e9ce94ac3 <unknown>","statusTrace":"self = <test_sign_in.TestFailedLogin object at 0x7f89cde808d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b0fe3408cafd3ab382a11ba4b13f2d5\")>\nemail = 'teston120@mailinator.com', password = 'Test#12p@ssword'\n\n    @allure.title('TC 03.02.01 to 03_02_10 Verify Failed Login, no error validation')\n    @pytest.mark.parametrize('email, password', LOGIN)\n    def test_03_02_01_to_03_02_10_login(self, driver, email, password):\n        \"\"\"Check Success and Failed Login, no error validation\"\"\"\n        sign_in_page = SignInPage(driver, SIGN_IN_URL)\n        sign_in_page.open()\n>       sign_in_page.fill_in_email_field(email)\n\ntests/test_sign_in.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:54: in fill_in_email_field\n    self.fill_in_field(self.check_customer_email_field_is_clickable(), email)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f89cf636a90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5645787cb740 \\\\u003Cunknown>\\\\n#21 0x5645787db196 \\\\u003Cunknown>\\\\n#22 0x7f8e9ce94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <div class=\"grippy-host\"></div>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x5645787dc31a <unknown>\nE       #1 0x5645782f26e0 <unknown>\nE       #2 0x5645783480f6 <unknown>\nE       #3 0x56457834605d <unknown>\nE       #4 0x564578343775 <unknown>\nE       #5 0x56457834292f <unknown>\nE       #6 0x5645783360d5 <unknown>\nE       #7 0x564578365462 <unknown>\nE       #8 0x564578335a18 <unknown>\nE       #9 0x56457836562e <unknown>\nE       #10 0x564578383ed7 <unknown>\nE       #11 0x564578365203 <unknown>\nE       #12 0x564578333cc0 <unknown>\nE       #13 0x564578334c9e <unknown>\nE       #14 0x5645787a9d0b <unknown>\nE       #15 0x5645787adc92 <unknown>\nE       #16 0x564578796b3c <unknown>\nE       #17 0x5645787ae807 <unknown>\nE       #18 0x56457877c0df <unknown>\nE       #19 0x5645787cb578 <unknown>\nE       #20 0x5645787cb740 <unknown>\nE       #21 0x5645787db196 <unknown>\nE       #22 0x7f8e9ce94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open a browser","time":{"start":1732933736447,"stop":1732933738691,"duration":2244},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Fill in Email field","time":{"start":1732933738691,"stop":1732933739865,"duration":1174},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <div class=\"grippy-host\"></div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x5645787dc31a <unknown>\n#1 0x5645782f26e0 <unknown>\n#2 0x5645783480f6 <unknown>\n#3 0x56457834605d <unknown>\n#4 0x564578343775 <unknown>\n#5 0x56457834292f <unknown>\n#6 0x5645783360d5 <unknown>\n#7 0x564578365462 <unknown>\n#8 0x564578335a18 <unknown>\n#9 0x56457836562e <unknown>\n#10 0x564578383ed7 <unknown>\n#11 0x564578365203 <unknown>\n#12 0x564578333cc0 <unknown>\n#13 0x564578334c9e <unknown>\n#14 0x5645787a9d0b <unknown>\n#15 0x5645787adc92 <unknown>\n#16 0x564578796b3c <unknown>\n#17 0x5645787ae807 <unknown>\n#18 0x56457877c0df <unknown>\n#19 0x5645787cb578 <unknown>\n#20 0x5645787cb740 <unknown>\n#21 0x5645787db196 <unknown>\n#22 0x7f8e9ce94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 54, in fill_in_email_field\n    self.fill_in_field(self.check_customer_email_field_is_clickable(), email)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check Email field is clickable","time":{"start":1732933738691,"stop":1732933738724,"duration":33},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1732933738691,"stop":1732933738724,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#email')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1732933738724,"stop":1732933739865,"duration":1141},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <div class=\"grippy-host\"></div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x5645787dc31a <unknown>\n#1 0x5645782f26e0 <unknown>\n#2 0x5645783480f6 <unknown>\n#3 0x56457834605d <unknown>\n#4 0x564578343775 <unknown>\n#5 0x56457834292f <unknown>\n#6 0x5645783360d5 <unknown>\n#7 0x564578365462 <unknown>\n#8 0x564578335a18 <unknown>\n#9 0x56457836562e <unknown>\n#10 0x564578383ed7 <unknown>\n#11 0x564578365203 <unknown>\n#12 0x564578333cc0 <unknown>\n#13 0x564578334c9e <unknown>\n#14 0x5645787a9d0b <unknown>\n#15 0x5645787adc92 <unknown>\n#16 0x564578796b3c <unknown>\n#17 0x5645787ae807 <unknown>\n#18 0x56457877c0df <unknown>\n#19 0x5645787cb578 <unknown>\n#20 0x5645787cb740 <unknown>\n#21 0x5645787db196 <unknown>\n#22 0x7f8e9ce94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1732933738724,"stop":1732933738741,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"2b0fe3408cafd3ab382a11ba4b13f2d5\", element=\"f.3D5AB1750C46FD633BD0FA741BFAC0F1.d.D6C912AB3282B121CDCF1CB9EF64D945.e.3\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"2b0fe3408cafd3ab382a11ba4b13f2d5\", element=\"f.3D5AB1750C46FD633BD0FA741BFAC0F1.d.D6C912AB3282B121CDCF1CB9EF64D945.e.3\")>"},{"name":"value","value":"'teston120@mailinator.com'"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"email","value":"'teston120@mailinator.com'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9378bd2a9a2ba1df","name":"Screenshot","source":"9378bd2a9a2ba1df.png","type":"image/png","size":56032},{"uid":"49b731e49d927498","name":"HTML source","source":"49b731e49d927498.html","type":"text/html","size":107088}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732933739990,"stop":1732933740064,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1732933874895,"stop":1732933874895,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Failed Login Functionality"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sign_in"},{"name":"subSuite","value":"TestFailedLogin"},{"name":"host","value":"fv-az1780-276"},{"name":"thread","value":"2836-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'teston120@mailinator.com'"},{"name":"password","value":"'Test#12p@ssword'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":3,"unknown":0,"total":7},"items":[{"uid":"d2bf0a93a730a23","reportUrl":"https://verafes.github.io/luma_project/509//#testresult/d2bf0a93a730a23","status":"passed","time":{"start":1732846326623,"stop":1732846331269,"duration":4646}},{"uid":"add79f9ca36e4183","reportUrl":"https://verafes.github.io/luma_project/508//#testresult/add79f9ca36e4183","status":"passed","time":{"start":1732759738334,"stop":1732759742762,"duration":4428}},{"uid":"1badff279f206472","reportUrl":"https://verafes.github.io/luma_project/507//#testresult/1badff279f206472","status":"passed","time":{"start":1732673436157,"stop":1732673440215,"duration":4058}},{"uid":"d4be1ef878daa6b0","reportUrl":"https://verafes.github.io/luma_project/506//#testresult/d4be1ef878daa6b0","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CMaRh6r9-IkDFW4jiAkdgh8zLQ\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x5591362f24ca <unknown>\n#1 0x559135e05620 <unknown>\n#2 0x559135e5aff6 <unknown>\n#3 0x559135e58f66 <unknown>\n#4 0x559135e56685 <unknown>\n#5 0x559135e55848 <unknown>\n#6 0x559135e48ff5 <unknown>\n#7 0x559135e78372 <unknown>\n#8 0x559135e48938 <unknown>\n#9 0x559135e7853e <unknown>\n#10 0x559135e96de0 <unknown>\n#11 0x559135e78113 <unknown>\n#12 0x559135e46be0 <unknown>\n#13 0x559135e47bbe <unknown>\n#14 0x5591362bee4b <unknown>\n#15 0x5591362c2de2 <unknown>\n#16 0x5591362abd2c <unknown>\n#17 0x5591362c3957 <unknown>\n#18 0x5591362914bf <unknown>\n#19 0x5591362e1348 <unknown>\n#20 0x5591362e1510 <unknown>\n#21 0x5591362f1346 <unknown>\n#22 0x7f88cf694ac3 <unknown>","time":{"start":1732589089369,"stop":1732589092754,"duration":3385}},{"uid":"b0f1c3b08f60c4ce","reportUrl":"https://verafes.github.io/luma_project/505//#testresult/b0f1c3b08f60c4ce","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CNvBisq49okDFU2LfwQdFYgJhQ\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x556e7e5524ca <unknown>\n#1 0x556e7e065620 <unknown>\n#2 0x556e7e0baff6 <unknown>\n#3 0x556e7e0b8f66 <unknown>\n#4 0x556e7e0b6685 <unknown>\n#5 0x556e7e0b5848 <unknown>\n#6 0x556e7e0a8ff5 <unknown>\n#7 0x556e7e0d8372 <unknown>\n#8 0x556e7e0a8938 <unknown>\n#9 0x556e7e0d853e <unknown>\n#10 0x556e7e0f6de0 <unknown>\n#11 0x556e7e0d8113 <unknown>\n#12 0x556e7e0a6be0 <unknown>\n#13 0x556e7e0a7bbe <unknown>\n#14 0x556e7e51ee4b <unknown>\n#15 0x556e7e522de2 <unknown>\n#16 0x556e7e50bd2c <unknown>\n#17 0x556e7e523957 <unknown>\n#18 0x556e7e4f14bf <unknown>\n#19 0x556e7e541348 <unknown>\n#20 0x556e7e541510 <unknown>\n#21 0x556e7e551346 <unknown>\n#22 0x7ff9a0c94ac3 <unknown>","time":{"start":1732501914845,"stop":1732501918498,"duration":3653}},{"uid":"a5c1b18c56c4e444","reportUrl":"https://verafes.github.io/luma_project/504//#testresult/a5c1b18c56c4e444","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[username]\" value=\"\" autocomplete=\"off\" id=\"email\" type=\"email\" class=\"input-text\" title=\"Email\" data-validate=\"{required:true, 'validate-email':true}\" aria-required=\"true\"> is not clickable at point (560, 767). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241120/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CLH11IT084kDFXENaAgdJb48jA\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=131.0.6778.69)\nStacktrace:\n#0 0x563637e774ca <unknown>\n#1 0x56363798a620 <unknown>\n#2 0x5636379dfff6 <unknown>\n#3 0x5636379ddf66 <unknown>\n#4 0x5636379db685 <unknown>\n#5 0x5636379da848 <unknown>\n#6 0x5636379ce1ba <unknown>\n#7 0x5636379fd372 <unknown>\n#8 0x5636379cd938 <unknown>\n#9 0x5636379fd53e <unknown>\n#10 0x563637a1bde0 <unknown>\n#11 0x5636379fd113 <unknown>\n#12 0x5636379cbbe0 <unknown>\n#13 0x5636379ccbbe <unknown>\n#14 0x563637e43e4b <unknown>\n#15 0x563637e47de2 <unknown>\n#16 0x563637e30d2c <unknown>\n#17 0x563637e48957 <unknown>\n#18 0x563637e164bf <unknown>\n#19 0x563637e66348 <unknown>\n#20 0x563637e66510 <unknown>\n#21 0x563637e76346 <unknown>\n#22 0x7fe5e9294ac3 <unknown>","time":{"start":1732414796345,"stop":1732414799250,"duration":2905}}]},"tags":[]},"source":"e36b6a4f96f6f1d4.json","parameterValues":["'teston120@mailinator.com'","'Test#12p@ssword'"]}