{"uid":"bc365d3843640956","name":"TC 13.01.44 - Check block 1 'home-pants' in section 2 of the Promo Block is present in the DOM tree","fullName":"tests.test_main_page.TestPromoBlock#test_tc_13_01_44_check_block1_in_section2_is_present","historyId":"b749be5c65ee671833c26435322ffa3a","time":{"start":1732931919536,"stop":1732932219559,"duration":300023},"description":"This test checks if block 1 'home-pants' in section 2 in the Promo Block is present\n            in the DOM tree on the main page","descriptionHtml":"<p>This test checks if block 1 'home-pants' in section 2 in the Promo Block is present<br />\nin the DOM tree on the main page</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.576\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55560204531a <unknown>\n#1 0x555601b5b6e0 <unknown>\n#2 0x555601b439d0 <unknown>\n#3 0x555601b436a2 <unknown>\n#4 0x555601b416c6 <unknown>\n#5 0x555601b41eaf <unknown>\n#6 0x555601b51747 <unknown>\n#7 0x555601b68564 <unknown>\n#8 0x555601b6e3eb <unknown>\n#9 0x555601b425b7 <unknown>\n#10 0x555601b6837a <unknown>\n#11 0x555601bed256 <unknown>\n#12 0x555601bce203 <unknown>\n#13 0x555601b9ccc0 <unknown>\n#14 0x555601b9dc9e <unknown>\n#15 0x555602012d0b <unknown>\n#16 0x555602016c92 <unknown>\n#17 0x555601fffb3c <unknown>\n#18 0x555602017807 <unknown>\n#19 0x555601fe50df <unknown>\n#20 0x555602034578 <unknown>\n#21 0x555602034740 <unknown>\n#22 0x555602044196 <unknown>\n#23 0x7f2c2a294ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestPromoBlock object at 0x7f89cfbcb410>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b5cd9e7e43a5361a4e9e8cdbd68e7512\")>\n\n    @allure.title(\"TC 13.01.44 - Check block 1 'home-pants' in section 2 of the Promo Block is present \"\n                  \"in the DOM tree\")\n    def test_tc_13_01_44_check_block1_in_section2_is_present(self, driver):\n        \"\"\"This test checks if block 1 'home-pants' in section 2 in the Promo Block is present\n        in the DOM tree on the main page\"\"\"\n        page = PromoBlock(driver, MAIN_PAGE_URL)\n>       page.open()\n\ntests/test_main_page.py:582: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f89cfa97a10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x555602034740 \\\\u003Cunknown>\\\\n#22 0x555602044196 \\\\u003Cunknown>\\\\n#23 0x7f2c2a294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.576\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x55560204531a <unknown>\nE       #1 0x555601b5b6e0 <unknown>\nE       #2 0x555601b439d0 <unknown>\nE       #3 0x555601b436a2 <unknown>\nE       #4 0x555601b416c6 <unknown>\nE       #5 0x555601b41eaf <unknown>\nE       #6 0x555601b51747 <unknown>\nE       #7 0x555601b68564 <unknown>\nE       #8 0x555601b6e3eb <unknown>\nE       #9 0x555601b425b7 <unknown>\nE       #10 0x555601b6837a <unknown>\nE       #11 0x555601bed256 <unknown>\nE       #12 0x555601bce203 <unknown>\nE       #13 0x555601b9ccc0 <unknown>\nE       #14 0x555601b9dc9e <unknown>\nE       #15 0x555602012d0b <unknown>\nE       #16 0x555602016c92 <unknown>\nE       #17 0x555601fffb3c <unknown>\nE       #18 0x555602017807 <unknown>\nE       #19 0x555601fe50df <unknown>\nE       #20 0x555602034578 <unknown>\nE       #21 0x555602034740 <unknown>\nE       #22 0x555602044196 <unknown>\nE       #23 0x7f2c2a294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1732930915917,"stop":1732930915981,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1732930915981,"stop":1732930915981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1732931918344,"stop":1732931919536,"duration":1192},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"This test checks if block 1 'home-pants' in section 2 in the Promo Block is present\n            in the DOM tree on the main page","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.576\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55560204531a <unknown>\n#1 0x555601b5b6e0 <unknown>\n#2 0x555601b439d0 <unknown>\n#3 0x555601b436a2 <unknown>\n#4 0x555601b416c6 <unknown>\n#5 0x555601b41eaf <unknown>\n#6 0x555601b51747 <unknown>\n#7 0x555601b68564 <unknown>\n#8 0x555601b6e3eb <unknown>\n#9 0x555601b425b7 <unknown>\n#10 0x555601b6837a <unknown>\n#11 0x555601bed256 <unknown>\n#12 0x555601bce203 <unknown>\n#13 0x555601b9ccc0 <unknown>\n#14 0x555601b9dc9e <unknown>\n#15 0x555602012d0b <unknown>\n#16 0x555602016c92 <unknown>\n#17 0x555601fffb3c <unknown>\n#18 0x555602017807 <unknown>\n#19 0x555601fe50df <unknown>\n#20 0x555602034578 <unknown>\n#21 0x555602034740 <unknown>\n#22 0x555602044196 <unknown>\n#23 0x7f2c2a294ac3 <unknown>","statusTrace":"self = <test_main_page.TestMainPage.TestPromoBlock object at 0x7f89cfbcb410>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b5cd9e7e43a5361a4e9e8cdbd68e7512\")>\n\n    @allure.title(\"TC 13.01.44 - Check block 1 'home-pants' in section 2 of the Promo Block is present \"\n                  \"in the DOM tree\")\n    def test_tc_13_01_44_check_block1_in_section2_is_present(self, driver):\n        \"\"\"This test checks if block 1 'home-pants' in section 2 in the Promo Block is present\n        in the DOM tree on the main page\"\"\"\n        page = PromoBlock(driver, MAIN_PAGE_URL)\n>       page.open()\n\ntests/test_main_page.py:582: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:19: in open\n    self.driver.get(self.url)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f89cfa97a10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#21 0x555602034740 \\\\u003Cunknown>\\\\n#22 0x555602044196 \\\\u003Cunknown>\\\\n#23 0x7f2c2a294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.576\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x55560204531a <unknown>\nE       #1 0x555601b5b6e0 <unknown>\nE       #2 0x555601b439d0 <unknown>\nE       #3 0x555601b436a2 <unknown>\nE       #4 0x555601b416c6 <unknown>\nE       #5 0x555601b41eaf <unknown>\nE       #6 0x555601b51747 <unknown>\nE       #7 0x555601b68564 <unknown>\nE       #8 0x555601b6e3eb <unknown>\nE       #9 0x555601b425b7 <unknown>\nE       #10 0x555601b6837a <unknown>\nE       #11 0x555601bed256 <unknown>\nE       #12 0x555601bce203 <unknown>\nE       #13 0x555601b9ccc0 <unknown>\nE       #14 0x555601b9dc9e <unknown>\nE       #15 0x555602012d0b <unknown>\nE       #16 0x555602016c92 <unknown>\nE       #17 0x555601fffb3c <unknown>\nE       #18 0x555602017807 <unknown>\nE       #19 0x555601fe50df <unknown>\nE       #20 0x555602034578 <unknown>\nE       #21 0x555602034740 <unknown>\nE       #22 0x555602044196 <unknown>\nE       #23 0x7f2c2a294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException","steps":[{"name":"Open a browser","time":{"start":1732931919536,"stop":1732932219558,"duration":300022},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.576\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55560204531a <unknown>\n#1 0x555601b5b6e0 <unknown>\n#2 0x555601b439d0 <unknown>\n#3 0x555601b436a2 <unknown>\n#4 0x555601b416c6 <unknown>\n#5 0x555601b41eaf <unknown>\n#6 0x555601b51747 <unknown>\n#7 0x555601b68564 <unknown>\n#8 0x555601b6e3eb <unknown>\n#9 0x555601b425b7 <unknown>\n#10 0x555601b6837a <unknown>\n#11 0x555601bed256 <unknown>\n#12 0x555601bce203 <unknown>\n#13 0x555601b9ccc0 <unknown>\n#14 0x555601b9dc9e <unknown>\n#15 0x555602012d0b <unknown>\n#16 0x555602016c92 <unknown>\n#17 0x555601fffb3c <unknown>\n#18 0x555602017807 <unknown>\n#19 0x555601fe50df <unknown>\n#20 0x555602034578 <unknown>\n#21 0x555602034740 <unknown>\n#22 0x555602044196 <unknown>\n#23 0x7f2c2a294ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 19, in open\n    self.driver.get(self.url)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1732932519610,"stop":1732932519705,"duration":95},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1732933874895,"stop":1732933874895,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Promo Block Testing"},{"name":"epic","value":"Main Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az1780-276"},{"name":"thread","value":"2836-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":6,"unknown":0,"total":7},"items":[{"uid":"a7767f6efc32f577","reportUrl":"https://verafes.github.io/luma_project/509//#testresult/a7767f6efc32f577","status":"passed","time":{"start":1732845633945,"stop":1732845635820,"duration":1875}},{"uid":"cfd54069c0adf2c2","reportUrl":"https://verafes.github.io/luma_project/508//#testresult/cfd54069c0adf2c2","status":"passed","time":{"start":1732759147591,"stop":1732759149423,"duration":1832}},{"uid":"2f84b80d6fc7ee8d","reportUrl":"https://verafes.github.io/luma_project/507//#testresult/2f84b80d6fc7ee8d","status":"passed","time":{"start":1732672784295,"stop":1732672786351,"duration":2056}},{"uid":"742c6466944babae","reportUrl":"https://verafes.github.io/luma_project/506//#testresult/742c6466944babae","status":"passed","time":{"start":1732588176509,"stop":1732588178270,"duration":1761}},{"uid":"2c89b33f97adb8fc","reportUrl":"https://verafes.github.io/luma_project/505//#testresult/2c89b33f97adb8fc","status":"passed","time":{"start":1732500930307,"stop":1732500933217,"duration":2910}},{"uid":"1c737f68c2186db1","reportUrl":"https://verafes.github.io/luma_project/504//#testresult/1c737f68c2186db1","status":"passed","time":{"start":1732413832851,"stop":1732413834638,"duration":1787}}]},"tags":[]},"source":"bc365d3843640956.json","parameterValues":[]}