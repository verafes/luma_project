{"uid":"17e36f853b3b4279","name":"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1","fullName":"tests.test_footer.TestFooter#test_tc_02_01_32_check_text_of_write_for_us_link_on_pages","historyId":"27d4644d484c5fead378278f7d4af6ee","time":{"start":1708477980760,"stop":1708477982143,"duration":1383},"description":"Checks if text of Write for us link is correct on each page in DATA_1","descriptionHtml":"<p>Checks if text of Write for us link is correct on each page in DATA_1</p>\n","status":"failed","statusMessage":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7f25dcc54e90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a91f9ea2140c0d1660ed3708ccdf251a\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes ' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1708477720619,"stop":1708477720685,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1708477720685,"stop":1708477720685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1708477979730,"stop":1708477980760,"duration":1030},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Checks if text of Write for us link is correct on each page in DATA_1","status":"failed","statusMessage":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","statusTrace":"self = <test_footer.TestFooter object at 0x7f25dcc54e90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a91f9ea2140c0d1660ed3708ccdf251a\")>\nURL = 'https://magento.softwaretestingboard.com/'\n\n    @allure.title(\"TC 02.01.32 - Check text of Write for us link on each page specified in DATA_1\")\n    @pytest.mark.parametrize('URL', DATA_1)\n    def test_tc_02_01_32_check_text_of_write_for_us_link_on_pages(self, driver, URL):\n        \"\"\"Checks if text of Write for us link is correct on each page in DATA_1\"\"\"\n        page = FooterPage(driver, url=URL)\n        page.open()\n        actual_text = page.check_text_of_write_for_us_link()\n        expected_text = FooterElementsText.WRITE_FOR_US_LINK_TEXT\n>       assert actual_text == expected_text, \\\n            f\"Actual text '{actual_text}' of Write for us link does not match expected '{expected_text}'\"\nE       AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nE       assert 'Notes ' == 'Write for us'\nE         - Write for us\nE         + Notes\n\ntests/test_footer.py:268: AssertionError","steps":[{"name":"Open a browser","time":{"start":1708477980760,"stop":1708477982124,"duration":1364},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check the text of Write for us link","time":{"start":1708477982124,"stop":1708477982142,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"fd969ae6db6c0dcc","name":"Screenshot","source":"fd969ae6db6c0dcc.png","type":"image/png","size":657668},{"uid":"bade75f44fffe34b","name":"HTML source","source":"bade75f44fffe34b.html","type":"text/html","size":117752}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1708477982405,"stop":1708477982472,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1708479088082,"stop":1708479088082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Test Footer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_footer"},{"name":"subSuite","value":"TestFooter"},{"name":"host","value":"fv-az711-441"},{"name":"thread","value":"3111-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"URL","value":"'https://magento.softwaretestingboard.com/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"de2dfce15516537e","reportUrl":"https://verafes.github.io/luma_project/226//#testresult/de2dfce15516537e","status":"failed","statusDetails":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1708391443608,"stop":1708391444488,"duration":880}},{"uid":"4baf5fb02705651e","reportUrl":"https://verafes.github.io/luma_project/225//#testresult/4baf5fb02705651e","status":"failed","statusDetails":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1708305193545,"stop":1708305194619,"duration":1074}},{"uid":"3796477f60866866","reportUrl":"https://verafes.github.io/luma_project/224//#testresult/3796477f60866866","status":"failed","statusDetails":"AssertionError: Actual text 'Notes ' of Write for us link does not match expected 'Write for us'\nassert 'Notes ' == 'Write for us'\n  - Write for us\n  + Notes","time":{"start":1708218961207,"stop":1708218962158,"duration":951}}]},"tags":[]},"source":"17e36f853b3b4279.json","parameterValues":["'https://magento.softwaretestingboard.com/'"]}