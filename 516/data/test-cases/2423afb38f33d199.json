{"uid":"2423afb38f33d199","name":"TC 10.01.03, 10.01.05, 10.01.07, 10.01.09, 10.01.11, 10.01.13 - Verify 6 links in Women's Deals open the correct pages","fullName":"tests.test_sale.TestSideMenuBarWomen#test_tc_10_01_03__05_07_09_11_13","historyId":"824e46eb1b34d14bba5877762f998b11","time":{"start":1733450715803,"stop":1733450717072,"duration":1269},"description":"Check that six links in Women's Deals section lead to the correct pages after click","descriptionHtml":"<p>Check that six links in Women's Deals section lead to the correct pages after click</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html\">...</a> is not clickable at point (363, 815). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x56377023431a <unknown>\n#1 0x56376fd4a6e0 <unknown>\n#2 0x56376fda00f6 <unknown>\n#3 0x56376fd9e05d <unknown>\n#4 0x56376fd9b775 <unknown>\n#5 0x56376fd9a92f <unknown>\n#6 0x56376fd8e0d5 <unknown>\n#7 0x56376fdbd462 <unknown>\n#8 0x56376fd8da18 <unknown>\n#9 0x56376fdbd62e <unknown>\n#10 0x56376fddbed7 <unknown>\n#11 0x56376fdbd203 <unknown>\n#12 0x56376fd8bcc0 <unknown>\n#13 0x56376fd8cc9e <unknown>\n#14 0x563770201d0b <unknown>\n#15 0x563770205c92 <unknown>\n#16 0x5637701eeb3c <unknown>\n#17 0x563770206807 <unknown>\n#18 0x5637701d40df <unknown>\n#19 0x563770223578 <unknown>\n#20 0x563770223740 <unknown>\n#21 0x563770233196 <unknown>\n#22 0x7f365f494ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarWomen object at 0x7f05e41b6610>\nsale_page = <pages.sale_page.SalePage object at 0x7f05e408e590>\nelement_locator = ('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(4) > a')\nexpected_title = 'Bras & Tanks - Tops - Women'\nexpected_url = 'https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html'\n\n    @allure.title(\"TC 10.01.03, 10.01.05, 10.01.07, 10.01.09, 10.01.11, 10.01.13 - \"\n                  \"Verify 6 links in Women's Deals open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            SideBarLocators.WOMEN_DEALS_ELEMENTS.values(),\n            expected_titles_w.values(),\n            expected_urls_w.values(),\n        )\n    )\n    def test_tc_10_01_03__05_07_09_11_13(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that six links in Women's Deals section lead to the correct pages after click\"\"\"\n        element_in_women_deals = sale_page.element_is_clickable(element_locator)\n>       element_in_women_deals.click()\n\ntests/test_sale.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f05e3fae790>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563770223740 \\\\u003Cunknown>\\\\n#21 0x563770233196 \\\\u003Cunknown>\\\\n#22 0x7f365f494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html\">...</a> is not clickable at point (363, 815). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x56377023431a <unknown>\nE       #1 0x56376fd4a6e0 <unknown>\nE       #2 0x56376fda00f6 <unknown>\nE       #3 0x56376fd9e05d <unknown>\nE       #4 0x56376fd9b775 <unknown>\nE       #5 0x56376fd9a92f <unknown>\nE       #6 0x56376fd8e0d5 <unknown>\nE       #7 0x56376fdbd462 <unknown>\nE       #8 0x56376fd8da18 <unknown>\nE       #9 0x56376fdbd62e <unknown>\nE       #10 0x56376fddbed7 <unknown>\nE       #11 0x56376fdbd203 <unknown>\nE       #12 0x56376fd8bcc0 <unknown>\nE       #13 0x56376fd8cc9e <unknown>\nE       #14 0x563770201d0b <unknown>\nE       #15 0x563770205c92 <unknown>\nE       #16 0x5637701eeb3c <unknown>\nE       #17 0x563770206807 <unknown>\nE       #18 0x5637701d40df <unknown>\nE       #19 0x563770223578 <unknown>\nE       #20 0x563770223740 <unknown>\nE       #21 0x563770233196 <unknown>\nE       #22 0x7f365f494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733449543994,"stop":1733449544058,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1733449544058,"stop":1733449544058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1733450712605,"stop":1733450713878,"duration":1273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sale_page","time":{"start":1733450713878,"stop":1733450715803,"duration":1925},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1733450713878,"stop":1733450715803,"duration":1925},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Check that six links in Women's Deals section lead to the correct pages after click","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html\">...</a> is not clickable at point (363, 815). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x56377023431a <unknown>\n#1 0x56376fd4a6e0 <unknown>\n#2 0x56376fda00f6 <unknown>\n#3 0x56376fd9e05d <unknown>\n#4 0x56376fd9b775 <unknown>\n#5 0x56376fd9a92f <unknown>\n#6 0x56376fd8e0d5 <unknown>\n#7 0x56376fdbd462 <unknown>\n#8 0x56376fd8da18 <unknown>\n#9 0x56376fdbd62e <unknown>\n#10 0x56376fddbed7 <unknown>\n#11 0x56376fdbd203 <unknown>\n#12 0x56376fd8bcc0 <unknown>\n#13 0x56376fd8cc9e <unknown>\n#14 0x563770201d0b <unknown>\n#15 0x563770205c92 <unknown>\n#16 0x5637701eeb3c <unknown>\n#17 0x563770206807 <unknown>\n#18 0x5637701d40df <unknown>\n#19 0x563770223578 <unknown>\n#20 0x563770223740 <unknown>\n#21 0x563770233196 <unknown>\n#22 0x7f365f494ac3 <unknown>","statusTrace":"self = <test_sale.TestSalePage.TestSideMenuBarWomen object at 0x7f05e41b6610>\nsale_page = <pages.sale_page.SalePage object at 0x7f05e408e590>\nelement_locator = ('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(4) > a')\nexpected_title = 'Bras & Tanks - Tops - Women'\nexpected_url = 'https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html'\n\n    @allure.title(\"TC 10.01.03, 10.01.05, 10.01.07, 10.01.09, 10.01.11, 10.01.13 - \"\n                  \"Verify 6 links in Women's Deals open the correct pages\")\n    @pytest.mark.parametrize(\n        \"element_locator, expected_title, expected_url\",\n        zip(\n            SideBarLocators.WOMEN_DEALS_ELEMENTS.values(),\n            expected_titles_w.values(),\n            expected_urls_w.values(),\n        )\n    )\n    def test_tc_10_01_03__05_07_09_11_13(self, sale_page, element_locator, expected_title, expected_url):\n        \"\"\"Check that six links in Women's Deals section lead to the correct pages after click\"\"\"\n        element_in_women_deals = sale_page.element_is_clickable(element_locator)\n>       element_in_women_deals.click()\n\ntests/test_sale.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f05e3fae790>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563770223740 \\\\u003Cunknown>\\\\n#21 0x563770233196 \\\\u003Cunknown>\\\\n#22 0x7f365f494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html\">...</a> is not clickable at point (363, 815). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=131.0.6778.85)\nE       Stacktrace:\nE       #0 0x56377023431a <unknown>\nE       #1 0x56376fd4a6e0 <unknown>\nE       #2 0x56376fda00f6 <unknown>\nE       #3 0x56376fd9e05d <unknown>\nE       #4 0x56376fd9b775 <unknown>\nE       #5 0x56376fd9a92f <unknown>\nE       #6 0x56376fd8e0d5 <unknown>\nE       #7 0x56376fdbd462 <unknown>\nE       #8 0x56376fd8da18 <unknown>\nE       #9 0x56376fdbd62e <unknown>\nE       #10 0x56376fddbed7 <unknown>\nE       #11 0x56376fdbd203 <unknown>\nE       #12 0x56376fd8bcc0 <unknown>\nE       #13 0x56376fd8cc9e <unknown>\nE       #14 0x563770201d0b <unknown>\nE       #15 0x563770205c92 <unknown>\nE       #16 0x5637701eeb3c <unknown>\nE       #17 0x563770206807 <unknown>\nE       #18 0x5637701d40df <unknown>\nE       #19 0x563770223578 <unknown>\nE       #20 0x563770223740 <unknown>\nE       #21 0x563770233196 <unknown>\nE       #22 0x7f365f494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Find clickable elements","time":{"start":1733450715804,"stop":1733450715833,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(4) > a')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e75ebbf8a86e45c2","name":"Screenshot","source":"e75ebbf8a86e45c2.png","type":"image/png","size":112706},{"uid":"75924e4c94031733","name":"HTML source","source":"75924e4c94031733.html","type":"text/html","size":137178}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1733450717218,"stop":1733450717296,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1733451208682,"stop":1733451208682,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Testing Side Menu Bar - Women's Deals Section"},{"name":"epic","value":"Sale Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sale"},{"name":"subSuite","value":"TestSalePage"},{"name":"host","value":"fv-az1432-566"},{"name":"thread","value":"2834-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"element_locator","value":"('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(4) > a')"},{"name":"expected_title","value":"'Bras & Tanks - Tops - Women'"},{"name":"expected_url","value":"'https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":3,"unknown":0,"total":6},"items":[{"uid":"4e097181f95f73ae","reportUrl":"https://verafes.github.io/luma_project/515//#testresult/4e097181f95f73ae","status":"passed","time":{"start":1733364365021,"stop":1733364366334,"duration":1313}},{"uid":"25ce2185d802e284","reportUrl":"https://verafes.github.io/luma_project/514//#testresult/25ce2185d802e284","status":"passed","time":{"start":1733278441009,"stop":1733278442510,"duration":1501}},{"uid":"98b810c4ce015d65","reportUrl":"https://verafes.github.io/luma_project/513//#testresult/98b810c4ce015d65","status":"passed","time":{"start":1733191655172,"stop":1733191657079,"duration":1907}},{"uid":"d82421e2aab6623b","reportUrl":"https://verafes.github.io/luma_project/512//#testresult/d82421e2aab6623b","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html\">...</a> is not clickable at point (363, 815). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x55854e45c31a <unknown>\n#1 0x55854df726e0 <unknown>\n#2 0x55854dfc80f6 <unknown>\n#3 0x55854dfc605d <unknown>\n#4 0x55854dfc3775 <unknown>\n#5 0x55854dfc292f <unknown>\n#6 0x55854dfb60d5 <unknown>\n#7 0x55854dfe5462 <unknown>\n#8 0x55854dfb5a18 <unknown>\n#9 0x55854dfe562e <unknown>\n#10 0x55854e003ed7 <unknown>\n#11 0x55854dfe5203 <unknown>\n#12 0x55854dfb3cc0 <unknown>\n#13 0x55854dfb4c9e <unknown>\n#14 0x55854e429d0b <unknown>\n#15 0x55854e42dc92 <unknown>\n#16 0x55854e416b3c <unknown>\n#17 0x55854e42e807 <unknown>\n#18 0x55854e3fc0df <unknown>\n#19 0x55854e44b578 <unknown>\n#20 0x55854e44b740 <unknown>\n#21 0x55854e45b196 <unknown>\n#22 0x7f6c1f094ac3 <unknown>","time":{"start":1733105190920,"stop":1733105192087,"duration":1167}},{"uid":"e0c73cc260bed64","reportUrl":"https://verafes.github.io/luma_project/511//#testresult/e0c73cc260bed64","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html\">...</a> is not clickable at point (363, 818). Other element would receive the click: <div id=\"aswift_5_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=131.0.6778.85)\nStacktrace:\n#0 0x56282255e31a <unknown>\n#1 0x5628220746e0 <unknown>\n#2 0x5628220ca0f6 <unknown>\n#3 0x5628220c805d <unknown>\n#4 0x5628220c5775 <unknown>\n#5 0x5628220c492f <unknown>\n#6 0x5628220b80d5 <unknown>\n#7 0x5628220e7462 <unknown>\n#8 0x5628220b7a18 <unknown>\n#9 0x5628220e762e <unknown>\n#10 0x562822105ed7 <unknown>\n#11 0x5628220e7203 <unknown>\n#12 0x5628220b5cc0 <unknown>\n#13 0x5628220b6c9e <unknown>\n#14 0x56282252bd0b <unknown>\n#15 0x56282252fc92 <unknown>\n#16 0x562822518b3c <unknown>\n#17 0x562822530807 <unknown>\n#18 0x5628224fe0df <unknown>\n#19 0x56282254d578 <unknown>\n#20 0x56282254d740 <unknown>\n#21 0x56282255d196 <unknown>\n#22 0x7fd5cbe94ac3 <unknown>","time":{"start":1733019496441,"stop":1733019497528,"duration":1087}}]},"tags":[]},"source":"2423afb38f33d199.json","parameterValues":["('css selector', '.categories-menu > ul:nth-child(2) > li:nth-child(4) > a')","'Bras & Tanks - Tops - Women'","'https://magento.softwaretestingboard.com/women/tops-women/tanks-women.html'"]}