{"uid":"acdb3a347745a2f8","name":"TC 03.01.13 Verify Password is masked","fullName":"tests.test_sign_in.TestRegisteredCustomers#test_03_01_13_password_masking","historyId":"19e9f275f34b6c763e6c7c3a2ba93b2a","time":{"start":1729822790827,"stop":1729822792144,"duration":1317},"description":"Check if the entered value is masked in password field","descriptionHtml":"<p>Check if the entered value is masked in password field</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55d688e7d0aa <unknown>\n#1 0x55d6889941a0 <unknown>\n#2 0x55d6889e7896 <unknown>\n#3 0x55d6889e582d <unknown>\n#4 0x55d6889e32d7 <unknown>\n#5 0x55d6889e26f1 <unknown>\n#6 0x55d6889d5cf8 <unknown>\n#7 0x55d688a04d82 <unknown>\n#8 0x55d6889d56d8 <unknown>\n#9 0x55d688a04f4e <unknown>\n#10 0x55d688a23866 <unknown>\n#11 0x55d688a04b23 <unknown>\n#12 0x55d6889d3990 <unknown>\n#13 0x55d6889d496e <unknown>\n#14 0x55d688e4916b <unknown>\n#15 0x55d688e4cf68 <unknown>\n#16 0x55d688e3664c <unknown>\n#17 0x55d688e4dae7 <unknown>\n#18 0x55d688e1b4af <unknown>\n#19 0x55d688e6b4f8 <unknown>\n#20 0x55d688e6b6c0 <unknown>\n#21 0x55d688e7bf26 <unknown>\n#22 0x7f98c2494ac3 <unknown>","statusTrace":"self = <test_sign_in.TestRegisteredCustomers object at 0x7f09d4107190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"32c2ee8f95ba60f1efaa2b4ffb7412a7\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f09d5757790>\n\n    @allure.title('TC 03.01.13 Verify Password is masked')\n    def test_03_01_13_password_masking(self, driver, sign_in_page):\n        \"\"\"Check if the entered value is masked in password field\"\"\"\n>       password_input = sign_in_page.check_password_value_masking(credentials['password'])\n\ntests/test_sign_in.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:96: in check_password_value_masking\n    password_input = self.fill_in_password_field(password)\npages/sign_in_page.py:88: in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f09d5d7e250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d688e6b6c0 \\\\u003Cunknown>\\\\n#21 0x55d688e7bf26 \\\\u003Cunknown>\\\\n#22 0x7f98c2494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x55d688e7d0aa <unknown>\nE       #1 0x55d6889941a0 <unknown>\nE       #2 0x55d6889e7896 <unknown>\nE       #3 0x55d6889e582d <unknown>\nE       #4 0x55d6889e32d7 <unknown>\nE       #5 0x55d6889e26f1 <unknown>\nE       #6 0x55d6889d5cf8 <unknown>\nE       #7 0x55d688a04d82 <unknown>\nE       #8 0x55d6889d56d8 <unknown>\nE       #9 0x55d688a04f4e <unknown>\nE       #10 0x55d688a23866 <unknown>\nE       #11 0x55d688a04b23 <unknown>\nE       #12 0x55d6889d3990 <unknown>\nE       #13 0x55d6889d496e <unknown>\nE       #14 0x55d688e4916b <unknown>\nE       #15 0x55d688e4cf68 <unknown>\nE       #16 0x55d688e3664c <unknown>\nE       #17 0x55d688e4dae7 <unknown>\nE       #18 0x55d688e1b4af <unknown>\nE       #19 0x55d688e6b4f8 <unknown>\nE       #20 0x55d688e6b6c0 <unknown>\nE       #21 0x55d688e7bf26 <unknown>\nE       #22 0x7f98c2494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1729820564833,"stop":1729820564898,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder","time":{"start":1729820564898,"stop":1729820564898,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1729822787482,"stop":1729822788743,"duration":1261},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"sign_in_page","time":{"start":1729822788743,"stop":1729822790826,"duration":2083},"status":"passed","steps":[{"name":"Open a browser","time":{"start":1729822788743,"stop":1729822790826,"duration":2083},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Check if the entered value is masked in password field","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55d688e7d0aa <unknown>\n#1 0x55d6889941a0 <unknown>\n#2 0x55d6889e7896 <unknown>\n#3 0x55d6889e582d <unknown>\n#4 0x55d6889e32d7 <unknown>\n#5 0x55d6889e26f1 <unknown>\n#6 0x55d6889d5cf8 <unknown>\n#7 0x55d688a04d82 <unknown>\n#8 0x55d6889d56d8 <unknown>\n#9 0x55d688a04f4e <unknown>\n#10 0x55d688a23866 <unknown>\n#11 0x55d688a04b23 <unknown>\n#12 0x55d6889d3990 <unknown>\n#13 0x55d6889d496e <unknown>\n#14 0x55d688e4916b <unknown>\n#15 0x55d688e4cf68 <unknown>\n#16 0x55d688e3664c <unknown>\n#17 0x55d688e4dae7 <unknown>\n#18 0x55d688e1b4af <unknown>\n#19 0x55d688e6b4f8 <unknown>\n#20 0x55d688e6b6c0 <unknown>\n#21 0x55d688e7bf26 <unknown>\n#22 0x7f98c2494ac3 <unknown>","statusTrace":"self = <test_sign_in.TestRegisteredCustomers object at 0x7f09d4107190>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"32c2ee8f95ba60f1efaa2b4ffb7412a7\")>\nsign_in_page = <pages.sign_in_page.SignInPage object at 0x7f09d5757790>\n\n    @allure.title('TC 03.01.13 Verify Password is masked')\n    def test_03_01_13_password_masking(self, driver, sign_in_page):\n        \"\"\"Check if the entered value is masked in password field\"\"\"\n>       password_input = sign_in_page.check_password_value_masking(credentials['password'])\n\ntests/test_sign_in.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/sign_in_page.py:96: in check_password_value_masking\n    password_input = self.fill_in_password_field(password)\npages/sign_in_page.py:88: in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\npages/base_page.py:319: in fill_in_field\n    input_field.click()\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f09d5d7e250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55d688e6b6c0 \\\\u003Cunknown>\\\\n#21 0x55d688e7bf26 \\\\u003Cunknown>\\\\n#22 0x7f98c2494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=130.0.6723.58)\nE       Stacktrace:\nE       #0 0x55d688e7d0aa <unknown>\nE       #1 0x55d6889941a0 <unknown>\nE       #2 0x55d6889e7896 <unknown>\nE       #3 0x55d6889e582d <unknown>\nE       #4 0x55d6889e32d7 <unknown>\nE       #5 0x55d6889e26f1 <unknown>\nE       #6 0x55d6889d5cf8 <unknown>\nE       #7 0x55d688a04d82 <unknown>\nE       #8 0x55d6889d56d8 <unknown>\nE       #9 0x55d688a04f4e <unknown>\nE       #10 0x55d688a23866 <unknown>\nE       #11 0x55d688a04b23 <unknown>\nE       #12 0x55d6889d3990 <unknown>\nE       #13 0x55d6889d496e <unknown>\nE       #14 0x55d688e4916b <unknown>\nE       #15 0x55d688e4cf68 <unknown>\nE       #16 0x55d688e3664c <unknown>\nE       #17 0x55d688e4dae7 <unknown>\nE       #18 0x55d688e1b4af <unknown>\nE       #19 0x55d688e6b4f8 <unknown>\nE       #20 0x55d688e6b6c0 <unknown>\nE       #21 0x55d688e7bf26 <unknown>\nE       #22 0x7f98c2494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Check Password field is clickable","time":{"start":1729822790827,"stop":1729822792144,"duration":1317},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55d688e7d0aa <unknown>\n#1 0x55d6889941a0 <unknown>\n#2 0x55d6889e7896 <unknown>\n#3 0x55d6889e582d <unknown>\n#4 0x55d6889e32d7 <unknown>\n#5 0x55d6889e26f1 <unknown>\n#6 0x55d6889d5cf8 <unknown>\n#7 0x55d688a04d82 <unknown>\n#8 0x55d6889d56d8 <unknown>\n#9 0x55d688a04f4e <unknown>\n#10 0x55d688a23866 <unknown>\n#11 0x55d688a04b23 <unknown>\n#12 0x55d6889d3990 <unknown>\n#13 0x55d6889d496e <unknown>\n#14 0x55d688e4916b <unknown>\n#15 0x55d688e4cf68 <unknown>\n#16 0x55d688e3664c <unknown>\n#17 0x55d688e4dae7 <unknown>\n#18 0x55d688e1b4af <unknown>\n#19 0x55d688e6b4f8 <unknown>\n#20 0x55d688e6b6c0 <unknown>\n#21 0x55d688e7bf26 <unknown>\n#22 0x7f98c2494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 96, in check_password_value_masking\n    password_input = self.fill_in_password_field(password)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 88, in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Fill in Password field","time":{"start":1729822790827,"stop":1729822792143,"duration":1316},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55d688e7d0aa <unknown>\n#1 0x55d6889941a0 <unknown>\n#2 0x55d6889e7896 <unknown>\n#3 0x55d6889e582d <unknown>\n#4 0x55d6889e32d7 <unknown>\n#5 0x55d6889e26f1 <unknown>\n#6 0x55d6889d5cf8 <unknown>\n#7 0x55d688a04d82 <unknown>\n#8 0x55d6889d56d8 <unknown>\n#9 0x55d688a04f4e <unknown>\n#10 0x55d688a23866 <unknown>\n#11 0x55d688a04b23 <unknown>\n#12 0x55d6889d3990 <unknown>\n#13 0x55d6889d496e <unknown>\n#14 0x55d688e4916b <unknown>\n#15 0x55d688e4cf68 <unknown>\n#16 0x55d688e3664c <unknown>\n#17 0x55d688e4dae7 <unknown>\n#18 0x55d688e1b4af <unknown>\n#19 0x55d688e6b4f8 <unknown>\n#20 0x55d688e6b6c0 <unknown>\n#21 0x55d688e7bf26 <unknown>\n#22 0x7f98c2494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/sign_in_page.py\", line 88, in fill_in_password_field\n    return self.fill_in_field(self.check_customer_password_field_is_clickable(), password)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Check Password field is clickable","time":{"start":1729822790827,"stop":1729822790891,"duration":64},"status":"passed","steps":[{"name":"Find clickable elements","time":{"start":1729822790827,"stop":1729822790891,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#pass')"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fill in a field","time":{"start":1729822790892,"stop":1729822792143,"duration":1251},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55d688e7d0aa <unknown>\n#1 0x55d6889941a0 <unknown>\n#2 0x55d6889e7896 <unknown>\n#3 0x55d6889e582d <unknown>\n#4 0x55d6889e32d7 <unknown>\n#5 0x55d6889e26f1 <unknown>\n#6 0x55d6889d5cf8 <unknown>\n#7 0x55d688a04d82 <unknown>\n#8 0x55d6889d56d8 <unknown>\n#9 0x55d688a04f4e <unknown>\n#10 0x55d688a23866 <unknown>\n#11 0x55d688a04b23 <unknown>\n#12 0x55d6889d3990 <unknown>\n#13 0x55d6889d496e <unknown>\n#14 0x55d688e4916b <unknown>\n#15 0x55d688e4cf68 <unknown>\n#16 0x55d688e3664c <unknown>\n#17 0x55d688e4dae7 <unknown>\n#18 0x55d688e1b4af <unknown>\n#19 0x55d688e6b4f8 <unknown>\n#20 0x55d688e6b6c0 <unknown>\n#21 0x55d688e7bf26 <unknown>\n#22 0x7f98c2494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/luma_project/luma_project/pages/base_page.py\", line 319, in fill_in_field\n    input_field.click()\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Find clickable elements","time":{"start":1729822790892,"stop":1729822791010,"duration":118},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"32c2ee8f95ba60f1efaa2b4ffb7412a7\", element=\"f.C84B35DFA3B4899035698DEB70F913EC.d.9D5395A25AEACDF9F64753161CB943E4.e.4\")>"},{"name":"timeout","value":"5"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"locator","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"32c2ee8f95ba60f1efaa2b4ffb7412a7\", element=\"f.C84B35DFA3B4899035698DEB70F913EC.d.9D5395A25AEACDF9F64753161CB943E4.e.4\")>"},{"name":"value","value":"'Test#12p@ssword'"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"password","value":"'Test#12p@ssword'"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"password","value":"'Test#12p@ssword'"}],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f9af82758c02fb19","name":"Screenshot","source":"f9af82758c02fb19.png","type":"image/png","size":98151},{"uid":"f7996597d4eb087d","name":"HTML source","source":"f7996597d4eb087d.html","type":"text/html","size":144604}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1729822792278,"stop":1729822792351,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_result_folder::0","time":{"start":1729823011351,"stop":1729823011351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Registered Customers"},{"name":"epic","value":"Sign In Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_sign_in"},{"name":"subSuite","value":"TestRegisteredCustomers"},{"name":"host","value":"fv-az569-105"},{"name":"thread","value":"2964-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":3,"unknown":0,"total":6},"items":[{"uid":"7f5a8e8ef71cadf9","reportUrl":"https://verafes.github.io/luma_project/473//#testresult/7f5a8e8ef71cadf9","status":"passed","time":{"start":1729735412909,"stop":1729735413370,"duration":461}},{"uid":"971cd970376b9cd","reportUrl":"https://verafes.github.io/luma_project/472//#testresult/971cd970376b9cd","status":"passed","time":{"start":1729649819284,"stop":1729649819611,"duration":327}},{"uid":"115e20ec28173201","reportUrl":"https://verafes.github.io/luma_project/471//#testresult/115e20ec28173201","status":"passed","time":{"start":1729562666466,"stop":1729562666741,"duration":275}},{"uid":"743db52ddb48ee12","reportUrl":"https://verafes.github.io/luma_project/470//#testresult/743db52ddb48ee12","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <iframe id=\"aswift_3\" name=\"aswift_3\" browsingtopics=\"true\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20241014/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-7399332034053978&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=2\" data-google-container-id=\"a!4\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CImaksu0nokDFRwUaAgd_notjA\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x5555b6e360aa <unknown>\n#1 0x5555b694d1a0 <unknown>\n#2 0x5555b69a0896 <unknown>\n#3 0x5555b699e82d <unknown>\n#4 0x5555b699c2d7 <unknown>\n#5 0x5555b699b6f1 <unknown>\n#6 0x5555b698ecf8 <unknown>\n#7 0x5555b69bdd82 <unknown>\n#8 0x5555b698e6d8 <unknown>\n#9 0x5555b69bdf4e <unknown>\n#10 0x5555b69dc866 <unknown>\n#11 0x5555b69bdb23 <unknown>\n#12 0x5555b698c990 <unknown>\n#13 0x5555b698d96e <unknown>\n#14 0x5555b6e0216b <unknown>\n#15 0x5555b6e05f68 <unknown>\n#16 0x5555b6def64c <unknown>\n#17 0x5555b6e06ae7 <unknown>\n#18 0x5555b6dd44af <unknown>\n#19 0x5555b6e244f8 <unknown>\n#20 0x5555b6e246c0 <unknown>\n#21 0x5555b6e34f26 <unknown>\n#22 0x7fa9fcc94ac3 <unknown>","time":{"start":1729477188215,"stop":1729477189556,"duration":1341}},{"uid":"3de63691997ea050","reportUrl":"https://verafes.github.io/luma_project/469//#testresult/3de63691997ea050","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input name=\"login[password]\" type=\"password\" autocomplete=\"off\" class=\"input-text\" id=\"pass\" title=\"Password\" data-validate=\"{required:true}\" aria-required=\"true\"> is not clickable at point (560, 845). Other element would receive the click: <div id=\"aswift_3_host\" style=\"border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=130.0.6723.58)\nStacktrace:\n#0 0x55d6780d20aa <unknown>\n#1 0x55d677be91a0 <unknown>\n#2 0x55d677c3c896 <unknown>\n#3 0x55d677c3a82d <unknown>\n#4 0x55d677c382d7 <unknown>\n#5 0x55d677c376f1 <unknown>\n#6 0x55d677c2acf8 <unknown>\n#7 0x55d677c59d82 <unknown>\n#8 0x55d677c2a6d8 <unknown>\n#9 0x55d677c59f4e <unknown>\n#10 0x55d677c78866 <unknown>\n#11 0x55d677c59b23 <unknown>\n#12 0x55d677c28990 <unknown>\n#13 0x55d677c2996e <unknown>\n#14 0x55d67809e16b <unknown>\n#15 0x55d6780a1f68 <unknown>\n#16 0x55d67808b64c <unknown>\n#17 0x55d6780a2ae7 <unknown>\n#18 0x55d6780704af <unknown>\n#19 0x55d6780c04f8 <unknown>\n#20 0x55d6780c06c0 <unknown>\n#21 0x55d6780d0f26 <unknown>\n#22 0x7ff161094ac3 <unknown>","time":{"start":1729390398736,"stop":1729390399979,"duration":1243}}]},"tags":[]},"source":"acdb3a347745a2f8.json","parameterValues":[]}